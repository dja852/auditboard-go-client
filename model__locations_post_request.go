/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the LocationsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationsPostRequest{}

// LocationsPostRequest struct for LocationsPostRequest
type LocationsPostRequest struct {
	Location *Locations `json:"location,omitempty"`
}

// NewLocationsPostRequest instantiates a new LocationsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationsPostRequest() *LocationsPostRequest {
	this := LocationsPostRequest{}
	return &this
}

// NewLocationsPostRequestWithDefaults instantiates a new LocationsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationsPostRequestWithDefaults() *LocationsPostRequest {
	this := LocationsPostRequest{}
	return &this
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *LocationsPostRequest) GetLocation() Locations {
	if o == nil || IsNil(o.Location) {
		var ret Locations
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationsPostRequest) GetLocationOk() (*Locations, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *LocationsPostRequest) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given Locations and assigns it to the Location field.
func (o *LocationsPostRequest) SetLocation(v Locations) {
	o.Location = &v
}

func (o LocationsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	return toSerialize, nil
}

type NullableLocationsPostRequest struct {
	value *LocationsPostRequest
	isSet bool
}

func (v NullableLocationsPostRequest) Get() *LocationsPostRequest {
	return v.value
}

func (v *NullableLocationsPostRequest) Set(val *LocationsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationsPostRequest(val *LocationsPostRequest) *NullableLocationsPostRequest {
	return &NullableLocationsPostRequest{value: val, isSet: true}
}

func (v NullableLocationsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


