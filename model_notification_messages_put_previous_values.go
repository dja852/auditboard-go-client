/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the NotificationMessagesPutPreviousValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationMessagesPutPreviousValues{}

// NotificationMessagesPutPreviousValues struct for NotificationMessagesPutPreviousValues
type NotificationMessagesPutPreviousValues struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	FromUserId *int32 `json:"from_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ToUserId *int32 `json:"to_user_id,omitempty"`
	Type *string `json:"type,omitempty"`
	Status *string `json:"status,omitempty"`
	IsRead *bool `json:"is_read,omitempty"`
	Message *string `json:"message,omitempty"`
	RawData *string `json:"raw_data,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
}

// NewNotificationMessagesPutPreviousValues instantiates a new NotificationMessagesPutPreviousValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationMessagesPutPreviousValues() *NotificationMessagesPutPreviousValues {
	this := NotificationMessagesPutPreviousValues{}
	return &this
}

// NewNotificationMessagesPutPreviousValuesWithDefaults instantiates a new NotificationMessagesPutPreviousValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationMessagesPutPreviousValuesWithDefaults() *NotificationMessagesPutPreviousValues {
	this := NotificationMessagesPutPreviousValues{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *NotificationMessagesPutPreviousValues) SetId(v int32) {
	o.Id = &v
}

// GetFromUserId returns the FromUserId field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetFromUserId() int32 {
	if o == nil || IsNil(o.FromUserId) {
		var ret int32
		return ret
	}
	return *o.FromUserId
}

// GetFromUserIdOk returns a tuple with the FromUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetFromUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FromUserId) {
		return nil, false
	}
	return o.FromUserId, true
}

// HasFromUserId returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasFromUserId() bool {
	if o != nil && !IsNil(o.FromUserId) {
		return true
	}

	return false
}

// SetFromUserId gets a reference to the given int32 and assigns it to the FromUserId field.
func (o *NotificationMessagesPutPreviousValues) SetFromUserId(v int32) {
	o.FromUserId = &v
}

// GetToUserId returns the ToUserId field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetToUserId() int32 {
	if o == nil || IsNil(o.ToUserId) {
		var ret int32
		return ret
	}
	return *o.ToUserId
}

// GetToUserIdOk returns a tuple with the ToUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetToUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ToUserId) {
		return nil, false
	}
	return o.ToUserId, true
}

// HasToUserId returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasToUserId() bool {
	if o != nil && !IsNil(o.ToUserId) {
		return true
	}

	return false
}

// SetToUserId gets a reference to the given int32 and assigns it to the ToUserId field.
func (o *NotificationMessagesPutPreviousValues) SetToUserId(v int32) {
	o.ToUserId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NotificationMessagesPutPreviousValues) SetType(v string) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *NotificationMessagesPutPreviousValues) SetStatus(v string) {
	o.Status = &v
}

// GetIsRead returns the IsRead field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetIsRead() bool {
	if o == nil || IsNil(o.IsRead) {
		var ret bool
		return ret
	}
	return *o.IsRead
}

// GetIsReadOk returns a tuple with the IsRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetIsReadOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRead) {
		return nil, false
	}
	return o.IsRead, true
}

// HasIsRead returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasIsRead() bool {
	if o != nil && !IsNil(o.IsRead) {
		return true
	}

	return false
}

// SetIsRead gets a reference to the given bool and assigns it to the IsRead field.
func (o *NotificationMessagesPutPreviousValues) SetIsRead(v bool) {
	o.IsRead = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *NotificationMessagesPutPreviousValues) SetMessage(v string) {
	o.Message = &v
}

// GetRawData returns the RawData field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetRawData() string {
	if o == nil || IsNil(o.RawData) {
		var ret string
		return ret
	}
	return *o.RawData
}

// GetRawDataOk returns a tuple with the RawData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetRawDataOk() (*string, bool) {
	if o == nil || IsNil(o.RawData) {
		return nil, false
	}
	return o.RawData, true
}

// HasRawData returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasRawData() bool {
	if o != nil && !IsNil(o.RawData) {
		return true
	}

	return false
}

// SetRawData gets a reference to the given string and assigns it to the RawData field.
func (o *NotificationMessagesPutPreviousValues) SetRawData(v string) {
	o.RawData = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *NotificationMessagesPutPreviousValues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *NotificationMessagesPutPreviousValues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *NotificationMessagesPutPreviousValues) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesPutPreviousValues) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *NotificationMessagesPutPreviousValues) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *NotificationMessagesPutPreviousValues) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

func (o NotificationMessagesPutPreviousValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationMessagesPutPreviousValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FromUserId) {
		toSerialize["from_user_id"] = o.FromUserId
	}
	if !IsNil(o.ToUserId) {
		toSerialize["to_user_id"] = o.ToUserId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.IsRead) {
		toSerialize["is_read"] = o.IsRead
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.RawData) {
		toSerialize["raw_data"] = o.RawData
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	return toSerialize, nil
}

type NullableNotificationMessagesPutPreviousValues struct {
	value *NotificationMessagesPutPreviousValues
	isSet bool
}

func (v NullableNotificationMessagesPutPreviousValues) Get() *NotificationMessagesPutPreviousValues {
	return v.value
}

func (v *NullableNotificationMessagesPutPreviousValues) Set(val *NotificationMessagesPutPreviousValues) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationMessagesPutPreviousValues) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationMessagesPutPreviousValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationMessagesPutPreviousValues(val *NotificationMessagesPutPreviousValues) *NullableNotificationMessagesPutPreviousValues {
	return &NullableNotificationMessagesPutPreviousValues{value: val, isSet: true}
}

func (v NullableNotificationMessagesPutPreviousValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationMessagesPutPreviousValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


