/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the OpsAuditStart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpsAuditStart{}

// OpsAuditStart struct for OpsAuditStart
type OpsAuditStart struct {
	OpsAudits []OpsAudits `json:"ops_audits,omitempty"`
	GlobalAudits []GlobalAudits `json:"global_audits,omitempty"`
}

// NewOpsAuditStart instantiates a new OpsAuditStart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsAuditStart() *OpsAuditStart {
	this := OpsAuditStart{}
	return &this
}

// NewOpsAuditStartWithDefaults instantiates a new OpsAuditStart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsAuditStartWithDefaults() *OpsAuditStart {
	this := OpsAuditStart{}
	return &this
}

// GetOpsAudits returns the OpsAudits field value if set, zero value otherwise.
func (o *OpsAuditStart) GetOpsAudits() []OpsAudits {
	if o == nil || IsNil(o.OpsAudits) {
		var ret []OpsAudits
		return ret
	}
	return o.OpsAudits
}

// GetOpsAuditsOk returns a tuple with the OpsAudits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditStart) GetOpsAuditsOk() ([]OpsAudits, bool) {
	if o == nil || IsNil(o.OpsAudits) {
		return nil, false
	}
	return o.OpsAudits, true
}

// HasOpsAudits returns a boolean if a field has been set.
func (o *OpsAuditStart) HasOpsAudits() bool {
	if o != nil && !IsNil(o.OpsAudits) {
		return true
	}

	return false
}

// SetOpsAudits gets a reference to the given []OpsAudits and assigns it to the OpsAudits field.
func (o *OpsAuditStart) SetOpsAudits(v []OpsAudits) {
	o.OpsAudits = v
}

// GetGlobalAudits returns the GlobalAudits field value if set, zero value otherwise.
func (o *OpsAuditStart) GetGlobalAudits() []GlobalAudits {
	if o == nil || IsNil(o.GlobalAudits) {
		var ret []GlobalAudits
		return ret
	}
	return o.GlobalAudits
}

// GetGlobalAuditsOk returns a tuple with the GlobalAudits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditStart) GetGlobalAuditsOk() ([]GlobalAudits, bool) {
	if o == nil || IsNil(o.GlobalAudits) {
		return nil, false
	}
	return o.GlobalAudits, true
}

// HasGlobalAudits returns a boolean if a field has been set.
func (o *OpsAuditStart) HasGlobalAudits() bool {
	if o != nil && !IsNil(o.GlobalAudits) {
		return true
	}

	return false
}

// SetGlobalAudits gets a reference to the given []GlobalAudits and assigns it to the GlobalAudits field.
func (o *OpsAuditStart) SetGlobalAudits(v []GlobalAudits) {
	o.GlobalAudits = v
}

func (o OpsAuditStart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpsAuditStart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpsAudits) {
		toSerialize["ops_audits"] = o.OpsAudits
	}
	if !IsNil(o.GlobalAudits) {
		toSerialize["global_audits"] = o.GlobalAudits
	}
	return toSerialize, nil
}

type NullableOpsAuditStart struct {
	value *OpsAuditStart
	isSet bool
}

func (v NullableOpsAuditStart) Get() *OpsAuditStart {
	return v.value
}

func (v *NullableOpsAuditStart) Set(val *OpsAuditStart) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsAuditStart) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsAuditStart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsAuditStart(val *OpsAuditStart) *NullableOpsAuditStart {
	return &NullableOpsAuditStart{value: val, isSet: true}
}

func (v NullableOpsAuditStart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsAuditStart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


