/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the UsersPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersPostRequest{}

// UsersPostRequest struct for UsersPostRequest
type UsersPostRequest struct {
	User *Users `json:"user,omitempty"`
}

// NewUsersPostRequest instantiates a new UsersPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersPostRequest() *UsersPostRequest {
	this := UsersPostRequest{}
	return &this
}

// NewUsersPostRequestWithDefaults instantiates a new UsersPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersPostRequestWithDefaults() *UsersPostRequest {
	this := UsersPostRequest{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UsersPostRequest) GetUser() Users {
	if o == nil || IsNil(o.User) {
		var ret Users
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersPostRequest) GetUserOk() (*Users, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *UsersPostRequest) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given Users and assigns it to the User field.
func (o *UsersPostRequest) SetUser(v Users) {
	o.User = &v
}

func (o UsersPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableUsersPostRequest struct {
	value *UsersPostRequest
	isSet bool
}

func (v NullableUsersPostRequest) Get() *UsersPostRequest {
	return v.value
}

func (v *NullableUsersPostRequest) Set(val *UsersPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersPostRequest(val *UsersPostRequest) *NullableUsersPostRequest {
	return &NullableUsersPostRequest{value: val, isSet: true}
}

func (v NullableUsersPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


