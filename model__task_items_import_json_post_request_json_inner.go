/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TaskItemsImportJsonPostRequestJsonInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskItemsImportJsonPostRequestJsonInner{}

// TaskItemsImportJsonPostRequestJsonInner struct for TaskItemsImportJsonPostRequestJsonInner
type TaskItemsImportJsonPostRequestJsonInner struct {
	ReviewerUserId *string `json:"reviewer_user_id,omitempty"`
	AssigneeUserId *string `json:"assignee_user_id,omitempty"`
	AdditionalAssigneeUserIds []interface{} `json:"additional_assignee_user_ids,omitempty"`
	SubscriberUserIds []interface{} `json:"subscriber_user_ids,omitempty"`
	DueDate *string `json:"due_date,omitempty"`
	ActionPlanId *int32 `json:"action_plan_id,omitempty"`
	IssueId *int32 `json:"issue_id,omitempty"`
	Title *string `json:"title,omitempty"`
	TaskGroupId *string `json:"task_group_id,omitempty"`
	TaskCategoryId *string `json:"task_category_id,omitempty"`
	SurveyId *string `json:"survey_id,omitempty"`
	TaskPeriodId *string `json:"task_period_id,omitempty"`
	TestSectionId *string `json:"test_section_id,omitempty"`
	Id *int32 `json:"id,omitempty"`
}

// NewTaskItemsImportJsonPostRequestJsonInner instantiates a new TaskItemsImportJsonPostRequestJsonInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskItemsImportJsonPostRequestJsonInner() *TaskItemsImportJsonPostRequestJsonInner {
	this := TaskItemsImportJsonPostRequestJsonInner{}
	return &this
}

// NewTaskItemsImportJsonPostRequestJsonInnerWithDefaults instantiates a new TaskItemsImportJsonPostRequestJsonInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskItemsImportJsonPostRequestJsonInnerWithDefaults() *TaskItemsImportJsonPostRequestJsonInner {
	this := TaskItemsImportJsonPostRequestJsonInner{}
	return &this
}

// GetReviewerUserId returns the ReviewerUserId field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetReviewerUserId() string {
	if o == nil || IsNil(o.ReviewerUserId) {
		var ret string
		return ret
	}
	return *o.ReviewerUserId
}

// GetReviewerUserIdOk returns a tuple with the ReviewerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetReviewerUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReviewerUserId) {
		return nil, false
	}
	return o.ReviewerUserId, true
}

// HasReviewerUserId returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasReviewerUserId() bool {
	if o != nil && !IsNil(o.ReviewerUserId) {
		return true
	}

	return false
}

// SetReviewerUserId gets a reference to the given string and assigns it to the ReviewerUserId field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetReviewerUserId(v string) {
	o.ReviewerUserId = &v
}

// GetAssigneeUserId returns the AssigneeUserId field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetAssigneeUserId() string {
	if o == nil || IsNil(o.AssigneeUserId) {
		var ret string
		return ret
	}
	return *o.AssigneeUserId
}

// GetAssigneeUserIdOk returns a tuple with the AssigneeUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetAssigneeUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssigneeUserId) {
		return nil, false
	}
	return o.AssigneeUserId, true
}

// HasAssigneeUserId returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasAssigneeUserId() bool {
	if o != nil && !IsNil(o.AssigneeUserId) {
		return true
	}

	return false
}

// SetAssigneeUserId gets a reference to the given string and assigns it to the AssigneeUserId field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetAssigneeUserId(v string) {
	o.AssigneeUserId = &v
}

// GetAdditionalAssigneeUserIds returns the AdditionalAssigneeUserIds field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetAdditionalAssigneeUserIds() []interface{} {
	if o == nil || IsNil(o.AdditionalAssigneeUserIds) {
		var ret []interface{}
		return ret
	}
	return o.AdditionalAssigneeUserIds
}

// GetAdditionalAssigneeUserIdsOk returns a tuple with the AdditionalAssigneeUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetAdditionalAssigneeUserIdsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalAssigneeUserIds) {
		return nil, false
	}
	return o.AdditionalAssigneeUserIds, true
}

// HasAdditionalAssigneeUserIds returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasAdditionalAssigneeUserIds() bool {
	if o != nil && !IsNil(o.AdditionalAssigneeUserIds) {
		return true
	}

	return false
}

// SetAdditionalAssigneeUserIds gets a reference to the given []interface{} and assigns it to the AdditionalAssigneeUserIds field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetAdditionalAssigneeUserIds(v []interface{}) {
	o.AdditionalAssigneeUserIds = v
}

// GetSubscriberUserIds returns the SubscriberUserIds field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetSubscriberUserIds() []interface{} {
	if o == nil || IsNil(o.SubscriberUserIds) {
		var ret []interface{}
		return ret
	}
	return o.SubscriberUserIds
}

// GetSubscriberUserIdsOk returns a tuple with the SubscriberUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetSubscriberUserIdsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.SubscriberUserIds) {
		return nil, false
	}
	return o.SubscriberUserIds, true
}

// HasSubscriberUserIds returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasSubscriberUserIds() bool {
	if o != nil && !IsNil(o.SubscriberUserIds) {
		return true
	}

	return false
}

// SetSubscriberUserIds gets a reference to the given []interface{} and assigns it to the SubscriberUserIds field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetSubscriberUserIds(v []interface{}) {
	o.SubscriberUserIds = v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetDueDate(v string) {
	o.DueDate = &v
}

// GetActionPlanId returns the ActionPlanId field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetActionPlanId() int32 {
	if o == nil || IsNil(o.ActionPlanId) {
		var ret int32
		return ret
	}
	return *o.ActionPlanId
}

// GetActionPlanIdOk returns a tuple with the ActionPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetActionPlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ActionPlanId) {
		return nil, false
	}
	return o.ActionPlanId, true
}

// HasActionPlanId returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasActionPlanId() bool {
	if o != nil && !IsNil(o.ActionPlanId) {
		return true
	}

	return false
}

// SetActionPlanId gets a reference to the given int32 and assigns it to the ActionPlanId field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetActionPlanId(v int32) {
	o.ActionPlanId = &v
}

// GetIssueId returns the IssueId field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetIssueId() int32 {
	if o == nil || IsNil(o.IssueId) {
		var ret int32
		return ret
	}
	return *o.IssueId
}

// GetIssueIdOk returns a tuple with the IssueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetIssueIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueId) {
		return nil, false
	}
	return o.IssueId, true
}

// HasIssueId returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasIssueId() bool {
	if o != nil && !IsNil(o.IssueId) {
		return true
	}

	return false
}

// SetIssueId gets a reference to the given int32 and assigns it to the IssueId field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetIssueId(v int32) {
	o.IssueId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetTitle(v string) {
	o.Title = &v
}

// GetTaskGroupId returns the TaskGroupId field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetTaskGroupId() string {
	if o == nil || IsNil(o.TaskGroupId) {
		var ret string
		return ret
	}
	return *o.TaskGroupId
}

// GetTaskGroupIdOk returns a tuple with the TaskGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetTaskGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskGroupId) {
		return nil, false
	}
	return o.TaskGroupId, true
}

// HasTaskGroupId returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasTaskGroupId() bool {
	if o != nil && !IsNil(o.TaskGroupId) {
		return true
	}

	return false
}

// SetTaskGroupId gets a reference to the given string and assigns it to the TaskGroupId field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetTaskGroupId(v string) {
	o.TaskGroupId = &v
}

// GetTaskCategoryId returns the TaskCategoryId field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetTaskCategoryId() string {
	if o == nil || IsNil(o.TaskCategoryId) {
		var ret string
		return ret
	}
	return *o.TaskCategoryId
}

// GetTaskCategoryIdOk returns a tuple with the TaskCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetTaskCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskCategoryId) {
		return nil, false
	}
	return o.TaskCategoryId, true
}

// HasTaskCategoryId returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasTaskCategoryId() bool {
	if o != nil && !IsNil(o.TaskCategoryId) {
		return true
	}

	return false
}

// SetTaskCategoryId gets a reference to the given string and assigns it to the TaskCategoryId field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetTaskCategoryId(v string) {
	o.TaskCategoryId = &v
}

// GetSurveyId returns the SurveyId field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetSurveyId() string {
	if o == nil || IsNil(o.SurveyId) {
		var ret string
		return ret
	}
	return *o.SurveyId
}

// GetSurveyIdOk returns a tuple with the SurveyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetSurveyIdOk() (*string, bool) {
	if o == nil || IsNil(o.SurveyId) {
		return nil, false
	}
	return o.SurveyId, true
}

// HasSurveyId returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasSurveyId() bool {
	if o != nil && !IsNil(o.SurveyId) {
		return true
	}

	return false
}

// SetSurveyId gets a reference to the given string and assigns it to the SurveyId field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetSurveyId(v string) {
	o.SurveyId = &v
}

// GetTaskPeriodId returns the TaskPeriodId field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetTaskPeriodId() string {
	if o == nil || IsNil(o.TaskPeriodId) {
		var ret string
		return ret
	}
	return *o.TaskPeriodId
}

// GetTaskPeriodIdOk returns a tuple with the TaskPeriodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetTaskPeriodIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskPeriodId) {
		return nil, false
	}
	return o.TaskPeriodId, true
}

// HasTaskPeriodId returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasTaskPeriodId() bool {
	if o != nil && !IsNil(o.TaskPeriodId) {
		return true
	}

	return false
}

// SetTaskPeriodId gets a reference to the given string and assigns it to the TaskPeriodId field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetTaskPeriodId(v string) {
	o.TaskPeriodId = &v
}

// GetTestSectionId returns the TestSectionId field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetTestSectionId() string {
	if o == nil || IsNil(o.TestSectionId) {
		var ret string
		return ret
	}
	return *o.TestSectionId
}

// GetTestSectionIdOk returns a tuple with the TestSectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetTestSectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TestSectionId) {
		return nil, false
	}
	return o.TestSectionId, true
}

// HasTestSectionId returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasTestSectionId() bool {
	if o != nil && !IsNil(o.TestSectionId) {
		return true
	}

	return false
}

// SetTestSectionId gets a reference to the given string and assigns it to the TestSectionId field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetTestSectionId(v string) {
	o.TestSectionId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TaskItemsImportJsonPostRequestJsonInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TaskItemsImportJsonPostRequestJsonInner) SetId(v int32) {
	o.Id = &v
}

func (o TaskItemsImportJsonPostRequestJsonInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskItemsImportJsonPostRequestJsonInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReviewerUserId) {
		toSerialize["reviewer_user_id"] = o.ReviewerUserId
	}
	if !IsNil(o.AssigneeUserId) {
		toSerialize["assignee_user_id"] = o.AssigneeUserId
	}
	if !IsNil(o.AdditionalAssigneeUserIds) {
		toSerialize["additional_assignee_user_ids"] = o.AdditionalAssigneeUserIds
	}
	if !IsNil(o.SubscriberUserIds) {
		toSerialize["subscriber_user_ids"] = o.SubscriberUserIds
	}
	if !IsNil(o.DueDate) {
		toSerialize["due_date"] = o.DueDate
	}
	if !IsNil(o.ActionPlanId) {
		toSerialize["action_plan_id"] = o.ActionPlanId
	}
	if !IsNil(o.IssueId) {
		toSerialize["issue_id"] = o.IssueId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.TaskGroupId) {
		toSerialize["task_group_id"] = o.TaskGroupId
	}
	if !IsNil(o.TaskCategoryId) {
		toSerialize["task_category_id"] = o.TaskCategoryId
	}
	if !IsNil(o.SurveyId) {
		toSerialize["survey_id"] = o.SurveyId
	}
	if !IsNil(o.TaskPeriodId) {
		toSerialize["task_period_id"] = o.TaskPeriodId
	}
	if !IsNil(o.TestSectionId) {
		toSerialize["test_section_id"] = o.TestSectionId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableTaskItemsImportJsonPostRequestJsonInner struct {
	value *TaskItemsImportJsonPostRequestJsonInner
	isSet bool
}

func (v NullableTaskItemsImportJsonPostRequestJsonInner) Get() *TaskItemsImportJsonPostRequestJsonInner {
	return v.value
}

func (v *NullableTaskItemsImportJsonPostRequestJsonInner) Set(val *TaskItemsImportJsonPostRequestJsonInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskItemsImportJsonPostRequestJsonInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskItemsImportJsonPostRequestJsonInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskItemsImportJsonPostRequestJsonInner(val *TaskItemsImportJsonPostRequestJsonInner) *NullableTaskItemsImportJsonPostRequestJsonInner {
	return &NullableTaskItemsImportJsonPostRequestJsonInner{value: val, isSet: true}
}

func (v NullableTaskItemsImportJsonPostRequestJsonInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskItemsImportJsonPostRequestJsonInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


