/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AuditableEntitiesPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditableEntitiesPut{}

// AuditableEntitiesPut struct for AuditableEntitiesPut
type AuditableEntitiesPut struct {
	AuditableEntity *AuditableEntitiesPutAuditableEntity `json:"auditable_entity,omitempty"`
	PreviousValues *AuditableEntitiesPutPreviousValues `json:"previous_values,omitempty"`
}

// NewAuditableEntitiesPut instantiates a new AuditableEntitiesPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditableEntitiesPut() *AuditableEntitiesPut {
	this := AuditableEntitiesPut{}
	return &this
}

// NewAuditableEntitiesPutWithDefaults instantiates a new AuditableEntitiesPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditableEntitiesPutWithDefaults() *AuditableEntitiesPut {
	this := AuditableEntitiesPut{}
	return &this
}

// GetAuditableEntity returns the AuditableEntity field value if set, zero value otherwise.
func (o *AuditableEntitiesPut) GetAuditableEntity() AuditableEntitiesPutAuditableEntity {
	if o == nil || IsNil(o.AuditableEntity) {
		var ret AuditableEntitiesPutAuditableEntity
		return ret
	}
	return *o.AuditableEntity
}

// GetAuditableEntityOk returns a tuple with the AuditableEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditableEntitiesPut) GetAuditableEntityOk() (*AuditableEntitiesPutAuditableEntity, bool) {
	if o == nil || IsNil(o.AuditableEntity) {
		return nil, false
	}
	return o.AuditableEntity, true
}

// HasAuditableEntity returns a boolean if a field has been set.
func (o *AuditableEntitiesPut) HasAuditableEntity() bool {
	if o != nil && !IsNil(o.AuditableEntity) {
		return true
	}

	return false
}

// SetAuditableEntity gets a reference to the given AuditableEntitiesPutAuditableEntity and assigns it to the AuditableEntity field.
func (o *AuditableEntitiesPut) SetAuditableEntity(v AuditableEntitiesPutAuditableEntity) {
	o.AuditableEntity = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *AuditableEntitiesPut) GetPreviousValues() AuditableEntitiesPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret AuditableEntitiesPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditableEntitiesPut) GetPreviousValuesOk() (*AuditableEntitiesPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *AuditableEntitiesPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given AuditableEntitiesPutPreviousValues and assigns it to the PreviousValues field.
func (o *AuditableEntitiesPut) SetPreviousValues(v AuditableEntitiesPutPreviousValues) {
	o.PreviousValues = &v
}

func (o AuditableEntitiesPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditableEntitiesPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditableEntity) {
		toSerialize["auditable_entity"] = o.AuditableEntity
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableAuditableEntitiesPut struct {
	value *AuditableEntitiesPut
	isSet bool
}

func (v NullableAuditableEntitiesPut) Get() *AuditableEntitiesPut {
	return v.value
}

func (v *NullableAuditableEntitiesPut) Set(val *AuditableEntitiesPut) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditableEntitiesPut) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditableEntitiesPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditableEntitiesPut(val *AuditableEntitiesPut) *NullableAuditableEntitiesPut {
	return &NullableAuditableEntitiesPut{value: val, isSet: true}
}

func (v NullableAuditableEntitiesPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditableEntitiesPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


