/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the GlobalAuditsPutPreviousValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalAuditsPutPreviousValues{}

// GlobalAuditsPutPreviousValues struct for GlobalAuditsPutPreviousValues
type GlobalAuditsPutPreviousValues struct {
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	UserId *int32 `json:"user_id,omitempty"`
	LoggableId *int32 `json:"loggable_id,omitempty"`
	LoggableType *string `json:"loggable_type,omitempty"`
	Action *string `json:"action,omitempty"`
	Field *string `json:"field,omitempty"`
	FromValue *string `json:"from_value,omitempty"`
	ToValue *string `json:"to_value,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewGlobalAuditsPutPreviousValues instantiates a new GlobalAuditsPutPreviousValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalAuditsPutPreviousValues() *GlobalAuditsPutPreviousValues {
	this := GlobalAuditsPutPreviousValues{}
	return &this
}

// NewGlobalAuditsPutPreviousValuesWithDefaults instantiates a new GlobalAuditsPutPreviousValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalAuditsPutPreviousValuesWithDefaults() *GlobalAuditsPutPreviousValues {
	this := GlobalAuditsPutPreviousValues{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GlobalAuditsPutPreviousValues) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GlobalAuditsPutPreviousValues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GlobalAuditsPutPreviousValues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *GlobalAuditsPutPreviousValues) SetUserId(v int32) {
	o.UserId = &v
}

// GetLoggableId returns the LoggableId field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetLoggableId() int32 {
	if o == nil || IsNil(o.LoggableId) {
		var ret int32
		return ret
	}
	return *o.LoggableId
}

// GetLoggableIdOk returns a tuple with the LoggableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetLoggableIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LoggableId) {
		return nil, false
	}
	return o.LoggableId, true
}

// HasLoggableId returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasLoggableId() bool {
	if o != nil && !IsNil(o.LoggableId) {
		return true
	}

	return false
}

// SetLoggableId gets a reference to the given int32 and assigns it to the LoggableId field.
func (o *GlobalAuditsPutPreviousValues) SetLoggableId(v int32) {
	o.LoggableId = &v
}

// GetLoggableType returns the LoggableType field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetLoggableType() string {
	if o == nil || IsNil(o.LoggableType) {
		var ret string
		return ret
	}
	return *o.LoggableType
}

// GetLoggableTypeOk returns a tuple with the LoggableType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetLoggableTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LoggableType) {
		return nil, false
	}
	return o.LoggableType, true
}

// HasLoggableType returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasLoggableType() bool {
	if o != nil && !IsNil(o.LoggableType) {
		return true
	}

	return false
}

// SetLoggableType gets a reference to the given string and assigns it to the LoggableType field.
func (o *GlobalAuditsPutPreviousValues) SetLoggableType(v string) {
	o.LoggableType = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *GlobalAuditsPutPreviousValues) SetAction(v string) {
	o.Action = &v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *GlobalAuditsPutPreviousValues) SetField(v string) {
	o.Field = &v
}

// GetFromValue returns the FromValue field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetFromValue() string {
	if o == nil || IsNil(o.FromValue) {
		var ret string
		return ret
	}
	return *o.FromValue
}

// GetFromValueOk returns a tuple with the FromValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetFromValueOk() (*string, bool) {
	if o == nil || IsNil(o.FromValue) {
		return nil, false
	}
	return o.FromValue, true
}

// HasFromValue returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasFromValue() bool {
	if o != nil && !IsNil(o.FromValue) {
		return true
	}

	return false
}

// SetFromValue gets a reference to the given string and assigns it to the FromValue field.
func (o *GlobalAuditsPutPreviousValues) SetFromValue(v string) {
	o.FromValue = &v
}

// GetToValue returns the ToValue field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetToValue() string {
	if o == nil || IsNil(o.ToValue) {
		var ret string
		return ret
	}
	return *o.ToValue
}

// GetToValueOk returns a tuple with the ToValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetToValueOk() (*string, bool) {
	if o == nil || IsNil(o.ToValue) {
		return nil, false
	}
	return o.ToValue, true
}

// HasToValue returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasToValue() bool {
	if o != nil && !IsNil(o.ToValue) {
		return true
	}

	return false
}

// SetToValue gets a reference to the given string and assigns it to the ToValue field.
func (o *GlobalAuditsPutPreviousValues) SetToValue(v string) {
	o.ToValue = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GlobalAuditsPutPreviousValues) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPutPreviousValues) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GlobalAuditsPutPreviousValues) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GlobalAuditsPutPreviousValues) SetMessage(v string) {
	o.Message = &v
}

func (o GlobalAuditsPutPreviousValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalAuditsPutPreviousValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.LoggableId) {
		toSerialize["loggable_id"] = o.LoggableId
	}
	if !IsNil(o.LoggableType) {
		toSerialize["loggable_type"] = o.LoggableType
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.FromValue) {
		toSerialize["from_value"] = o.FromValue
	}
	if !IsNil(o.ToValue) {
		toSerialize["to_value"] = o.ToValue
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableGlobalAuditsPutPreviousValues struct {
	value *GlobalAuditsPutPreviousValues
	isSet bool
}

func (v NullableGlobalAuditsPutPreviousValues) Get() *GlobalAuditsPutPreviousValues {
	return v.value
}

func (v *NullableGlobalAuditsPutPreviousValues) Set(val *GlobalAuditsPutPreviousValues) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalAuditsPutPreviousValues) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalAuditsPutPreviousValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalAuditsPutPreviousValues(val *GlobalAuditsPutPreviousValues) *NullableGlobalAuditsPutPreviousValues {
	return &NullableGlobalAuditsPutPreviousValues{value: val, isSet: true}
}

func (v NullableGlobalAuditsPutPreviousValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalAuditsPutPreviousValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


