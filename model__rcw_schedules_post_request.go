/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RcwSchedulesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RcwSchedulesPostRequest{}

// RcwSchedulesPostRequest struct for RcwSchedulesPostRequest
type RcwSchedulesPostRequest struct {
	RcwSchedule *RcwSchedules `json:"rcw_schedule,omitempty"`
}

// NewRcwSchedulesPostRequest instantiates a new RcwSchedulesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRcwSchedulesPostRequest() *RcwSchedulesPostRequest {
	this := RcwSchedulesPostRequest{}
	return &this
}

// NewRcwSchedulesPostRequestWithDefaults instantiates a new RcwSchedulesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRcwSchedulesPostRequestWithDefaults() *RcwSchedulesPostRequest {
	this := RcwSchedulesPostRequest{}
	return &this
}

// GetRcwSchedule returns the RcwSchedule field value if set, zero value otherwise.
func (o *RcwSchedulesPostRequest) GetRcwSchedule() RcwSchedules {
	if o == nil || IsNil(o.RcwSchedule) {
		var ret RcwSchedules
		return ret
	}
	return *o.RcwSchedule
}

// GetRcwScheduleOk returns a tuple with the RcwSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RcwSchedulesPostRequest) GetRcwScheduleOk() (*RcwSchedules, bool) {
	if o == nil || IsNil(o.RcwSchedule) {
		return nil, false
	}
	return o.RcwSchedule, true
}

// HasRcwSchedule returns a boolean if a field has been set.
func (o *RcwSchedulesPostRequest) HasRcwSchedule() bool {
	if o != nil && !IsNil(o.RcwSchedule) {
		return true
	}

	return false
}

// SetRcwSchedule gets a reference to the given RcwSchedules and assigns it to the RcwSchedule field.
func (o *RcwSchedulesPostRequest) SetRcwSchedule(v RcwSchedules) {
	o.RcwSchedule = &v
}

func (o RcwSchedulesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RcwSchedulesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RcwSchedule) {
		toSerialize["rcw_schedule"] = o.RcwSchedule
	}
	return toSerialize, nil
}

type NullableRcwSchedulesPostRequest struct {
	value *RcwSchedulesPostRequest
	isSet bool
}

func (v NullableRcwSchedulesPostRequest) Get() *RcwSchedulesPostRequest {
	return v.value
}

func (v *NullableRcwSchedulesPostRequest) Set(val *RcwSchedulesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRcwSchedulesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRcwSchedulesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRcwSchedulesPostRequest(val *RcwSchedulesPostRequest) *NullableRcwSchedulesPostRequest {
	return &NullableRcwSchedulesPostRequest{value: val, isSet: true}
}

func (v NullableRcwSchedulesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRcwSchedulesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


