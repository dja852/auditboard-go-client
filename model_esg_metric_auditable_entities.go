/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EsgMetricAuditableEntities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EsgMetricAuditableEntities{}

// EsgMetricAuditableEntities struct for EsgMetricAuditableEntities
type EsgMetricAuditableEntities struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	Uid *string `json:"uid,omitempty"`
	// Note: This is a Foreign Key to `esg_metrics.id`.<fk table='esg_metrics' column='id'/>
	EsgMetricId int32 `json:"esg_metric_id"`
	// Note: This is a Foreign Key to `auditable_entities.id`.<fk table='auditable_entities' column='id'/>
	AuditableEntityId int32 `json:"auditable_entity_id"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ReviewerUserId *int32 `json:"reviewer_user_id,omitempty"`
	LastCertifiedValue *float32 `json:"last_certified_value,omitempty"`
	LastCertifiedNotes *string `json:"last_certified_notes,omitempty"`
	LastCertifiedPeriodStart *string `json:"last_certified_period_start,omitempty"`
	LastCertifiedPeriodEnd *string `json:"last_certified_period_end,omitempty"`
	LastPeriodRequested *string `json:"last_period_requested,omitempty"`
	CurrentYearToDateValue *float32 `json:"current_year_to_date_value,omitempty"`
	PreviousYearToDateValue *float32 `json:"previous_year_to_date_value,omitempty"`
	Question *string `json:"question,omitempty"`
	LastCertifiedResponse *string `json:"last_certified_response,omitempty"`
	TwoPriorYearToDateValue *float32 `json:"two_prior_year_to_date_value,omitempty"`
}

type _EsgMetricAuditableEntities EsgMetricAuditableEntities

// NewEsgMetricAuditableEntities instantiates a new EsgMetricAuditableEntities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsgMetricAuditableEntities(esgMetricId int32, auditableEntityId int32) *EsgMetricAuditableEntities {
	this := EsgMetricAuditableEntities{}
	this.EsgMetricId = esgMetricId
	this.AuditableEntityId = auditableEntityId
	var currentYearToDateValue float32 = 0
	this.CurrentYearToDateValue = &currentYearToDateValue
	var previousYearToDateValue float32 = 0
	this.PreviousYearToDateValue = &previousYearToDateValue
	return &this
}

// NewEsgMetricAuditableEntitiesWithDefaults instantiates a new EsgMetricAuditableEntities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsgMetricAuditableEntitiesWithDefaults() *EsgMetricAuditableEntities {
	this := EsgMetricAuditableEntities{}
	var currentYearToDateValue float32 = 0
	this.CurrentYearToDateValue = &currentYearToDateValue
	var previousYearToDateValue float32 = 0
	this.PreviousYearToDateValue = &previousYearToDateValue
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EsgMetricAuditableEntities) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *EsgMetricAuditableEntities) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *EsgMetricAuditableEntities) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *EsgMetricAuditableEntities) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *EsgMetricAuditableEntities) SetUid(v string) {
	o.Uid = &v
}

// GetEsgMetricId returns the EsgMetricId field value
func (o *EsgMetricAuditableEntities) GetEsgMetricId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EsgMetricId
}

// GetEsgMetricIdOk returns a tuple with the EsgMetricId field value
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetEsgMetricIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EsgMetricId, true
}

// SetEsgMetricId sets field value
func (o *EsgMetricAuditableEntities) SetEsgMetricId(v int32) {
	o.EsgMetricId = v
}

// GetAuditableEntityId returns the AuditableEntityId field value
func (o *EsgMetricAuditableEntities) GetAuditableEntityId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AuditableEntityId
}

// GetAuditableEntityIdOk returns a tuple with the AuditableEntityId field value
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetAuditableEntityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuditableEntityId, true
}

// SetAuditableEntityId sets field value
func (o *EsgMetricAuditableEntities) SetAuditableEntityId(v int32) {
	o.AuditableEntityId = v
}

// GetReviewerUserId returns the ReviewerUserId field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetReviewerUserId() int32 {
	if o == nil || IsNil(o.ReviewerUserId) {
		var ret int32
		return ret
	}
	return *o.ReviewerUserId
}

// GetReviewerUserIdOk returns a tuple with the ReviewerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetReviewerUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReviewerUserId) {
		return nil, false
	}
	return o.ReviewerUserId, true
}

// HasReviewerUserId returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasReviewerUserId() bool {
	if o != nil && !IsNil(o.ReviewerUserId) {
		return true
	}

	return false
}

// SetReviewerUserId gets a reference to the given int32 and assigns it to the ReviewerUserId field.
func (o *EsgMetricAuditableEntities) SetReviewerUserId(v int32) {
	o.ReviewerUserId = &v
}

// GetLastCertifiedValue returns the LastCertifiedValue field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetLastCertifiedValue() float32 {
	if o == nil || IsNil(o.LastCertifiedValue) {
		var ret float32
		return ret
	}
	return *o.LastCertifiedValue
}

// GetLastCertifiedValueOk returns a tuple with the LastCertifiedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetLastCertifiedValueOk() (*float32, bool) {
	if o == nil || IsNil(o.LastCertifiedValue) {
		return nil, false
	}
	return o.LastCertifiedValue, true
}

// HasLastCertifiedValue returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasLastCertifiedValue() bool {
	if o != nil && !IsNil(o.LastCertifiedValue) {
		return true
	}

	return false
}

// SetLastCertifiedValue gets a reference to the given float32 and assigns it to the LastCertifiedValue field.
func (o *EsgMetricAuditableEntities) SetLastCertifiedValue(v float32) {
	o.LastCertifiedValue = &v
}

// GetLastCertifiedNotes returns the LastCertifiedNotes field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetLastCertifiedNotes() string {
	if o == nil || IsNil(o.LastCertifiedNotes) {
		var ret string
		return ret
	}
	return *o.LastCertifiedNotes
}

// GetLastCertifiedNotesOk returns a tuple with the LastCertifiedNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetLastCertifiedNotesOk() (*string, bool) {
	if o == nil || IsNil(o.LastCertifiedNotes) {
		return nil, false
	}
	return o.LastCertifiedNotes, true
}

// HasLastCertifiedNotes returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasLastCertifiedNotes() bool {
	if o != nil && !IsNil(o.LastCertifiedNotes) {
		return true
	}

	return false
}

// SetLastCertifiedNotes gets a reference to the given string and assigns it to the LastCertifiedNotes field.
func (o *EsgMetricAuditableEntities) SetLastCertifiedNotes(v string) {
	o.LastCertifiedNotes = &v
}

// GetLastCertifiedPeriodStart returns the LastCertifiedPeriodStart field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetLastCertifiedPeriodStart() string {
	if o == nil || IsNil(o.LastCertifiedPeriodStart) {
		var ret string
		return ret
	}
	return *o.LastCertifiedPeriodStart
}

// GetLastCertifiedPeriodStartOk returns a tuple with the LastCertifiedPeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetLastCertifiedPeriodStartOk() (*string, bool) {
	if o == nil || IsNil(o.LastCertifiedPeriodStart) {
		return nil, false
	}
	return o.LastCertifiedPeriodStart, true
}

// HasLastCertifiedPeriodStart returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasLastCertifiedPeriodStart() bool {
	if o != nil && !IsNil(o.LastCertifiedPeriodStart) {
		return true
	}

	return false
}

// SetLastCertifiedPeriodStart gets a reference to the given string and assigns it to the LastCertifiedPeriodStart field.
func (o *EsgMetricAuditableEntities) SetLastCertifiedPeriodStart(v string) {
	o.LastCertifiedPeriodStart = &v
}

// GetLastCertifiedPeriodEnd returns the LastCertifiedPeriodEnd field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetLastCertifiedPeriodEnd() string {
	if o == nil || IsNil(o.LastCertifiedPeriodEnd) {
		var ret string
		return ret
	}
	return *o.LastCertifiedPeriodEnd
}

// GetLastCertifiedPeriodEndOk returns a tuple with the LastCertifiedPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetLastCertifiedPeriodEndOk() (*string, bool) {
	if o == nil || IsNil(o.LastCertifiedPeriodEnd) {
		return nil, false
	}
	return o.LastCertifiedPeriodEnd, true
}

// HasLastCertifiedPeriodEnd returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasLastCertifiedPeriodEnd() bool {
	if o != nil && !IsNil(o.LastCertifiedPeriodEnd) {
		return true
	}

	return false
}

// SetLastCertifiedPeriodEnd gets a reference to the given string and assigns it to the LastCertifiedPeriodEnd field.
func (o *EsgMetricAuditableEntities) SetLastCertifiedPeriodEnd(v string) {
	o.LastCertifiedPeriodEnd = &v
}

// GetLastPeriodRequested returns the LastPeriodRequested field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetLastPeriodRequested() string {
	if o == nil || IsNil(o.LastPeriodRequested) {
		var ret string
		return ret
	}
	return *o.LastPeriodRequested
}

// GetLastPeriodRequestedOk returns a tuple with the LastPeriodRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetLastPeriodRequestedOk() (*string, bool) {
	if o == nil || IsNil(o.LastPeriodRequested) {
		return nil, false
	}
	return o.LastPeriodRequested, true
}

// HasLastPeriodRequested returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasLastPeriodRequested() bool {
	if o != nil && !IsNil(o.LastPeriodRequested) {
		return true
	}

	return false
}

// SetLastPeriodRequested gets a reference to the given string and assigns it to the LastPeriodRequested field.
func (o *EsgMetricAuditableEntities) SetLastPeriodRequested(v string) {
	o.LastPeriodRequested = &v
}

// GetCurrentYearToDateValue returns the CurrentYearToDateValue field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetCurrentYearToDateValue() float32 {
	if o == nil || IsNil(o.CurrentYearToDateValue) {
		var ret float32
		return ret
	}
	return *o.CurrentYearToDateValue
}

// GetCurrentYearToDateValueOk returns a tuple with the CurrentYearToDateValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetCurrentYearToDateValueOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentYearToDateValue) {
		return nil, false
	}
	return o.CurrentYearToDateValue, true
}

// HasCurrentYearToDateValue returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasCurrentYearToDateValue() bool {
	if o != nil && !IsNil(o.CurrentYearToDateValue) {
		return true
	}

	return false
}

// SetCurrentYearToDateValue gets a reference to the given float32 and assigns it to the CurrentYearToDateValue field.
func (o *EsgMetricAuditableEntities) SetCurrentYearToDateValue(v float32) {
	o.CurrentYearToDateValue = &v
}

// GetPreviousYearToDateValue returns the PreviousYearToDateValue field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetPreviousYearToDateValue() float32 {
	if o == nil || IsNil(o.PreviousYearToDateValue) {
		var ret float32
		return ret
	}
	return *o.PreviousYearToDateValue
}

// GetPreviousYearToDateValueOk returns a tuple with the PreviousYearToDateValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetPreviousYearToDateValueOk() (*float32, bool) {
	if o == nil || IsNil(o.PreviousYearToDateValue) {
		return nil, false
	}
	return o.PreviousYearToDateValue, true
}

// HasPreviousYearToDateValue returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasPreviousYearToDateValue() bool {
	if o != nil && !IsNil(o.PreviousYearToDateValue) {
		return true
	}

	return false
}

// SetPreviousYearToDateValue gets a reference to the given float32 and assigns it to the PreviousYearToDateValue field.
func (o *EsgMetricAuditableEntities) SetPreviousYearToDateValue(v float32) {
	o.PreviousYearToDateValue = &v
}

// GetQuestion returns the Question field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetQuestion() string {
	if o == nil || IsNil(o.Question) {
		var ret string
		return ret
	}
	return *o.Question
}

// GetQuestionOk returns a tuple with the Question field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetQuestionOk() (*string, bool) {
	if o == nil || IsNil(o.Question) {
		return nil, false
	}
	return o.Question, true
}

// HasQuestion returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasQuestion() bool {
	if o != nil && !IsNil(o.Question) {
		return true
	}

	return false
}

// SetQuestion gets a reference to the given string and assigns it to the Question field.
func (o *EsgMetricAuditableEntities) SetQuestion(v string) {
	o.Question = &v
}

// GetLastCertifiedResponse returns the LastCertifiedResponse field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetLastCertifiedResponse() string {
	if o == nil || IsNil(o.LastCertifiedResponse) {
		var ret string
		return ret
	}
	return *o.LastCertifiedResponse
}

// GetLastCertifiedResponseOk returns a tuple with the LastCertifiedResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetLastCertifiedResponseOk() (*string, bool) {
	if o == nil || IsNil(o.LastCertifiedResponse) {
		return nil, false
	}
	return o.LastCertifiedResponse, true
}

// HasLastCertifiedResponse returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasLastCertifiedResponse() bool {
	if o != nil && !IsNil(o.LastCertifiedResponse) {
		return true
	}

	return false
}

// SetLastCertifiedResponse gets a reference to the given string and assigns it to the LastCertifiedResponse field.
func (o *EsgMetricAuditableEntities) SetLastCertifiedResponse(v string) {
	o.LastCertifiedResponse = &v
}

// GetTwoPriorYearToDateValue returns the TwoPriorYearToDateValue field value if set, zero value otherwise.
func (o *EsgMetricAuditableEntities) GetTwoPriorYearToDateValue() float32 {
	if o == nil || IsNil(o.TwoPriorYearToDateValue) {
		var ret float32
		return ret
	}
	return *o.TwoPriorYearToDateValue
}

// GetTwoPriorYearToDateValueOk returns a tuple with the TwoPriorYearToDateValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricAuditableEntities) GetTwoPriorYearToDateValueOk() (*float32, bool) {
	if o == nil || IsNil(o.TwoPriorYearToDateValue) {
		return nil, false
	}
	return o.TwoPriorYearToDateValue, true
}

// HasTwoPriorYearToDateValue returns a boolean if a field has been set.
func (o *EsgMetricAuditableEntities) HasTwoPriorYearToDateValue() bool {
	if o != nil && !IsNil(o.TwoPriorYearToDateValue) {
		return true
	}

	return false
}

// SetTwoPriorYearToDateValue gets a reference to the given float32 and assigns it to the TwoPriorYearToDateValue field.
func (o *EsgMetricAuditableEntities) SetTwoPriorYearToDateValue(v float32) {
	o.TwoPriorYearToDateValue = &v
}

func (o EsgMetricAuditableEntities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EsgMetricAuditableEntities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	toSerialize["esg_metric_id"] = o.EsgMetricId
	toSerialize["auditable_entity_id"] = o.AuditableEntityId
	if !IsNil(o.ReviewerUserId) {
		toSerialize["reviewer_user_id"] = o.ReviewerUserId
	}
	if !IsNil(o.LastCertifiedValue) {
		toSerialize["last_certified_value"] = o.LastCertifiedValue
	}
	if !IsNil(o.LastCertifiedNotes) {
		toSerialize["last_certified_notes"] = o.LastCertifiedNotes
	}
	if !IsNil(o.LastCertifiedPeriodStart) {
		toSerialize["last_certified_period_start"] = o.LastCertifiedPeriodStart
	}
	if !IsNil(o.LastCertifiedPeriodEnd) {
		toSerialize["last_certified_period_end"] = o.LastCertifiedPeriodEnd
	}
	if !IsNil(o.LastPeriodRequested) {
		toSerialize["last_period_requested"] = o.LastPeriodRequested
	}
	if !IsNil(o.CurrentYearToDateValue) {
		toSerialize["current_year_to_date_value"] = o.CurrentYearToDateValue
	}
	if !IsNil(o.PreviousYearToDateValue) {
		toSerialize["previous_year_to_date_value"] = o.PreviousYearToDateValue
	}
	if !IsNil(o.Question) {
		toSerialize["question"] = o.Question
	}
	if !IsNil(o.LastCertifiedResponse) {
		toSerialize["last_certified_response"] = o.LastCertifiedResponse
	}
	if !IsNil(o.TwoPriorYearToDateValue) {
		toSerialize["two_prior_year_to_date_value"] = o.TwoPriorYearToDateValue
	}
	return toSerialize, nil
}

type NullableEsgMetricAuditableEntities struct {
	value *EsgMetricAuditableEntities
	isSet bool
}

func (v NullableEsgMetricAuditableEntities) Get() *EsgMetricAuditableEntities {
	return v.value
}

func (v *NullableEsgMetricAuditableEntities) Set(val *EsgMetricAuditableEntities) {
	v.value = val
	v.isSet = true
}

func (v NullableEsgMetricAuditableEntities) IsSet() bool {
	return v.isSet
}

func (v *NullableEsgMetricAuditableEntities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsgMetricAuditableEntities(val *EsgMetricAuditableEntities) *NullableEsgMetricAuditableEntities {
	return &NullableEsgMetricAuditableEntities{value: val, isSet: true}
}

func (v NullableEsgMetricAuditableEntities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsgMetricAuditableEntities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


