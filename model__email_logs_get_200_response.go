/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the EmailLogsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailLogsGet200Response{}

// EmailLogsGet200Response struct for EmailLogsGet200Response
type EmailLogsGet200Response struct {
	EmailLogs []EmailLogs `json:"email_logs,omitempty"`
}

// NewEmailLogsGet200Response instantiates a new EmailLogsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailLogsGet200Response() *EmailLogsGet200Response {
	this := EmailLogsGet200Response{}
	return &this
}

// NewEmailLogsGet200ResponseWithDefaults instantiates a new EmailLogsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailLogsGet200ResponseWithDefaults() *EmailLogsGet200Response {
	this := EmailLogsGet200Response{}
	return &this
}

// GetEmailLogs returns the EmailLogs field value if set, zero value otherwise.
func (o *EmailLogsGet200Response) GetEmailLogs() []EmailLogs {
	if o == nil || IsNil(o.EmailLogs) {
		var ret []EmailLogs
		return ret
	}
	return o.EmailLogs
}

// GetEmailLogsOk returns a tuple with the EmailLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailLogsGet200Response) GetEmailLogsOk() ([]EmailLogs, bool) {
	if o == nil || IsNil(o.EmailLogs) {
		return nil, false
	}
	return o.EmailLogs, true
}

// HasEmailLogs returns a boolean if a field has been set.
func (o *EmailLogsGet200Response) HasEmailLogs() bool {
	if o != nil && !IsNil(o.EmailLogs) {
		return true
	}

	return false
}

// SetEmailLogs gets a reference to the given []EmailLogs and assigns it to the EmailLogs field.
func (o *EmailLogsGet200Response) SetEmailLogs(v []EmailLogs) {
	o.EmailLogs = v
}

func (o EmailLogsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailLogsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailLogs) {
		toSerialize["email_logs"] = o.EmailLogs
	}
	return toSerialize, nil
}

type NullableEmailLogsGet200Response struct {
	value *EmailLogsGet200Response
	isSet bool
}

func (v NullableEmailLogsGet200Response) Get() *EmailLogsGet200Response {
	return v.value
}

func (v *NullableEmailLogsGet200Response) Set(val *EmailLogsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailLogsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailLogsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailLogsGet200Response(val *EmailLogsGet200Response) *NullableEmailLogsGet200Response {
	return &NullableEmailLogsGet200Response{value: val, isSet: true}
}

func (v NullableEmailLogsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailLogsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


