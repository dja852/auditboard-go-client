/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TestSectionsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestSectionsPostRequest{}

// TestSectionsPostRequest struct for TestSectionsPostRequest
type TestSectionsPostRequest struct {
	TestSection *TestSections `json:"test_section,omitempty"`
}

// NewTestSectionsPostRequest instantiates a new TestSectionsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestSectionsPostRequest() *TestSectionsPostRequest {
	this := TestSectionsPostRequest{}
	return &this
}

// NewTestSectionsPostRequestWithDefaults instantiates a new TestSectionsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestSectionsPostRequestWithDefaults() *TestSectionsPostRequest {
	this := TestSectionsPostRequest{}
	return &this
}

// GetTestSection returns the TestSection field value if set, zero value otherwise.
func (o *TestSectionsPostRequest) GetTestSection() TestSections {
	if o == nil || IsNil(o.TestSection) {
		var ret TestSections
		return ret
	}
	return *o.TestSection
}

// GetTestSectionOk returns a tuple with the TestSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestSectionsPostRequest) GetTestSectionOk() (*TestSections, bool) {
	if o == nil || IsNil(o.TestSection) {
		return nil, false
	}
	return o.TestSection, true
}

// HasTestSection returns a boolean if a field has been set.
func (o *TestSectionsPostRequest) HasTestSection() bool {
	if o != nil && !IsNil(o.TestSection) {
		return true
	}

	return false
}

// SetTestSection gets a reference to the given TestSections and assigns it to the TestSection field.
func (o *TestSectionsPostRequest) SetTestSection(v TestSections) {
	o.TestSection = &v
}

func (o TestSectionsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestSectionsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TestSection) {
		toSerialize["test_section"] = o.TestSection
	}
	return toSerialize, nil
}

type NullableTestSectionsPostRequest struct {
	value *TestSectionsPostRequest
	isSet bool
}

func (v NullableTestSectionsPostRequest) Get() *TestSectionsPostRequest {
	return v.value
}

func (v *NullableTestSectionsPostRequest) Set(val *TestSectionsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTestSectionsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTestSectionsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestSectionsPostRequest(val *TestSectionsPostRequest) *NullableTestSectionsPostRequest {
	return &NullableTestSectionsPostRequest{value: val, isSet: true}
}

func (v NullableTestSectionsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestSectionsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


