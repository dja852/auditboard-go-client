/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the PoliciesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoliciesGet200Response{}

// PoliciesGet200Response struct for PoliciesGet200Response
type PoliciesGet200Response struct {
	Policies []Policies `json:"policies,omitempty"`
}

// NewPoliciesGet200Response instantiates a new PoliciesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoliciesGet200Response() *PoliciesGet200Response {
	this := PoliciesGet200Response{}
	return &this
}

// NewPoliciesGet200ResponseWithDefaults instantiates a new PoliciesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoliciesGet200ResponseWithDefaults() *PoliciesGet200Response {
	this := PoliciesGet200Response{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *PoliciesGet200Response) GetPolicies() []Policies {
	if o == nil || IsNil(o.Policies) {
		var ret []Policies
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoliciesGet200Response) GetPoliciesOk() ([]Policies, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *PoliciesGet200Response) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []Policies and assigns it to the Policies field.
func (o *PoliciesGet200Response) SetPolicies(v []Policies) {
	o.Policies = v
}

func (o PoliciesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoliciesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	return toSerialize, nil
}

type NullablePoliciesGet200Response struct {
	value *PoliciesGet200Response
	isSet bool
}

func (v NullablePoliciesGet200Response) Get() *PoliciesGet200Response {
	return v.value
}

func (v *NullablePoliciesGet200Response) Set(val *PoliciesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePoliciesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePoliciesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoliciesGet200Response(val *PoliciesGet200Response) *NullablePoliciesGet200Response {
	return &NullablePoliciesGet200Response{value: val, isSet: true}
}

func (v NullablePoliciesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoliciesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


