/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ActionPlansGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionPlansGet200Response{}

// ActionPlansGet200Response struct for ActionPlansGet200Response
type ActionPlansGet200Response struct {
	ActionPlans []ActionPlans `json:"action_plans,omitempty"`
}

// NewActionPlansGet200Response instantiates a new ActionPlansGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionPlansGet200Response() *ActionPlansGet200Response {
	this := ActionPlansGet200Response{}
	return &this
}

// NewActionPlansGet200ResponseWithDefaults instantiates a new ActionPlansGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionPlansGet200ResponseWithDefaults() *ActionPlansGet200Response {
	this := ActionPlansGet200Response{}
	return &this
}

// GetActionPlans returns the ActionPlans field value if set, zero value otherwise.
func (o *ActionPlansGet200Response) GetActionPlans() []ActionPlans {
	if o == nil || IsNil(o.ActionPlans) {
		var ret []ActionPlans
		return ret
	}
	return o.ActionPlans
}

// GetActionPlansOk returns a tuple with the ActionPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansGet200Response) GetActionPlansOk() ([]ActionPlans, bool) {
	if o == nil || IsNil(o.ActionPlans) {
		return nil, false
	}
	return o.ActionPlans, true
}

// HasActionPlans returns a boolean if a field has been set.
func (o *ActionPlansGet200Response) HasActionPlans() bool {
	if o != nil && !IsNil(o.ActionPlans) {
		return true
	}

	return false
}

// SetActionPlans gets a reference to the given []ActionPlans and assigns it to the ActionPlans field.
func (o *ActionPlansGet200Response) SetActionPlans(v []ActionPlans) {
	o.ActionPlans = v
}

func (o ActionPlansGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionPlansGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionPlans) {
		toSerialize["action_plans"] = o.ActionPlans
	}
	return toSerialize, nil
}

type NullableActionPlansGet200Response struct {
	value *ActionPlansGet200Response
	isSet bool
}

func (v NullableActionPlansGet200Response) Get() *ActionPlansGet200Response {
	return v.value
}

func (v *NullableActionPlansGet200Response) Set(val *ActionPlansGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableActionPlansGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableActionPlansGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionPlansGet200Response(val *ActionPlansGet200Response) *NullableActionPlansGet200Response {
	return &NullableActionPlansGet200Response{value: val, isSet: true}
}

func (v NullableActionPlansGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionPlansGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


