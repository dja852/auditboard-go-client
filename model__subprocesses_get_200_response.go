/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the SubprocessesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubprocessesGet200Response{}

// SubprocessesGet200Response struct for SubprocessesGet200Response
type SubprocessesGet200Response struct {
	Subprocesses []Subprocesses `json:"subprocesses,omitempty"`
}

// NewSubprocessesGet200Response instantiates a new SubprocessesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubprocessesGet200Response() *SubprocessesGet200Response {
	this := SubprocessesGet200Response{}
	return &this
}

// NewSubprocessesGet200ResponseWithDefaults instantiates a new SubprocessesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubprocessesGet200ResponseWithDefaults() *SubprocessesGet200Response {
	this := SubprocessesGet200Response{}
	return &this
}

// GetSubprocesses returns the Subprocesses field value if set, zero value otherwise.
func (o *SubprocessesGet200Response) GetSubprocesses() []Subprocesses {
	if o == nil || IsNil(o.Subprocesses) {
		var ret []Subprocesses
		return ret
	}
	return o.Subprocesses
}

// GetSubprocessesOk returns a tuple with the Subprocesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubprocessesGet200Response) GetSubprocessesOk() ([]Subprocesses, bool) {
	if o == nil || IsNil(o.Subprocesses) {
		return nil, false
	}
	return o.Subprocesses, true
}

// HasSubprocesses returns a boolean if a field has been set.
func (o *SubprocessesGet200Response) HasSubprocesses() bool {
	if o != nil && !IsNil(o.Subprocesses) {
		return true
	}

	return false
}

// SetSubprocesses gets a reference to the given []Subprocesses and assigns it to the Subprocesses field.
func (o *SubprocessesGet200Response) SetSubprocesses(v []Subprocesses) {
	o.Subprocesses = v
}

func (o SubprocessesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubprocessesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subprocesses) {
		toSerialize["subprocesses"] = o.Subprocesses
	}
	return toSerialize, nil
}

type NullableSubprocessesGet200Response struct {
	value *SubprocessesGet200Response
	isSet bool
}

func (v NullableSubprocessesGet200Response) Get() *SubprocessesGet200Response {
	return v.value
}

func (v *NullableSubprocessesGet200Response) Set(val *SubprocessesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSubprocessesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSubprocessesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubprocessesGet200Response(val *SubprocessesGet200Response) *NullableSubprocessesGet200Response {
	return &NullableSubprocessesGet200Response{value: val, isSet: true}
}

func (v NullableSubprocessesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubprocessesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


