/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RiskTypesPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskTypesPut{}

// RiskTypesPut struct for RiskTypesPut
type RiskTypesPut struct {
	RiskType *RiskTypesPutRiskType `json:"risk_type,omitempty"`
	PreviousValues *RiskTypesPutPreviousValues `json:"previous_values,omitempty"`
}

// NewRiskTypesPut instantiates a new RiskTypesPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskTypesPut() *RiskTypesPut {
	this := RiskTypesPut{}
	return &this
}

// NewRiskTypesPutWithDefaults instantiates a new RiskTypesPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskTypesPutWithDefaults() *RiskTypesPut {
	this := RiskTypesPut{}
	return &this
}

// GetRiskType returns the RiskType field value if set, zero value otherwise.
func (o *RiskTypesPut) GetRiskType() RiskTypesPutRiskType {
	if o == nil || IsNil(o.RiskType) {
		var ret RiskTypesPutRiskType
		return ret
	}
	return *o.RiskType
}

// GetRiskTypeOk returns a tuple with the RiskType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskTypesPut) GetRiskTypeOk() (*RiskTypesPutRiskType, bool) {
	if o == nil || IsNil(o.RiskType) {
		return nil, false
	}
	return o.RiskType, true
}

// HasRiskType returns a boolean if a field has been set.
func (o *RiskTypesPut) HasRiskType() bool {
	if o != nil && !IsNil(o.RiskType) {
		return true
	}

	return false
}

// SetRiskType gets a reference to the given RiskTypesPutRiskType and assigns it to the RiskType field.
func (o *RiskTypesPut) SetRiskType(v RiskTypesPutRiskType) {
	o.RiskType = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *RiskTypesPut) GetPreviousValues() RiskTypesPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret RiskTypesPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskTypesPut) GetPreviousValuesOk() (*RiskTypesPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *RiskTypesPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given RiskTypesPutPreviousValues and assigns it to the PreviousValues field.
func (o *RiskTypesPut) SetPreviousValues(v RiskTypesPutPreviousValues) {
	o.PreviousValues = &v
}

func (o RiskTypesPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskTypesPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RiskType) {
		toSerialize["risk_type"] = o.RiskType
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableRiskTypesPut struct {
	value *RiskTypesPut
	isSet bool
}

func (v NullableRiskTypesPut) Get() *RiskTypesPut {
	return v.value
}

func (v *NullableRiskTypesPut) Set(val *RiskTypesPut) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskTypesPut) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskTypesPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskTypesPut(val *RiskTypesPut) *NullableRiskTypesPut {
	return &NullableRiskTypesPut{value: val, isSet: true}
}

func (v NullableRiskTypesPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskTypesPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


