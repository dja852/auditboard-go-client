/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the LibraryControlNaturesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LibraryControlNaturesGet200Response{}

// LibraryControlNaturesGet200Response struct for LibraryControlNaturesGet200Response
type LibraryControlNaturesGet200Response struct {
	LibraryControlNatures []LibraryControlNatures `json:"library_control_natures,omitempty"`
}

// NewLibraryControlNaturesGet200Response instantiates a new LibraryControlNaturesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLibraryControlNaturesGet200Response() *LibraryControlNaturesGet200Response {
	this := LibraryControlNaturesGet200Response{}
	return &this
}

// NewLibraryControlNaturesGet200ResponseWithDefaults instantiates a new LibraryControlNaturesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLibraryControlNaturesGet200ResponseWithDefaults() *LibraryControlNaturesGet200Response {
	this := LibraryControlNaturesGet200Response{}
	return &this
}

// GetLibraryControlNatures returns the LibraryControlNatures field value if set, zero value otherwise.
func (o *LibraryControlNaturesGet200Response) GetLibraryControlNatures() []LibraryControlNatures {
	if o == nil || IsNil(o.LibraryControlNatures) {
		var ret []LibraryControlNatures
		return ret
	}
	return o.LibraryControlNatures
}

// GetLibraryControlNaturesOk returns a tuple with the LibraryControlNatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LibraryControlNaturesGet200Response) GetLibraryControlNaturesOk() ([]LibraryControlNatures, bool) {
	if o == nil || IsNil(o.LibraryControlNatures) {
		return nil, false
	}
	return o.LibraryControlNatures, true
}

// HasLibraryControlNatures returns a boolean if a field has been set.
func (o *LibraryControlNaturesGet200Response) HasLibraryControlNatures() bool {
	if o != nil && !IsNil(o.LibraryControlNatures) {
		return true
	}

	return false
}

// SetLibraryControlNatures gets a reference to the given []LibraryControlNatures and assigns it to the LibraryControlNatures field.
func (o *LibraryControlNaturesGet200Response) SetLibraryControlNatures(v []LibraryControlNatures) {
	o.LibraryControlNatures = v
}

func (o LibraryControlNaturesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LibraryControlNaturesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LibraryControlNatures) {
		toSerialize["library_control_natures"] = o.LibraryControlNatures
	}
	return toSerialize, nil
}

type NullableLibraryControlNaturesGet200Response struct {
	value *LibraryControlNaturesGet200Response
	isSet bool
}

func (v NullableLibraryControlNaturesGet200Response) Get() *LibraryControlNaturesGet200Response {
	return v.value
}

func (v *NullableLibraryControlNaturesGet200Response) Set(val *LibraryControlNaturesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLibraryControlNaturesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLibraryControlNaturesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLibraryControlNaturesGet200Response(val *LibraryControlNaturesGet200Response) *NullableLibraryControlNaturesGet200Response {
	return &NullableLibraryControlNaturesGet200Response{value: val, isSet: true}
}

func (v NullableLibraryControlNaturesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLibraryControlNaturesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


