/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the EntitiesEntityIdAddControlsPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitiesEntityIdAddControlsPost200Response{}

// EntitiesEntityIdAddControlsPost200Response struct for EntitiesEntityIdAddControlsPost200Response
type EntitiesEntityIdAddControlsPost200Response struct {
	Entities []Entities `json:"entities,omitempty"`
	ControlsData []ControlsData `json:"controls_data,omitempty"`
	Tests []Tests `json:"tests,omitempty"`
	SubprocessesData []SubprocessesData `json:"subprocesses_data,omitempty"`
	ProcessesData []ProcessesData `json:"processes_data,omitempty"`
}

// NewEntitiesEntityIdAddControlsPost200Response instantiates a new EntitiesEntityIdAddControlsPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitiesEntityIdAddControlsPost200Response() *EntitiesEntityIdAddControlsPost200Response {
	this := EntitiesEntityIdAddControlsPost200Response{}
	return &this
}

// NewEntitiesEntityIdAddControlsPost200ResponseWithDefaults instantiates a new EntitiesEntityIdAddControlsPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitiesEntityIdAddControlsPost200ResponseWithDefaults() *EntitiesEntityIdAddControlsPost200Response {
	this := EntitiesEntityIdAddControlsPost200Response{}
	return &this
}

// GetEntities returns the Entities field value if set, zero value otherwise.
func (o *EntitiesEntityIdAddControlsPost200Response) GetEntities() []Entities {
	if o == nil || IsNil(o.Entities) {
		var ret []Entities
		return ret
	}
	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesEntityIdAddControlsPost200Response) GetEntitiesOk() ([]Entities, bool) {
	if o == nil || IsNil(o.Entities) {
		return nil, false
	}
	return o.Entities, true
}

// HasEntities returns a boolean if a field has been set.
func (o *EntitiesEntityIdAddControlsPost200Response) HasEntities() bool {
	if o != nil && !IsNil(o.Entities) {
		return true
	}

	return false
}

// SetEntities gets a reference to the given []Entities and assigns it to the Entities field.
func (o *EntitiesEntityIdAddControlsPost200Response) SetEntities(v []Entities) {
	o.Entities = v
}

// GetControlsData returns the ControlsData field value if set, zero value otherwise.
func (o *EntitiesEntityIdAddControlsPost200Response) GetControlsData() []ControlsData {
	if o == nil || IsNil(o.ControlsData) {
		var ret []ControlsData
		return ret
	}
	return o.ControlsData
}

// GetControlsDataOk returns a tuple with the ControlsData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesEntityIdAddControlsPost200Response) GetControlsDataOk() ([]ControlsData, bool) {
	if o == nil || IsNil(o.ControlsData) {
		return nil, false
	}
	return o.ControlsData, true
}

// HasControlsData returns a boolean if a field has been set.
func (o *EntitiesEntityIdAddControlsPost200Response) HasControlsData() bool {
	if o != nil && !IsNil(o.ControlsData) {
		return true
	}

	return false
}

// SetControlsData gets a reference to the given []ControlsData and assigns it to the ControlsData field.
func (o *EntitiesEntityIdAddControlsPost200Response) SetControlsData(v []ControlsData) {
	o.ControlsData = v
}

// GetTests returns the Tests field value if set, zero value otherwise.
func (o *EntitiesEntityIdAddControlsPost200Response) GetTests() []Tests {
	if o == nil || IsNil(o.Tests) {
		var ret []Tests
		return ret
	}
	return o.Tests
}

// GetTestsOk returns a tuple with the Tests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesEntityIdAddControlsPost200Response) GetTestsOk() ([]Tests, bool) {
	if o == nil || IsNil(o.Tests) {
		return nil, false
	}
	return o.Tests, true
}

// HasTests returns a boolean if a field has been set.
func (o *EntitiesEntityIdAddControlsPost200Response) HasTests() bool {
	if o != nil && !IsNil(o.Tests) {
		return true
	}

	return false
}

// SetTests gets a reference to the given []Tests and assigns it to the Tests field.
func (o *EntitiesEntityIdAddControlsPost200Response) SetTests(v []Tests) {
	o.Tests = v
}

// GetSubprocessesData returns the SubprocessesData field value if set, zero value otherwise.
func (o *EntitiesEntityIdAddControlsPost200Response) GetSubprocessesData() []SubprocessesData {
	if o == nil || IsNil(o.SubprocessesData) {
		var ret []SubprocessesData
		return ret
	}
	return o.SubprocessesData
}

// GetSubprocessesDataOk returns a tuple with the SubprocessesData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesEntityIdAddControlsPost200Response) GetSubprocessesDataOk() ([]SubprocessesData, bool) {
	if o == nil || IsNil(o.SubprocessesData) {
		return nil, false
	}
	return o.SubprocessesData, true
}

// HasSubprocessesData returns a boolean if a field has been set.
func (o *EntitiesEntityIdAddControlsPost200Response) HasSubprocessesData() bool {
	if o != nil && !IsNil(o.SubprocessesData) {
		return true
	}

	return false
}

// SetSubprocessesData gets a reference to the given []SubprocessesData and assigns it to the SubprocessesData field.
func (o *EntitiesEntityIdAddControlsPost200Response) SetSubprocessesData(v []SubprocessesData) {
	o.SubprocessesData = v
}

// GetProcessesData returns the ProcessesData field value if set, zero value otherwise.
func (o *EntitiesEntityIdAddControlsPost200Response) GetProcessesData() []ProcessesData {
	if o == nil || IsNil(o.ProcessesData) {
		var ret []ProcessesData
		return ret
	}
	return o.ProcessesData
}

// GetProcessesDataOk returns a tuple with the ProcessesData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesEntityIdAddControlsPost200Response) GetProcessesDataOk() ([]ProcessesData, bool) {
	if o == nil || IsNil(o.ProcessesData) {
		return nil, false
	}
	return o.ProcessesData, true
}

// HasProcessesData returns a boolean if a field has been set.
func (o *EntitiesEntityIdAddControlsPost200Response) HasProcessesData() bool {
	if o != nil && !IsNil(o.ProcessesData) {
		return true
	}

	return false
}

// SetProcessesData gets a reference to the given []ProcessesData and assigns it to the ProcessesData field.
func (o *EntitiesEntityIdAddControlsPost200Response) SetProcessesData(v []ProcessesData) {
	o.ProcessesData = v
}

func (o EntitiesEntityIdAddControlsPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitiesEntityIdAddControlsPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entities) {
		toSerialize["entities"] = o.Entities
	}
	if !IsNil(o.ControlsData) {
		toSerialize["controls_data"] = o.ControlsData
	}
	if !IsNil(o.Tests) {
		toSerialize["tests"] = o.Tests
	}
	if !IsNil(o.SubprocessesData) {
		toSerialize["subprocesses_data"] = o.SubprocessesData
	}
	if !IsNil(o.ProcessesData) {
		toSerialize["processes_data"] = o.ProcessesData
	}
	return toSerialize, nil
}

type NullableEntitiesEntityIdAddControlsPost200Response struct {
	value *EntitiesEntityIdAddControlsPost200Response
	isSet bool
}

func (v NullableEntitiesEntityIdAddControlsPost200Response) Get() *EntitiesEntityIdAddControlsPost200Response {
	return v.value
}

func (v *NullableEntitiesEntityIdAddControlsPost200Response) Set(val *EntitiesEntityIdAddControlsPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitiesEntityIdAddControlsPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitiesEntityIdAddControlsPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitiesEntityIdAddControlsPost200Response(val *EntitiesEntityIdAddControlsPost200Response) *NullableEntitiesEntityIdAddControlsPost200Response {
	return &NullableEntitiesEntityIdAddControlsPost200Response{value: val, isSet: true}
}

func (v NullableEntitiesEntityIdAddControlsPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitiesEntityIdAddControlsPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


