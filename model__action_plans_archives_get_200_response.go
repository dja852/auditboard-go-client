/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ActionPlansArchivesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionPlansArchivesGet200Response{}

// ActionPlansArchivesGet200Response struct for ActionPlansArchivesGet200Response
type ActionPlansArchivesGet200Response struct {
	ActionPlansArchives []ActionPlansArchives `json:"action_plans_archives,omitempty"`
}

// NewActionPlansArchivesGet200Response instantiates a new ActionPlansArchivesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionPlansArchivesGet200Response() *ActionPlansArchivesGet200Response {
	this := ActionPlansArchivesGet200Response{}
	return &this
}

// NewActionPlansArchivesGet200ResponseWithDefaults instantiates a new ActionPlansArchivesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionPlansArchivesGet200ResponseWithDefaults() *ActionPlansArchivesGet200Response {
	this := ActionPlansArchivesGet200Response{}
	return &this
}

// GetActionPlansArchives returns the ActionPlansArchives field value if set, zero value otherwise.
func (o *ActionPlansArchivesGet200Response) GetActionPlansArchives() []ActionPlansArchives {
	if o == nil || IsNil(o.ActionPlansArchives) {
		var ret []ActionPlansArchives
		return ret
	}
	return o.ActionPlansArchives
}

// GetActionPlansArchivesOk returns a tuple with the ActionPlansArchives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansArchivesGet200Response) GetActionPlansArchivesOk() ([]ActionPlansArchives, bool) {
	if o == nil || IsNil(o.ActionPlansArchives) {
		return nil, false
	}
	return o.ActionPlansArchives, true
}

// HasActionPlansArchives returns a boolean if a field has been set.
func (o *ActionPlansArchivesGet200Response) HasActionPlansArchives() bool {
	if o != nil && !IsNil(o.ActionPlansArchives) {
		return true
	}

	return false
}

// SetActionPlansArchives gets a reference to the given []ActionPlansArchives and assigns it to the ActionPlansArchives field.
func (o *ActionPlansArchivesGet200Response) SetActionPlansArchives(v []ActionPlansArchives) {
	o.ActionPlansArchives = v
}

func (o ActionPlansArchivesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionPlansArchivesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionPlansArchives) {
		toSerialize["action_plans_archives"] = o.ActionPlansArchives
	}
	return toSerialize, nil
}

type NullableActionPlansArchivesGet200Response struct {
	value *ActionPlansArchivesGet200Response
	isSet bool
}

func (v NullableActionPlansArchivesGet200Response) Get() *ActionPlansArchivesGet200Response {
	return v.value
}

func (v *NullableActionPlansArchivesGet200Response) Set(val *ActionPlansArchivesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableActionPlansArchivesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableActionPlansArchivesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionPlansArchivesGet200Response(val *ActionPlansArchivesGet200Response) *NullableActionPlansArchivesGet200Response {
	return &NullableActionPlansArchivesGet200Response{value: val, isSet: true}
}

func (v NullableActionPlansArchivesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionPlansArchivesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


