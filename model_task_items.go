/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TaskItems type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskItems{}

// TaskItems struct for TaskItems
type TaskItems struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	IsAcknowledgePrepared *bool `json:"is_acknowledge_prepared,omitempty"`
	DueDate *string `json:"due_date,omitempty"`
	SubmittedDate *string `json:"submitted_date,omitempty"`
	CertifiedDate *string `json:"certified_date,omitempty"`
	Order *int32 `json:"order,omitempty"`
	// Note: This is a Foreign Key to `task_groups.id`.<fk table='task_groups' column='id'/>
	TaskGroupId int32 `json:"task_group_id"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	AssigneeUserId *int32 `json:"assignee_user_id,omitempty"`
	SubmittedByUserId *int32 `json:"submitted_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	CertifiedByUserId *int32 `json:"certified_by_user_id,omitempty"`
	Title *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
	AssigneeResponse *string `json:"assignee_response,omitempty"`
	BudgetHours float32 `json:"budget_hours"`
	ActualHours float32 `json:"actual_hours"`
	// Note: This is a Foreign Key to `task_priorities.id`.<fk table='task_priorities' column='id'/>
	TaskPriorityId *int32 `json:"task_priority_id,omitempty"`
	// Note: This is a Foreign Key to `task_periods.id`.<fk table='task_periods' column='id'/>
	TaskPeriodId *int32 `json:"task_period_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ReviewerUserId *int32 `json:"reviewer_user_id,omitempty"`
	// Note: This is a Foreign Key to `locations.id`.<fk table='locations' column='id'/>
	LocationId *int32 `json:"location_id,omitempty"`
	// Note: This is a Foreign Key to `departments.id`.<fk table='departments' column='id'/>
	DepartmentId *int32 `json:"department_id,omitempty"`
	ReferenceNotes *string `json:"reference_notes,omitempty"`
	// Note: This is a Foreign Key to `controls_data.id`.<fk table='controls_data' column='id'/>
	ControlsDatumId *int32 `json:"controls_datum_id,omitempty"`
	// Note: This is a Foreign Key to `task_categories.id`.<fk table='task_categories' column='id'/>
	TaskCategoryId *int32 `json:"task_category_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	CreatorUserId *int32 `json:"creator_user_id,omitempty"`
	MetaConfig *string `json:"meta_config,omitempty"`
	Status *string `json:"status,omitempty"`
	// Note: This is a Foreign Key to `test_sections.id`.<fk table='test_sections' column='id'/>
	TestSectionId *int32 `json:"test_section_id,omitempty"`
	// Note: This is a Foreign Key to `issues.id`.<fk table='issues' column='id'/>
	IssueId *int32 `json:"issue_id,omitempty"`
	OpenedDate *string `json:"opened_date,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	OpenedByUserId *int32 `json:"opened_by_user_id,omitempty"`
	ClosedDate *string `json:"closed_date,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ClosedByUserId *int32 `json:"closed_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audits.id`.<fk table='ops_audits' column='id'/>
	OpsAuditId *int32 `json:"ops_audit_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_items.id`.<fk table='ops_audit_items' column='id'/>
	OpsAuditItemId *int32 `json:"ops_audit_item_id,omitempty"`
	// Note: This is a Foreign Key to `action_plans.id`.<fk table='action_plans' column='id'/>
	ActionPlanId *int32 `json:"action_plan_id,omitempty"`
	// Note: This is a Foreign Key to `risks.id`.<fk table='risks' column='id'/>
	RiskId *int32 `json:"risk_id,omitempty"`
	ExternalIntegrationUrl *string `json:"external_integration_url,omitempty"`
	// Note: This is a Foreign Key to `framework_items.id`.<fk table='framework_items' column='id'/>
	FrameworkItemId *int32 `json:"framework_item_id,omitempty"`
	HistoricalTaskIds interface{} `json:"historical_task_ids,omitempty"`
	// Note: This is a Foreign Key to `narratives.id`.<fk table='narratives' column='id'/>
	NarrativeId *int32 `json:"narrative_id,omitempty"`
	// Note: This is a Foreign Key to `auditable_entities.id`.<fk table='auditable_entities' column='id'/>
	AuditableEntityId *int32 `json:"auditable_entity_id,omitempty"`
	// Note: This is a Foreign Key to `policies.id`.<fk table='policies' column='id'/>
	PolicyId *int32 `json:"policy_id,omitempty"`
	FirstSubmittedDate *string `json:"first_submitted_date,omitempty"`
	FirstCertifiedDate *string `json:"first_certified_date,omitempty"`
	FirstClosedDate *string `json:"first_closed_date,omitempty"`
	// Note: This is a Foreign Key to `auditable_entity_risks.id`.<fk table='auditable_entity_risks' column='id'/>
	AuditableEntityRiskId *int32 `json:"auditable_entity_risk_id,omitempty"`
	Type *string `json:"type,omitempty"`
	// Note: This is a Foreign Key to `esg_topics.id`.<fk table='esg_topics' column='id'/>
	EsgTopicId *int32 `json:"esg_topic_id,omitempty"`
	CreateReason *string `json:"create_reason,omitempty"`
}

type _TaskItems TaskItems

// NewTaskItems instantiates a new TaskItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskItems(taskGroupId int32, budgetHours float32, actualHours float32) *TaskItems {
	this := TaskItems{}
	this.TaskGroupId = taskGroupId
	this.BudgetHours = budgetHours
	this.ActualHours = actualHours
	var status string = ""
	this.Status = &status
	var type_ string = "workstream"
	this.Type = &type_
	return &this
}

// NewTaskItemsWithDefaults instantiates a new TaskItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskItemsWithDefaults() *TaskItems {
	this := TaskItems{}
	var budgetHours float32 = 0
	this.BudgetHours = budgetHours
	var actualHours float32 = 0
	this.ActualHours = actualHours
	var status string = ""
	this.Status = &status
	var type_ string = "workstream"
	this.Type = &type_
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TaskItems) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TaskItems) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TaskItems) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TaskItems) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TaskItems) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *TaskItems) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TaskItems) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TaskItems) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *TaskItems) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *TaskItems) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *TaskItems) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *TaskItems) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetIsAcknowledgePrepared returns the IsAcknowledgePrepared field value if set, zero value otherwise.
func (o *TaskItems) GetIsAcknowledgePrepared() bool {
	if o == nil || IsNil(o.IsAcknowledgePrepared) {
		var ret bool
		return ret
	}
	return *o.IsAcknowledgePrepared
}

// GetIsAcknowledgePreparedOk returns a tuple with the IsAcknowledgePrepared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetIsAcknowledgePreparedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAcknowledgePrepared) {
		return nil, false
	}
	return o.IsAcknowledgePrepared, true
}

// HasIsAcknowledgePrepared returns a boolean if a field has been set.
func (o *TaskItems) HasIsAcknowledgePrepared() bool {
	if o != nil && !IsNil(o.IsAcknowledgePrepared) {
		return true
	}

	return false
}

// SetIsAcknowledgePrepared gets a reference to the given bool and assigns it to the IsAcknowledgePrepared field.
func (o *TaskItems) SetIsAcknowledgePrepared(v bool) {
	o.IsAcknowledgePrepared = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *TaskItems) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *TaskItems) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *TaskItems) SetDueDate(v string) {
	o.DueDate = &v
}

// GetSubmittedDate returns the SubmittedDate field value if set, zero value otherwise.
func (o *TaskItems) GetSubmittedDate() string {
	if o == nil || IsNil(o.SubmittedDate) {
		var ret string
		return ret
	}
	return *o.SubmittedDate
}

// GetSubmittedDateOk returns a tuple with the SubmittedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetSubmittedDateOk() (*string, bool) {
	if o == nil || IsNil(o.SubmittedDate) {
		return nil, false
	}
	return o.SubmittedDate, true
}

// HasSubmittedDate returns a boolean if a field has been set.
func (o *TaskItems) HasSubmittedDate() bool {
	if o != nil && !IsNil(o.SubmittedDate) {
		return true
	}

	return false
}

// SetSubmittedDate gets a reference to the given string and assigns it to the SubmittedDate field.
func (o *TaskItems) SetSubmittedDate(v string) {
	o.SubmittedDate = &v
}

// GetCertifiedDate returns the CertifiedDate field value if set, zero value otherwise.
func (o *TaskItems) GetCertifiedDate() string {
	if o == nil || IsNil(o.CertifiedDate) {
		var ret string
		return ret
	}
	return *o.CertifiedDate
}

// GetCertifiedDateOk returns a tuple with the CertifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetCertifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CertifiedDate) {
		return nil, false
	}
	return o.CertifiedDate, true
}

// HasCertifiedDate returns a boolean if a field has been set.
func (o *TaskItems) HasCertifiedDate() bool {
	if o != nil && !IsNil(o.CertifiedDate) {
		return true
	}

	return false
}

// SetCertifiedDate gets a reference to the given string and assigns it to the CertifiedDate field.
func (o *TaskItems) SetCertifiedDate(v string) {
	o.CertifiedDate = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *TaskItems) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *TaskItems) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *TaskItems) SetOrder(v int32) {
	o.Order = &v
}

// GetTaskGroupId returns the TaskGroupId field value
func (o *TaskItems) GetTaskGroupId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TaskGroupId
}

// GetTaskGroupIdOk returns a tuple with the TaskGroupId field value
// and a boolean to check if the value has been set.
func (o *TaskItems) GetTaskGroupIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaskGroupId, true
}

// SetTaskGroupId sets field value
func (o *TaskItems) SetTaskGroupId(v int32) {
	o.TaskGroupId = v
}

// GetAssigneeUserId returns the AssigneeUserId field value if set, zero value otherwise.
func (o *TaskItems) GetAssigneeUserId() int32 {
	if o == nil || IsNil(o.AssigneeUserId) {
		var ret int32
		return ret
	}
	return *o.AssigneeUserId
}

// GetAssigneeUserIdOk returns a tuple with the AssigneeUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetAssigneeUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AssigneeUserId) {
		return nil, false
	}
	return o.AssigneeUserId, true
}

// HasAssigneeUserId returns a boolean if a field has been set.
func (o *TaskItems) HasAssigneeUserId() bool {
	if o != nil && !IsNil(o.AssigneeUserId) {
		return true
	}

	return false
}

// SetAssigneeUserId gets a reference to the given int32 and assigns it to the AssigneeUserId field.
func (o *TaskItems) SetAssigneeUserId(v int32) {
	o.AssigneeUserId = &v
}

// GetSubmittedByUserId returns the SubmittedByUserId field value if set, zero value otherwise.
func (o *TaskItems) GetSubmittedByUserId() int32 {
	if o == nil || IsNil(o.SubmittedByUserId) {
		var ret int32
		return ret
	}
	return *o.SubmittedByUserId
}

// GetSubmittedByUserIdOk returns a tuple with the SubmittedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetSubmittedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SubmittedByUserId) {
		return nil, false
	}
	return o.SubmittedByUserId, true
}

// HasSubmittedByUserId returns a boolean if a field has been set.
func (o *TaskItems) HasSubmittedByUserId() bool {
	if o != nil && !IsNil(o.SubmittedByUserId) {
		return true
	}

	return false
}

// SetSubmittedByUserId gets a reference to the given int32 and assigns it to the SubmittedByUserId field.
func (o *TaskItems) SetSubmittedByUserId(v int32) {
	o.SubmittedByUserId = &v
}

// GetCertifiedByUserId returns the CertifiedByUserId field value if set, zero value otherwise.
func (o *TaskItems) GetCertifiedByUserId() int32 {
	if o == nil || IsNil(o.CertifiedByUserId) {
		var ret int32
		return ret
	}
	return *o.CertifiedByUserId
}

// GetCertifiedByUserIdOk returns a tuple with the CertifiedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetCertifiedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CertifiedByUserId) {
		return nil, false
	}
	return o.CertifiedByUserId, true
}

// HasCertifiedByUserId returns a boolean if a field has been set.
func (o *TaskItems) HasCertifiedByUserId() bool {
	if o != nil && !IsNil(o.CertifiedByUserId) {
		return true
	}

	return false
}

// SetCertifiedByUserId gets a reference to the given int32 and assigns it to the CertifiedByUserId field.
func (o *TaskItems) SetCertifiedByUserId(v int32) {
	o.CertifiedByUserId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TaskItems) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TaskItems) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TaskItems) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TaskItems) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TaskItems) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TaskItems) SetDescription(v string) {
	o.Description = &v
}

// GetAssigneeResponse returns the AssigneeResponse field value if set, zero value otherwise.
func (o *TaskItems) GetAssigneeResponse() string {
	if o == nil || IsNil(o.AssigneeResponse) {
		var ret string
		return ret
	}
	return *o.AssigneeResponse
}

// GetAssigneeResponseOk returns a tuple with the AssigneeResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetAssigneeResponseOk() (*string, bool) {
	if o == nil || IsNil(o.AssigneeResponse) {
		return nil, false
	}
	return o.AssigneeResponse, true
}

// HasAssigneeResponse returns a boolean if a field has been set.
func (o *TaskItems) HasAssigneeResponse() bool {
	if o != nil && !IsNil(o.AssigneeResponse) {
		return true
	}

	return false
}

// SetAssigneeResponse gets a reference to the given string and assigns it to the AssigneeResponse field.
func (o *TaskItems) SetAssigneeResponse(v string) {
	o.AssigneeResponse = &v
}

// GetBudgetHours returns the BudgetHours field value
func (o *TaskItems) GetBudgetHours() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BudgetHours
}

// GetBudgetHoursOk returns a tuple with the BudgetHours field value
// and a boolean to check if the value has been set.
func (o *TaskItems) GetBudgetHoursOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BudgetHours, true
}

// SetBudgetHours sets field value
func (o *TaskItems) SetBudgetHours(v float32) {
	o.BudgetHours = v
}

// GetActualHours returns the ActualHours field value
func (o *TaskItems) GetActualHours() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ActualHours
}

// GetActualHoursOk returns a tuple with the ActualHours field value
// and a boolean to check if the value has been set.
func (o *TaskItems) GetActualHoursOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActualHours, true
}

// SetActualHours sets field value
func (o *TaskItems) SetActualHours(v float32) {
	o.ActualHours = v
}

// GetTaskPriorityId returns the TaskPriorityId field value if set, zero value otherwise.
func (o *TaskItems) GetTaskPriorityId() int32 {
	if o == nil || IsNil(o.TaskPriorityId) {
		var ret int32
		return ret
	}
	return *o.TaskPriorityId
}

// GetTaskPriorityIdOk returns a tuple with the TaskPriorityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetTaskPriorityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskPriorityId) {
		return nil, false
	}
	return o.TaskPriorityId, true
}

// HasTaskPriorityId returns a boolean if a field has been set.
func (o *TaskItems) HasTaskPriorityId() bool {
	if o != nil && !IsNil(o.TaskPriorityId) {
		return true
	}

	return false
}

// SetTaskPriorityId gets a reference to the given int32 and assigns it to the TaskPriorityId field.
func (o *TaskItems) SetTaskPriorityId(v int32) {
	o.TaskPriorityId = &v
}

// GetTaskPeriodId returns the TaskPeriodId field value if set, zero value otherwise.
func (o *TaskItems) GetTaskPeriodId() int32 {
	if o == nil || IsNil(o.TaskPeriodId) {
		var ret int32
		return ret
	}
	return *o.TaskPeriodId
}

// GetTaskPeriodIdOk returns a tuple with the TaskPeriodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetTaskPeriodIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskPeriodId) {
		return nil, false
	}
	return o.TaskPeriodId, true
}

// HasTaskPeriodId returns a boolean if a field has been set.
func (o *TaskItems) HasTaskPeriodId() bool {
	if o != nil && !IsNil(o.TaskPeriodId) {
		return true
	}

	return false
}

// SetTaskPeriodId gets a reference to the given int32 and assigns it to the TaskPeriodId field.
func (o *TaskItems) SetTaskPeriodId(v int32) {
	o.TaskPeriodId = &v
}

// GetReviewerUserId returns the ReviewerUserId field value if set, zero value otherwise.
func (o *TaskItems) GetReviewerUserId() int32 {
	if o == nil || IsNil(o.ReviewerUserId) {
		var ret int32
		return ret
	}
	return *o.ReviewerUserId
}

// GetReviewerUserIdOk returns a tuple with the ReviewerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetReviewerUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReviewerUserId) {
		return nil, false
	}
	return o.ReviewerUserId, true
}

// HasReviewerUserId returns a boolean if a field has been set.
func (o *TaskItems) HasReviewerUserId() bool {
	if o != nil && !IsNil(o.ReviewerUserId) {
		return true
	}

	return false
}

// SetReviewerUserId gets a reference to the given int32 and assigns it to the ReviewerUserId field.
func (o *TaskItems) SetReviewerUserId(v int32) {
	o.ReviewerUserId = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *TaskItems) GetLocationId() int32 {
	if o == nil || IsNil(o.LocationId) {
		var ret int32
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetLocationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LocationId) {
		return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *TaskItems) HasLocationId() bool {
	if o != nil && !IsNil(o.LocationId) {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given int32 and assigns it to the LocationId field.
func (o *TaskItems) SetLocationId(v int32) {
	o.LocationId = &v
}

// GetDepartmentId returns the DepartmentId field value if set, zero value otherwise.
func (o *TaskItems) GetDepartmentId() int32 {
	if o == nil || IsNil(o.DepartmentId) {
		var ret int32
		return ret
	}
	return *o.DepartmentId
}

// GetDepartmentIdOk returns a tuple with the DepartmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetDepartmentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DepartmentId) {
		return nil, false
	}
	return o.DepartmentId, true
}

// HasDepartmentId returns a boolean if a field has been set.
func (o *TaskItems) HasDepartmentId() bool {
	if o != nil && !IsNil(o.DepartmentId) {
		return true
	}

	return false
}

// SetDepartmentId gets a reference to the given int32 and assigns it to the DepartmentId field.
func (o *TaskItems) SetDepartmentId(v int32) {
	o.DepartmentId = &v
}

// GetReferenceNotes returns the ReferenceNotes field value if set, zero value otherwise.
func (o *TaskItems) GetReferenceNotes() string {
	if o == nil || IsNil(o.ReferenceNotes) {
		var ret string
		return ret
	}
	return *o.ReferenceNotes
}

// GetReferenceNotesOk returns a tuple with the ReferenceNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetReferenceNotesOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceNotes) {
		return nil, false
	}
	return o.ReferenceNotes, true
}

// HasReferenceNotes returns a boolean if a field has been set.
func (o *TaskItems) HasReferenceNotes() bool {
	if o != nil && !IsNil(o.ReferenceNotes) {
		return true
	}

	return false
}

// SetReferenceNotes gets a reference to the given string and assigns it to the ReferenceNotes field.
func (o *TaskItems) SetReferenceNotes(v string) {
	o.ReferenceNotes = &v
}

// GetControlsDatumId returns the ControlsDatumId field value if set, zero value otherwise.
func (o *TaskItems) GetControlsDatumId() int32 {
	if o == nil || IsNil(o.ControlsDatumId) {
		var ret int32
		return ret
	}
	return *o.ControlsDatumId
}

// GetControlsDatumIdOk returns a tuple with the ControlsDatumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetControlsDatumIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ControlsDatumId) {
		return nil, false
	}
	return o.ControlsDatumId, true
}

// HasControlsDatumId returns a boolean if a field has been set.
func (o *TaskItems) HasControlsDatumId() bool {
	if o != nil && !IsNil(o.ControlsDatumId) {
		return true
	}

	return false
}

// SetControlsDatumId gets a reference to the given int32 and assigns it to the ControlsDatumId field.
func (o *TaskItems) SetControlsDatumId(v int32) {
	o.ControlsDatumId = &v
}

// GetTaskCategoryId returns the TaskCategoryId field value if set, zero value otherwise.
func (o *TaskItems) GetTaskCategoryId() int32 {
	if o == nil || IsNil(o.TaskCategoryId) {
		var ret int32
		return ret
	}
	return *o.TaskCategoryId
}

// GetTaskCategoryIdOk returns a tuple with the TaskCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetTaskCategoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskCategoryId) {
		return nil, false
	}
	return o.TaskCategoryId, true
}

// HasTaskCategoryId returns a boolean if a field has been set.
func (o *TaskItems) HasTaskCategoryId() bool {
	if o != nil && !IsNil(o.TaskCategoryId) {
		return true
	}

	return false
}

// SetTaskCategoryId gets a reference to the given int32 and assigns it to the TaskCategoryId field.
func (o *TaskItems) SetTaskCategoryId(v int32) {
	o.TaskCategoryId = &v
}

// GetCreatorUserId returns the CreatorUserId field value if set, zero value otherwise.
func (o *TaskItems) GetCreatorUserId() int32 {
	if o == nil || IsNil(o.CreatorUserId) {
		var ret int32
		return ret
	}
	return *o.CreatorUserId
}

// GetCreatorUserIdOk returns a tuple with the CreatorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetCreatorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatorUserId) {
		return nil, false
	}
	return o.CreatorUserId, true
}

// HasCreatorUserId returns a boolean if a field has been set.
func (o *TaskItems) HasCreatorUserId() bool {
	if o != nil && !IsNil(o.CreatorUserId) {
		return true
	}

	return false
}

// SetCreatorUserId gets a reference to the given int32 and assigns it to the CreatorUserId field.
func (o *TaskItems) SetCreatorUserId(v int32) {
	o.CreatorUserId = &v
}

// GetMetaConfig returns the MetaConfig field value if set, zero value otherwise.
func (o *TaskItems) GetMetaConfig() string {
	if o == nil || IsNil(o.MetaConfig) {
		var ret string
		return ret
	}
	return *o.MetaConfig
}

// GetMetaConfigOk returns a tuple with the MetaConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetMetaConfigOk() (*string, bool) {
	if o == nil || IsNil(o.MetaConfig) {
		return nil, false
	}
	return o.MetaConfig, true
}

// HasMetaConfig returns a boolean if a field has been set.
func (o *TaskItems) HasMetaConfig() bool {
	if o != nil && !IsNil(o.MetaConfig) {
		return true
	}

	return false
}

// SetMetaConfig gets a reference to the given string and assigns it to the MetaConfig field.
func (o *TaskItems) SetMetaConfig(v string) {
	o.MetaConfig = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TaskItems) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TaskItems) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TaskItems) SetStatus(v string) {
	o.Status = &v
}

// GetTestSectionId returns the TestSectionId field value if set, zero value otherwise.
func (o *TaskItems) GetTestSectionId() int32 {
	if o == nil || IsNil(o.TestSectionId) {
		var ret int32
		return ret
	}
	return *o.TestSectionId
}

// GetTestSectionIdOk returns a tuple with the TestSectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetTestSectionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestSectionId) {
		return nil, false
	}
	return o.TestSectionId, true
}

// HasTestSectionId returns a boolean if a field has been set.
func (o *TaskItems) HasTestSectionId() bool {
	if o != nil && !IsNil(o.TestSectionId) {
		return true
	}

	return false
}

// SetTestSectionId gets a reference to the given int32 and assigns it to the TestSectionId field.
func (o *TaskItems) SetTestSectionId(v int32) {
	o.TestSectionId = &v
}

// GetIssueId returns the IssueId field value if set, zero value otherwise.
func (o *TaskItems) GetIssueId() int32 {
	if o == nil || IsNil(o.IssueId) {
		var ret int32
		return ret
	}
	return *o.IssueId
}

// GetIssueIdOk returns a tuple with the IssueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetIssueIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueId) {
		return nil, false
	}
	return o.IssueId, true
}

// HasIssueId returns a boolean if a field has been set.
func (o *TaskItems) HasIssueId() bool {
	if o != nil && !IsNil(o.IssueId) {
		return true
	}

	return false
}

// SetIssueId gets a reference to the given int32 and assigns it to the IssueId field.
func (o *TaskItems) SetIssueId(v int32) {
	o.IssueId = &v
}

// GetOpenedDate returns the OpenedDate field value if set, zero value otherwise.
func (o *TaskItems) GetOpenedDate() string {
	if o == nil || IsNil(o.OpenedDate) {
		var ret string
		return ret
	}
	return *o.OpenedDate
}

// GetOpenedDateOk returns a tuple with the OpenedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetOpenedDateOk() (*string, bool) {
	if o == nil || IsNil(o.OpenedDate) {
		return nil, false
	}
	return o.OpenedDate, true
}

// HasOpenedDate returns a boolean if a field has been set.
func (o *TaskItems) HasOpenedDate() bool {
	if o != nil && !IsNil(o.OpenedDate) {
		return true
	}

	return false
}

// SetOpenedDate gets a reference to the given string and assigns it to the OpenedDate field.
func (o *TaskItems) SetOpenedDate(v string) {
	o.OpenedDate = &v
}

// GetOpenedByUserId returns the OpenedByUserId field value if set, zero value otherwise.
func (o *TaskItems) GetOpenedByUserId() int32 {
	if o == nil || IsNil(o.OpenedByUserId) {
		var ret int32
		return ret
	}
	return *o.OpenedByUserId
}

// GetOpenedByUserIdOk returns a tuple with the OpenedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetOpenedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpenedByUserId) {
		return nil, false
	}
	return o.OpenedByUserId, true
}

// HasOpenedByUserId returns a boolean if a field has been set.
func (o *TaskItems) HasOpenedByUserId() bool {
	if o != nil && !IsNil(o.OpenedByUserId) {
		return true
	}

	return false
}

// SetOpenedByUserId gets a reference to the given int32 and assigns it to the OpenedByUserId field.
func (o *TaskItems) SetOpenedByUserId(v int32) {
	o.OpenedByUserId = &v
}

// GetClosedDate returns the ClosedDate field value if set, zero value otherwise.
func (o *TaskItems) GetClosedDate() string {
	if o == nil || IsNil(o.ClosedDate) {
		var ret string
		return ret
	}
	return *o.ClosedDate
}

// GetClosedDateOk returns a tuple with the ClosedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetClosedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ClosedDate) {
		return nil, false
	}
	return o.ClosedDate, true
}

// HasClosedDate returns a boolean if a field has been set.
func (o *TaskItems) HasClosedDate() bool {
	if o != nil && !IsNil(o.ClosedDate) {
		return true
	}

	return false
}

// SetClosedDate gets a reference to the given string and assigns it to the ClosedDate field.
func (o *TaskItems) SetClosedDate(v string) {
	o.ClosedDate = &v
}

// GetClosedByUserId returns the ClosedByUserId field value if set, zero value otherwise.
func (o *TaskItems) GetClosedByUserId() int32 {
	if o == nil || IsNil(o.ClosedByUserId) {
		var ret int32
		return ret
	}
	return *o.ClosedByUserId
}

// GetClosedByUserIdOk returns a tuple with the ClosedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetClosedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ClosedByUserId) {
		return nil, false
	}
	return o.ClosedByUserId, true
}

// HasClosedByUserId returns a boolean if a field has been set.
func (o *TaskItems) HasClosedByUserId() bool {
	if o != nil && !IsNil(o.ClosedByUserId) {
		return true
	}

	return false
}

// SetClosedByUserId gets a reference to the given int32 and assigns it to the ClosedByUserId field.
func (o *TaskItems) SetClosedByUserId(v int32) {
	o.ClosedByUserId = &v
}

// GetOpsAuditId returns the OpsAuditId field value if set, zero value otherwise.
func (o *TaskItems) GetOpsAuditId() int32 {
	if o == nil || IsNil(o.OpsAuditId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditId
}

// GetOpsAuditIdOk returns a tuple with the OpsAuditId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetOpsAuditIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditId) {
		return nil, false
	}
	return o.OpsAuditId, true
}

// HasOpsAuditId returns a boolean if a field has been set.
func (o *TaskItems) HasOpsAuditId() bool {
	if o != nil && !IsNil(o.OpsAuditId) {
		return true
	}

	return false
}

// SetOpsAuditId gets a reference to the given int32 and assigns it to the OpsAuditId field.
func (o *TaskItems) SetOpsAuditId(v int32) {
	o.OpsAuditId = &v
}

// GetOpsAuditItemId returns the OpsAuditItemId field value if set, zero value otherwise.
func (o *TaskItems) GetOpsAuditItemId() int32 {
	if o == nil || IsNil(o.OpsAuditItemId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditItemId
}

// GetOpsAuditItemIdOk returns a tuple with the OpsAuditItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetOpsAuditItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditItemId) {
		return nil, false
	}
	return o.OpsAuditItemId, true
}

// HasOpsAuditItemId returns a boolean if a field has been set.
func (o *TaskItems) HasOpsAuditItemId() bool {
	if o != nil && !IsNil(o.OpsAuditItemId) {
		return true
	}

	return false
}

// SetOpsAuditItemId gets a reference to the given int32 and assigns it to the OpsAuditItemId field.
func (o *TaskItems) SetOpsAuditItemId(v int32) {
	o.OpsAuditItemId = &v
}

// GetActionPlanId returns the ActionPlanId field value if set, zero value otherwise.
func (o *TaskItems) GetActionPlanId() int32 {
	if o == nil || IsNil(o.ActionPlanId) {
		var ret int32
		return ret
	}
	return *o.ActionPlanId
}

// GetActionPlanIdOk returns a tuple with the ActionPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetActionPlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ActionPlanId) {
		return nil, false
	}
	return o.ActionPlanId, true
}

// HasActionPlanId returns a boolean if a field has been set.
func (o *TaskItems) HasActionPlanId() bool {
	if o != nil && !IsNil(o.ActionPlanId) {
		return true
	}

	return false
}

// SetActionPlanId gets a reference to the given int32 and assigns it to the ActionPlanId field.
func (o *TaskItems) SetActionPlanId(v int32) {
	o.ActionPlanId = &v
}

// GetRiskId returns the RiskId field value if set, zero value otherwise.
func (o *TaskItems) GetRiskId() int32 {
	if o == nil || IsNil(o.RiskId) {
		var ret int32
		return ret
	}
	return *o.RiskId
}

// GetRiskIdOk returns a tuple with the RiskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetRiskIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RiskId) {
		return nil, false
	}
	return o.RiskId, true
}

// HasRiskId returns a boolean if a field has been set.
func (o *TaskItems) HasRiskId() bool {
	if o != nil && !IsNil(o.RiskId) {
		return true
	}

	return false
}

// SetRiskId gets a reference to the given int32 and assigns it to the RiskId field.
func (o *TaskItems) SetRiskId(v int32) {
	o.RiskId = &v
}

// GetExternalIntegrationUrl returns the ExternalIntegrationUrl field value if set, zero value otherwise.
func (o *TaskItems) GetExternalIntegrationUrl() string {
	if o == nil || IsNil(o.ExternalIntegrationUrl) {
		var ret string
		return ret
	}
	return *o.ExternalIntegrationUrl
}

// GetExternalIntegrationUrlOk returns a tuple with the ExternalIntegrationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetExternalIntegrationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalIntegrationUrl) {
		return nil, false
	}
	return o.ExternalIntegrationUrl, true
}

// HasExternalIntegrationUrl returns a boolean if a field has been set.
func (o *TaskItems) HasExternalIntegrationUrl() bool {
	if o != nil && !IsNil(o.ExternalIntegrationUrl) {
		return true
	}

	return false
}

// SetExternalIntegrationUrl gets a reference to the given string and assigns it to the ExternalIntegrationUrl field.
func (o *TaskItems) SetExternalIntegrationUrl(v string) {
	o.ExternalIntegrationUrl = &v
}

// GetFrameworkItemId returns the FrameworkItemId field value if set, zero value otherwise.
func (o *TaskItems) GetFrameworkItemId() int32 {
	if o == nil || IsNil(o.FrameworkItemId) {
		var ret int32
		return ret
	}
	return *o.FrameworkItemId
}

// GetFrameworkItemIdOk returns a tuple with the FrameworkItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetFrameworkItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FrameworkItemId) {
		return nil, false
	}
	return o.FrameworkItemId, true
}

// HasFrameworkItemId returns a boolean if a field has been set.
func (o *TaskItems) HasFrameworkItemId() bool {
	if o != nil && !IsNil(o.FrameworkItemId) {
		return true
	}

	return false
}

// SetFrameworkItemId gets a reference to the given int32 and assigns it to the FrameworkItemId field.
func (o *TaskItems) SetFrameworkItemId(v int32) {
	o.FrameworkItemId = &v
}

// GetHistoricalTaskIds returns the HistoricalTaskIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskItems) GetHistoricalTaskIds() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.HistoricalTaskIds
}

// GetHistoricalTaskIdsOk returns a tuple with the HistoricalTaskIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskItems) GetHistoricalTaskIdsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.HistoricalTaskIds) {
		return nil, false
	}
	return &o.HistoricalTaskIds, true
}

// HasHistoricalTaskIds returns a boolean if a field has been set.
func (o *TaskItems) HasHistoricalTaskIds() bool {
	if o != nil && !IsNil(o.HistoricalTaskIds) {
		return true
	}

	return false
}

// SetHistoricalTaskIds gets a reference to the given interface{} and assigns it to the HistoricalTaskIds field.
func (o *TaskItems) SetHistoricalTaskIds(v interface{}) {
	o.HistoricalTaskIds = v
}

// GetNarrativeId returns the NarrativeId field value if set, zero value otherwise.
func (o *TaskItems) GetNarrativeId() int32 {
	if o == nil || IsNil(o.NarrativeId) {
		var ret int32
		return ret
	}
	return *o.NarrativeId
}

// GetNarrativeIdOk returns a tuple with the NarrativeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetNarrativeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NarrativeId) {
		return nil, false
	}
	return o.NarrativeId, true
}

// HasNarrativeId returns a boolean if a field has been set.
func (o *TaskItems) HasNarrativeId() bool {
	if o != nil && !IsNil(o.NarrativeId) {
		return true
	}

	return false
}

// SetNarrativeId gets a reference to the given int32 and assigns it to the NarrativeId field.
func (o *TaskItems) SetNarrativeId(v int32) {
	o.NarrativeId = &v
}

// GetAuditableEntityId returns the AuditableEntityId field value if set, zero value otherwise.
func (o *TaskItems) GetAuditableEntityId() int32 {
	if o == nil || IsNil(o.AuditableEntityId) {
		var ret int32
		return ret
	}
	return *o.AuditableEntityId
}

// GetAuditableEntityIdOk returns a tuple with the AuditableEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetAuditableEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuditableEntityId) {
		return nil, false
	}
	return o.AuditableEntityId, true
}

// HasAuditableEntityId returns a boolean if a field has been set.
func (o *TaskItems) HasAuditableEntityId() bool {
	if o != nil && !IsNil(o.AuditableEntityId) {
		return true
	}

	return false
}

// SetAuditableEntityId gets a reference to the given int32 and assigns it to the AuditableEntityId field.
func (o *TaskItems) SetAuditableEntityId(v int32) {
	o.AuditableEntityId = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *TaskItems) GetPolicyId() int32 {
	if o == nil || IsNil(o.PolicyId) {
		var ret int32
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetPolicyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *TaskItems) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given int32 and assigns it to the PolicyId field.
func (o *TaskItems) SetPolicyId(v int32) {
	o.PolicyId = &v
}

// GetFirstSubmittedDate returns the FirstSubmittedDate field value if set, zero value otherwise.
func (o *TaskItems) GetFirstSubmittedDate() string {
	if o == nil || IsNil(o.FirstSubmittedDate) {
		var ret string
		return ret
	}
	return *o.FirstSubmittedDate
}

// GetFirstSubmittedDateOk returns a tuple with the FirstSubmittedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetFirstSubmittedDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstSubmittedDate) {
		return nil, false
	}
	return o.FirstSubmittedDate, true
}

// HasFirstSubmittedDate returns a boolean if a field has been set.
func (o *TaskItems) HasFirstSubmittedDate() bool {
	if o != nil && !IsNil(o.FirstSubmittedDate) {
		return true
	}

	return false
}

// SetFirstSubmittedDate gets a reference to the given string and assigns it to the FirstSubmittedDate field.
func (o *TaskItems) SetFirstSubmittedDate(v string) {
	o.FirstSubmittedDate = &v
}

// GetFirstCertifiedDate returns the FirstCertifiedDate field value if set, zero value otherwise.
func (o *TaskItems) GetFirstCertifiedDate() string {
	if o == nil || IsNil(o.FirstCertifiedDate) {
		var ret string
		return ret
	}
	return *o.FirstCertifiedDate
}

// GetFirstCertifiedDateOk returns a tuple with the FirstCertifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetFirstCertifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstCertifiedDate) {
		return nil, false
	}
	return o.FirstCertifiedDate, true
}

// HasFirstCertifiedDate returns a boolean if a field has been set.
func (o *TaskItems) HasFirstCertifiedDate() bool {
	if o != nil && !IsNil(o.FirstCertifiedDate) {
		return true
	}

	return false
}

// SetFirstCertifiedDate gets a reference to the given string and assigns it to the FirstCertifiedDate field.
func (o *TaskItems) SetFirstCertifiedDate(v string) {
	o.FirstCertifiedDate = &v
}

// GetFirstClosedDate returns the FirstClosedDate field value if set, zero value otherwise.
func (o *TaskItems) GetFirstClosedDate() string {
	if o == nil || IsNil(o.FirstClosedDate) {
		var ret string
		return ret
	}
	return *o.FirstClosedDate
}

// GetFirstClosedDateOk returns a tuple with the FirstClosedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetFirstClosedDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstClosedDate) {
		return nil, false
	}
	return o.FirstClosedDate, true
}

// HasFirstClosedDate returns a boolean if a field has been set.
func (o *TaskItems) HasFirstClosedDate() bool {
	if o != nil && !IsNil(o.FirstClosedDate) {
		return true
	}

	return false
}

// SetFirstClosedDate gets a reference to the given string and assigns it to the FirstClosedDate field.
func (o *TaskItems) SetFirstClosedDate(v string) {
	o.FirstClosedDate = &v
}

// GetAuditableEntityRiskId returns the AuditableEntityRiskId field value if set, zero value otherwise.
func (o *TaskItems) GetAuditableEntityRiskId() int32 {
	if o == nil || IsNil(o.AuditableEntityRiskId) {
		var ret int32
		return ret
	}
	return *o.AuditableEntityRiskId
}

// GetAuditableEntityRiskIdOk returns a tuple with the AuditableEntityRiskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetAuditableEntityRiskIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuditableEntityRiskId) {
		return nil, false
	}
	return o.AuditableEntityRiskId, true
}

// HasAuditableEntityRiskId returns a boolean if a field has been set.
func (o *TaskItems) HasAuditableEntityRiskId() bool {
	if o != nil && !IsNil(o.AuditableEntityRiskId) {
		return true
	}

	return false
}

// SetAuditableEntityRiskId gets a reference to the given int32 and assigns it to the AuditableEntityRiskId field.
func (o *TaskItems) SetAuditableEntityRiskId(v int32) {
	o.AuditableEntityRiskId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TaskItems) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TaskItems) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TaskItems) SetType(v string) {
	o.Type = &v
}

// GetEsgTopicId returns the EsgTopicId field value if set, zero value otherwise.
func (o *TaskItems) GetEsgTopicId() int32 {
	if o == nil || IsNil(o.EsgTopicId) {
		var ret int32
		return ret
	}
	return *o.EsgTopicId
}

// GetEsgTopicIdOk returns a tuple with the EsgTopicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetEsgTopicIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EsgTopicId) {
		return nil, false
	}
	return o.EsgTopicId, true
}

// HasEsgTopicId returns a boolean if a field has been set.
func (o *TaskItems) HasEsgTopicId() bool {
	if o != nil && !IsNil(o.EsgTopicId) {
		return true
	}

	return false
}

// SetEsgTopicId gets a reference to the given int32 and assigns it to the EsgTopicId field.
func (o *TaskItems) SetEsgTopicId(v int32) {
	o.EsgTopicId = &v
}

// GetCreateReason returns the CreateReason field value if set, zero value otherwise.
func (o *TaskItems) GetCreateReason() string {
	if o == nil || IsNil(o.CreateReason) {
		var ret string
		return ret
	}
	return *o.CreateReason
}

// GetCreateReasonOk returns a tuple with the CreateReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItems) GetCreateReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CreateReason) {
		return nil, false
	}
	return o.CreateReason, true
}

// HasCreateReason returns a boolean if a field has been set.
func (o *TaskItems) HasCreateReason() bool {
	if o != nil && !IsNil(o.CreateReason) {
		return true
	}

	return false
}

// SetCreateReason gets a reference to the given string and assigns it to the CreateReason field.
func (o *TaskItems) SetCreateReason(v string) {
	o.CreateReason = &v
}

func (o TaskItems) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskItems) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.IsAcknowledgePrepared) {
		toSerialize["is_acknowledge_prepared"] = o.IsAcknowledgePrepared
	}
	if !IsNil(o.DueDate) {
		toSerialize["due_date"] = o.DueDate
	}
	if !IsNil(o.SubmittedDate) {
		toSerialize["submitted_date"] = o.SubmittedDate
	}
	if !IsNil(o.CertifiedDate) {
		toSerialize["certified_date"] = o.CertifiedDate
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	toSerialize["task_group_id"] = o.TaskGroupId
	if !IsNil(o.AssigneeUserId) {
		toSerialize["assignee_user_id"] = o.AssigneeUserId
	}
	if !IsNil(o.SubmittedByUserId) {
		toSerialize["submitted_by_user_id"] = o.SubmittedByUserId
	}
	if !IsNil(o.CertifiedByUserId) {
		toSerialize["certified_by_user_id"] = o.CertifiedByUserId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AssigneeResponse) {
		toSerialize["assignee_response"] = o.AssigneeResponse
	}
	toSerialize["budget_hours"] = o.BudgetHours
	toSerialize["actual_hours"] = o.ActualHours
	if !IsNil(o.TaskPriorityId) {
		toSerialize["task_priority_id"] = o.TaskPriorityId
	}
	if !IsNil(o.TaskPeriodId) {
		toSerialize["task_period_id"] = o.TaskPeriodId
	}
	if !IsNil(o.ReviewerUserId) {
		toSerialize["reviewer_user_id"] = o.ReviewerUserId
	}
	if !IsNil(o.LocationId) {
		toSerialize["location_id"] = o.LocationId
	}
	if !IsNil(o.DepartmentId) {
		toSerialize["department_id"] = o.DepartmentId
	}
	if !IsNil(o.ReferenceNotes) {
		toSerialize["reference_notes"] = o.ReferenceNotes
	}
	if !IsNil(o.ControlsDatumId) {
		toSerialize["controls_datum_id"] = o.ControlsDatumId
	}
	if !IsNil(o.TaskCategoryId) {
		toSerialize["task_category_id"] = o.TaskCategoryId
	}
	if !IsNil(o.CreatorUserId) {
		toSerialize["creator_user_id"] = o.CreatorUserId
	}
	if !IsNil(o.MetaConfig) {
		toSerialize["meta_config"] = o.MetaConfig
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TestSectionId) {
		toSerialize["test_section_id"] = o.TestSectionId
	}
	if !IsNil(o.IssueId) {
		toSerialize["issue_id"] = o.IssueId
	}
	if !IsNil(o.OpenedDate) {
		toSerialize["opened_date"] = o.OpenedDate
	}
	if !IsNil(o.OpenedByUserId) {
		toSerialize["opened_by_user_id"] = o.OpenedByUserId
	}
	if !IsNil(o.ClosedDate) {
		toSerialize["closed_date"] = o.ClosedDate
	}
	if !IsNil(o.ClosedByUserId) {
		toSerialize["closed_by_user_id"] = o.ClosedByUserId
	}
	if !IsNil(o.OpsAuditId) {
		toSerialize["ops_audit_id"] = o.OpsAuditId
	}
	if !IsNil(o.OpsAuditItemId) {
		toSerialize["ops_audit_item_id"] = o.OpsAuditItemId
	}
	if !IsNil(o.ActionPlanId) {
		toSerialize["action_plan_id"] = o.ActionPlanId
	}
	if !IsNil(o.RiskId) {
		toSerialize["risk_id"] = o.RiskId
	}
	if !IsNil(o.ExternalIntegrationUrl) {
		toSerialize["external_integration_url"] = o.ExternalIntegrationUrl
	}
	if !IsNil(o.FrameworkItemId) {
		toSerialize["framework_item_id"] = o.FrameworkItemId
	}
	if o.HistoricalTaskIds != nil {
		toSerialize["historical_task_ids"] = o.HistoricalTaskIds
	}
	if !IsNil(o.NarrativeId) {
		toSerialize["narrative_id"] = o.NarrativeId
	}
	if !IsNil(o.AuditableEntityId) {
		toSerialize["auditable_entity_id"] = o.AuditableEntityId
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policy_id"] = o.PolicyId
	}
	if !IsNil(o.FirstSubmittedDate) {
		toSerialize["first_submitted_date"] = o.FirstSubmittedDate
	}
	if !IsNil(o.FirstCertifiedDate) {
		toSerialize["first_certified_date"] = o.FirstCertifiedDate
	}
	if !IsNil(o.FirstClosedDate) {
		toSerialize["first_closed_date"] = o.FirstClosedDate
	}
	if !IsNil(o.AuditableEntityRiskId) {
		toSerialize["auditable_entity_risk_id"] = o.AuditableEntityRiskId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.EsgTopicId) {
		toSerialize["esg_topic_id"] = o.EsgTopicId
	}
	if !IsNil(o.CreateReason) {
		toSerialize["create_reason"] = o.CreateReason
	}
	return toSerialize, nil
}

type NullableTaskItems struct {
	value *TaskItems
	isSet bool
}

func (v NullableTaskItems) Get() *TaskItems {
	return v.value
}

func (v *NullableTaskItems) Set(val *TaskItems) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskItems) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskItems(val *TaskItems) *NullableTaskItems {
	return &NullableTaskItems{value: val, isSet: true}
}

func (v NullableTaskItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


