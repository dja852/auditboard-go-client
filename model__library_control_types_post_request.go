/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the LibraryControlTypesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LibraryControlTypesPostRequest{}

// LibraryControlTypesPostRequest struct for LibraryControlTypesPostRequest
type LibraryControlTypesPostRequest struct {
	LibraryControlType *LibraryControlTypes `json:"library_control _type,omitempty"`
}

// NewLibraryControlTypesPostRequest instantiates a new LibraryControlTypesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLibraryControlTypesPostRequest() *LibraryControlTypesPostRequest {
	this := LibraryControlTypesPostRequest{}
	return &this
}

// NewLibraryControlTypesPostRequestWithDefaults instantiates a new LibraryControlTypesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLibraryControlTypesPostRequestWithDefaults() *LibraryControlTypesPostRequest {
	this := LibraryControlTypesPostRequest{}
	return &this
}

// GetLibraryControlType returns the LibraryControlType field value if set, zero value otherwise.
func (o *LibraryControlTypesPostRequest) GetLibraryControlType() LibraryControlTypes {
	if o == nil || IsNil(o.LibraryControlType) {
		var ret LibraryControlTypes
		return ret
	}
	return *o.LibraryControlType
}

// GetLibraryControlTypeOk returns a tuple with the LibraryControlType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LibraryControlTypesPostRequest) GetLibraryControlTypeOk() (*LibraryControlTypes, bool) {
	if o == nil || IsNil(o.LibraryControlType) {
		return nil, false
	}
	return o.LibraryControlType, true
}

// HasLibraryControlType returns a boolean if a field has been set.
func (o *LibraryControlTypesPostRequest) HasLibraryControlType() bool {
	if o != nil && !IsNil(o.LibraryControlType) {
		return true
	}

	return false
}

// SetLibraryControlType gets a reference to the given LibraryControlTypes and assigns it to the LibraryControlType field.
func (o *LibraryControlTypesPostRequest) SetLibraryControlType(v LibraryControlTypes) {
	o.LibraryControlType = &v
}

func (o LibraryControlTypesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LibraryControlTypesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LibraryControlType) {
		toSerialize["library_control _type"] = o.LibraryControlType
	}
	return toSerialize, nil
}

type NullableLibraryControlTypesPostRequest struct {
	value *LibraryControlTypesPostRequest
	isSet bool
}

func (v NullableLibraryControlTypesPostRequest) Get() *LibraryControlTypesPostRequest {
	return v.value
}

func (v *NullableLibraryControlTypesPostRequest) Set(val *LibraryControlTypesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLibraryControlTypesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLibraryControlTypesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLibraryControlTypesPostRequest(val *LibraryControlTypesPostRequest) *NullableLibraryControlTypesPostRequest {
	return &NullableLibraryControlTypesPostRequest{value: val, isSet: true}
}

func (v NullableLibraryControlTypesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLibraryControlTypesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


