/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TestSectionsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestSectionsGet200Response{}

// TestSectionsGet200Response struct for TestSectionsGet200Response
type TestSectionsGet200Response struct {
	TestSections []TestSections `json:"test_sections,omitempty"`
}

// NewTestSectionsGet200Response instantiates a new TestSectionsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestSectionsGet200Response() *TestSectionsGet200Response {
	this := TestSectionsGet200Response{}
	return &this
}

// NewTestSectionsGet200ResponseWithDefaults instantiates a new TestSectionsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestSectionsGet200ResponseWithDefaults() *TestSectionsGet200Response {
	this := TestSectionsGet200Response{}
	return &this
}

// GetTestSections returns the TestSections field value if set, zero value otherwise.
func (o *TestSectionsGet200Response) GetTestSections() []TestSections {
	if o == nil || IsNil(o.TestSections) {
		var ret []TestSections
		return ret
	}
	return o.TestSections
}

// GetTestSectionsOk returns a tuple with the TestSections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestSectionsGet200Response) GetTestSectionsOk() ([]TestSections, bool) {
	if o == nil || IsNil(o.TestSections) {
		return nil, false
	}
	return o.TestSections, true
}

// HasTestSections returns a boolean if a field has been set.
func (o *TestSectionsGet200Response) HasTestSections() bool {
	if o != nil && !IsNil(o.TestSections) {
		return true
	}

	return false
}

// SetTestSections gets a reference to the given []TestSections and assigns it to the TestSections field.
func (o *TestSectionsGet200Response) SetTestSections(v []TestSections) {
	o.TestSections = v
}

func (o TestSectionsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestSectionsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TestSections) {
		toSerialize["test_sections"] = o.TestSections
	}
	return toSerialize, nil
}

type NullableTestSectionsGet200Response struct {
	value *TestSectionsGet200Response
	isSet bool
}

func (v NullableTestSectionsGet200Response) Get() *TestSectionsGet200Response {
	return v.value
}

func (v *NullableTestSectionsGet200Response) Set(val *TestSectionsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTestSectionsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTestSectionsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestSectionsGet200Response(val *TestSectionsGet200Response) *NullableTestSectionsGet200Response {
	return &NullableTestSectionsGet200Response{value: val, isSet: true}
}

func (v NullableTestSectionsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestSectionsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


