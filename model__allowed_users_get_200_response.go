/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AllowedUsersGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllowedUsersGet200Response{}

// AllowedUsersGet200Response struct for AllowedUsersGet200Response
type AllowedUsersGet200Response struct {
	AllowedUsers []AllowedUsers `json:"allowed_users,omitempty"`
}

// NewAllowedUsersGet200Response instantiates a new AllowedUsersGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowedUsersGet200Response() *AllowedUsersGet200Response {
	this := AllowedUsersGet200Response{}
	return &this
}

// NewAllowedUsersGet200ResponseWithDefaults instantiates a new AllowedUsersGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowedUsersGet200ResponseWithDefaults() *AllowedUsersGet200Response {
	this := AllowedUsersGet200Response{}
	return &this
}

// GetAllowedUsers returns the AllowedUsers field value if set, zero value otherwise.
func (o *AllowedUsersGet200Response) GetAllowedUsers() []AllowedUsers {
	if o == nil || IsNil(o.AllowedUsers) {
		var ret []AllowedUsers
		return ret
	}
	return o.AllowedUsers
}

// GetAllowedUsersOk returns a tuple with the AllowedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedUsersGet200Response) GetAllowedUsersOk() ([]AllowedUsers, bool) {
	if o == nil || IsNil(o.AllowedUsers) {
		return nil, false
	}
	return o.AllowedUsers, true
}

// HasAllowedUsers returns a boolean if a field has been set.
func (o *AllowedUsersGet200Response) HasAllowedUsers() bool {
	if o != nil && !IsNil(o.AllowedUsers) {
		return true
	}

	return false
}

// SetAllowedUsers gets a reference to the given []AllowedUsers and assigns it to the AllowedUsers field.
func (o *AllowedUsersGet200Response) SetAllowedUsers(v []AllowedUsers) {
	o.AllowedUsers = v
}

func (o AllowedUsersGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllowedUsersGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedUsers) {
		toSerialize["allowed_users"] = o.AllowedUsers
	}
	return toSerialize, nil
}

type NullableAllowedUsersGet200Response struct {
	value *AllowedUsersGet200Response
	isSet bool
}

func (v NullableAllowedUsersGet200Response) Get() *AllowedUsersGet200Response {
	return v.value
}

func (v *NullableAllowedUsersGet200Response) Set(val *AllowedUsersGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowedUsersGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowedUsersGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowedUsersGet200Response(val *AllowedUsersGet200Response) *NullableAllowedUsersGet200Response {
	return &NullableAllowedUsersGet200Response{value: val, isSet: true}
}

func (v NullableAllowedUsersGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowedUsersGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


