/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AuditableEntitiesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditableEntitiesGet200Response{}

// AuditableEntitiesGet200Response struct for AuditableEntitiesGet200Response
type AuditableEntitiesGet200Response struct {
	AuditableEntities []AuditableEntities `json:"auditable_entities,omitempty"`
}

// NewAuditableEntitiesGet200Response instantiates a new AuditableEntitiesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditableEntitiesGet200Response() *AuditableEntitiesGet200Response {
	this := AuditableEntitiesGet200Response{}
	return &this
}

// NewAuditableEntitiesGet200ResponseWithDefaults instantiates a new AuditableEntitiesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditableEntitiesGet200ResponseWithDefaults() *AuditableEntitiesGet200Response {
	this := AuditableEntitiesGet200Response{}
	return &this
}

// GetAuditableEntities returns the AuditableEntities field value if set, zero value otherwise.
func (o *AuditableEntitiesGet200Response) GetAuditableEntities() []AuditableEntities {
	if o == nil || IsNil(o.AuditableEntities) {
		var ret []AuditableEntities
		return ret
	}
	return o.AuditableEntities
}

// GetAuditableEntitiesOk returns a tuple with the AuditableEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditableEntitiesGet200Response) GetAuditableEntitiesOk() ([]AuditableEntities, bool) {
	if o == nil || IsNil(o.AuditableEntities) {
		return nil, false
	}
	return o.AuditableEntities, true
}

// HasAuditableEntities returns a boolean if a field has been set.
func (o *AuditableEntitiesGet200Response) HasAuditableEntities() bool {
	if o != nil && !IsNil(o.AuditableEntities) {
		return true
	}

	return false
}

// SetAuditableEntities gets a reference to the given []AuditableEntities and assigns it to the AuditableEntities field.
func (o *AuditableEntitiesGet200Response) SetAuditableEntities(v []AuditableEntities) {
	o.AuditableEntities = v
}

func (o AuditableEntitiesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditableEntitiesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditableEntities) {
		toSerialize["auditable_entities"] = o.AuditableEntities
	}
	return toSerialize, nil
}

type NullableAuditableEntitiesGet200Response struct {
	value *AuditableEntitiesGet200Response
	isSet bool
}

func (v NullableAuditableEntitiesGet200Response) Get() *AuditableEntitiesGet200Response {
	return v.value
}

func (v *NullableAuditableEntitiesGet200Response) Set(val *AuditableEntitiesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditableEntitiesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditableEntitiesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditableEntitiesGet200Response(val *AuditableEntitiesGet200Response) *NullableAuditableEntitiesGet200Response {
	return &NullableAuditableEntitiesGet200Response{value: val, isSet: true}
}

func (v NullableAuditableEntitiesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditableEntitiesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


