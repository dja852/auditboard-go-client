/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TaskGroupsGroupsBulkEnableItems type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskGroupsGroupsBulkEnableItems{}

// TaskGroupsGroupsBulkEnableItems struct for TaskGroupsGroupsBulkEnableItems
type TaskGroupsGroupsBulkEnableItems struct {
	TaskGroups []TaskGroups `json:"task_groups,omitempty"`
	TaskItems []TaskItems `json:"task_items,omitempty"`
}

// NewTaskGroupsGroupsBulkEnableItems instantiates a new TaskGroupsGroupsBulkEnableItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskGroupsGroupsBulkEnableItems() *TaskGroupsGroupsBulkEnableItems {
	this := TaskGroupsGroupsBulkEnableItems{}
	return &this
}

// NewTaskGroupsGroupsBulkEnableItemsWithDefaults instantiates a new TaskGroupsGroupsBulkEnableItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskGroupsGroupsBulkEnableItemsWithDefaults() *TaskGroupsGroupsBulkEnableItems {
	this := TaskGroupsGroupsBulkEnableItems{}
	return &this
}

// GetTaskGroups returns the TaskGroups field value if set, zero value otherwise.
func (o *TaskGroupsGroupsBulkEnableItems) GetTaskGroups() []TaskGroups {
	if o == nil || IsNil(o.TaskGroups) {
		var ret []TaskGroups
		return ret
	}
	return o.TaskGroups
}

// GetTaskGroupsOk returns a tuple with the TaskGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsGroupsBulkEnableItems) GetTaskGroupsOk() ([]TaskGroups, bool) {
	if o == nil || IsNil(o.TaskGroups) {
		return nil, false
	}
	return o.TaskGroups, true
}

// HasTaskGroups returns a boolean if a field has been set.
func (o *TaskGroupsGroupsBulkEnableItems) HasTaskGroups() bool {
	if o != nil && !IsNil(o.TaskGroups) {
		return true
	}

	return false
}

// SetTaskGroups gets a reference to the given []TaskGroups and assigns it to the TaskGroups field.
func (o *TaskGroupsGroupsBulkEnableItems) SetTaskGroups(v []TaskGroups) {
	o.TaskGroups = v
}

// GetTaskItems returns the TaskItems field value if set, zero value otherwise.
func (o *TaskGroupsGroupsBulkEnableItems) GetTaskItems() []TaskItems {
	if o == nil || IsNil(o.TaskItems) {
		var ret []TaskItems
		return ret
	}
	return o.TaskItems
}

// GetTaskItemsOk returns a tuple with the TaskItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsGroupsBulkEnableItems) GetTaskItemsOk() ([]TaskItems, bool) {
	if o == nil || IsNil(o.TaskItems) {
		return nil, false
	}
	return o.TaskItems, true
}

// HasTaskItems returns a boolean if a field has been set.
func (o *TaskGroupsGroupsBulkEnableItems) HasTaskItems() bool {
	if o != nil && !IsNil(o.TaskItems) {
		return true
	}

	return false
}

// SetTaskItems gets a reference to the given []TaskItems and assigns it to the TaskItems field.
func (o *TaskGroupsGroupsBulkEnableItems) SetTaskItems(v []TaskItems) {
	o.TaskItems = v
}

func (o TaskGroupsGroupsBulkEnableItems) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskGroupsGroupsBulkEnableItems) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaskGroups) {
		toSerialize["task_groups"] = o.TaskGroups
	}
	if !IsNil(o.TaskItems) {
		toSerialize["task_items"] = o.TaskItems
	}
	return toSerialize, nil
}

type NullableTaskGroupsGroupsBulkEnableItems struct {
	value *TaskGroupsGroupsBulkEnableItems
	isSet bool
}

func (v NullableTaskGroupsGroupsBulkEnableItems) Get() *TaskGroupsGroupsBulkEnableItems {
	return v.value
}

func (v *NullableTaskGroupsGroupsBulkEnableItems) Set(val *TaskGroupsGroupsBulkEnableItems) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskGroupsGroupsBulkEnableItems) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskGroupsGroupsBulkEnableItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskGroupsGroupsBulkEnableItems(val *TaskGroupsGroupsBulkEnableItems) *NullableTaskGroupsGroupsBulkEnableItems {
	return &NullableTaskGroupsGroupsBulkEnableItems{value: val, isSet: true}
}

func (v NullableTaskGroupsGroupsBulkEnableItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskGroupsGroupsBulkEnableItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


