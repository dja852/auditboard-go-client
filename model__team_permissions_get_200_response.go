/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TeamPermissionsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamPermissionsGet200Response{}

// TeamPermissionsGet200Response struct for TeamPermissionsGet200Response
type TeamPermissionsGet200Response struct {
	TeamPermissions []TeamPermissions `json:"team_permissions,omitempty"`
}

// NewTeamPermissionsGet200Response instantiates a new TeamPermissionsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamPermissionsGet200Response() *TeamPermissionsGet200Response {
	this := TeamPermissionsGet200Response{}
	return &this
}

// NewTeamPermissionsGet200ResponseWithDefaults instantiates a new TeamPermissionsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamPermissionsGet200ResponseWithDefaults() *TeamPermissionsGet200Response {
	this := TeamPermissionsGet200Response{}
	return &this
}

// GetTeamPermissions returns the TeamPermissions field value if set, zero value otherwise.
func (o *TeamPermissionsGet200Response) GetTeamPermissions() []TeamPermissions {
	if o == nil || IsNil(o.TeamPermissions) {
		var ret []TeamPermissions
		return ret
	}
	return o.TeamPermissions
}

// GetTeamPermissionsOk returns a tuple with the TeamPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamPermissionsGet200Response) GetTeamPermissionsOk() ([]TeamPermissions, bool) {
	if o == nil || IsNil(o.TeamPermissions) {
		return nil, false
	}
	return o.TeamPermissions, true
}

// HasTeamPermissions returns a boolean if a field has been set.
func (o *TeamPermissionsGet200Response) HasTeamPermissions() bool {
	if o != nil && !IsNil(o.TeamPermissions) {
		return true
	}

	return false
}

// SetTeamPermissions gets a reference to the given []TeamPermissions and assigns it to the TeamPermissions field.
func (o *TeamPermissionsGet200Response) SetTeamPermissions(v []TeamPermissions) {
	o.TeamPermissions = v
}

func (o TeamPermissionsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamPermissionsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TeamPermissions) {
		toSerialize["team_permissions"] = o.TeamPermissions
	}
	return toSerialize, nil
}

type NullableTeamPermissionsGet200Response struct {
	value *TeamPermissionsGet200Response
	isSet bool
}

func (v NullableTeamPermissionsGet200Response) Get() *TeamPermissionsGet200Response {
	return v.value
}

func (v *NullableTeamPermissionsGet200Response) Set(val *TeamPermissionsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamPermissionsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamPermissionsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamPermissionsGet200Response(val *TeamPermissionsGet200Response) *NullableTeamPermissionsGet200Response {
	return &NullableTeamPermissionsGet200Response{value: val, isSet: true}
}

func (v NullableTeamPermissionsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamPermissionsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


