/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OpsAuditSubsections type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpsAuditSubsections{}

// OpsAuditSubsections struct for OpsAuditSubsections
type OpsAuditSubsections struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	SortOrder int32 `json:"sort_order"`
	Name string `json:"name"`
	// Note: This is a Foreign Key to `ops_audits.id`.<fk table='ops_audits' column='id'/>
	OpsAuditId int32 `json:"ops_audit_id"`
	// Note: This is a Foreign Key to `ops_audit_section_instances.id`.<fk table='ops_audit_section_instances' column='id'/>
	OpsAuditSectionInstanceId int32 `json:"ops_audit_section_instance_id"`
}

type _OpsAuditSubsections OpsAuditSubsections

// NewOpsAuditSubsections instantiates a new OpsAuditSubsections object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsAuditSubsections(sortOrder int32, name string, opsAuditId int32, opsAuditSectionInstanceId int32) *OpsAuditSubsections {
	this := OpsAuditSubsections{}
	this.SortOrder = sortOrder
	this.Name = name
	this.OpsAuditId = opsAuditId
	this.OpsAuditSectionInstanceId = opsAuditSectionInstanceId
	return &this
}

// NewOpsAuditSubsectionsWithDefaults instantiates a new OpsAuditSubsections object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsAuditSubsectionsWithDefaults() *OpsAuditSubsections {
	this := OpsAuditSubsections{}
	var sortOrder int32 = 0
	this.SortOrder = sortOrder
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpsAuditSubsections) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSubsections) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpsAuditSubsections) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OpsAuditSubsections) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OpsAuditSubsections) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSubsections) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OpsAuditSubsections) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *OpsAuditSubsections) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OpsAuditSubsections) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSubsections) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OpsAuditSubsections) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *OpsAuditSubsections) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *OpsAuditSubsections) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSubsections) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *OpsAuditSubsections) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *OpsAuditSubsections) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetSortOrder returns the SortOrder field value
func (o *OpsAuditSubsections) GetSortOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value
// and a boolean to check if the value has been set.
func (o *OpsAuditSubsections) GetSortOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SortOrder, true
}

// SetSortOrder sets field value
func (o *OpsAuditSubsections) SetSortOrder(v int32) {
	o.SortOrder = v
}

// GetName returns the Name field value
func (o *OpsAuditSubsections) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OpsAuditSubsections) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OpsAuditSubsections) SetName(v string) {
	o.Name = v
}

// GetOpsAuditId returns the OpsAuditId field value
func (o *OpsAuditSubsections) GetOpsAuditId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OpsAuditId
}

// GetOpsAuditIdOk returns a tuple with the OpsAuditId field value
// and a boolean to check if the value has been set.
func (o *OpsAuditSubsections) GetOpsAuditIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpsAuditId, true
}

// SetOpsAuditId sets field value
func (o *OpsAuditSubsections) SetOpsAuditId(v int32) {
	o.OpsAuditId = v
}

// GetOpsAuditSectionInstanceId returns the OpsAuditSectionInstanceId field value
func (o *OpsAuditSubsections) GetOpsAuditSectionInstanceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OpsAuditSectionInstanceId
}

// GetOpsAuditSectionInstanceIdOk returns a tuple with the OpsAuditSectionInstanceId field value
// and a boolean to check if the value has been set.
func (o *OpsAuditSubsections) GetOpsAuditSectionInstanceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpsAuditSectionInstanceId, true
}

// SetOpsAuditSectionInstanceId sets field value
func (o *OpsAuditSubsections) SetOpsAuditSectionInstanceId(v int32) {
	o.OpsAuditSectionInstanceId = v
}

func (o OpsAuditSubsections) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpsAuditSubsections) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	toSerialize["sort_order"] = o.SortOrder
	toSerialize["name"] = o.Name
	toSerialize["ops_audit_id"] = o.OpsAuditId
	toSerialize["ops_audit_section_instance_id"] = o.OpsAuditSectionInstanceId
	return toSerialize, nil
}

type NullableOpsAuditSubsections struct {
	value *OpsAuditSubsections
	isSet bool
}

func (v NullableOpsAuditSubsections) Get() *OpsAuditSubsections {
	return v.value
}

func (v *NullableOpsAuditSubsections) Set(val *OpsAuditSubsections) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsAuditSubsections) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsAuditSubsections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsAuditSubsections(val *OpsAuditSubsections) *NullableOpsAuditSubsections {
	return &NullableOpsAuditSubsections{value: val, isSet: true}
}

func (v NullableOpsAuditSubsections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsAuditSubsections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


