/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AssessmentResponsesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssessmentResponsesGet200Response{}

// AssessmentResponsesGet200Response struct for AssessmentResponsesGet200Response
type AssessmentResponsesGet200Response struct {
	AssessmentResponses []AssessmentResponses `json:"assessment_responses,omitempty"`
}

// NewAssessmentResponsesGet200Response instantiates a new AssessmentResponsesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssessmentResponsesGet200Response() *AssessmentResponsesGet200Response {
	this := AssessmentResponsesGet200Response{}
	return &this
}

// NewAssessmentResponsesGet200ResponseWithDefaults instantiates a new AssessmentResponsesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssessmentResponsesGet200ResponseWithDefaults() *AssessmentResponsesGet200Response {
	this := AssessmentResponsesGet200Response{}
	return &this
}

// GetAssessmentResponses returns the AssessmentResponses field value if set, zero value otherwise.
func (o *AssessmentResponsesGet200Response) GetAssessmentResponses() []AssessmentResponses {
	if o == nil || IsNil(o.AssessmentResponses) {
		var ret []AssessmentResponses
		return ret
	}
	return o.AssessmentResponses
}

// GetAssessmentResponsesOk returns a tuple with the AssessmentResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssessmentResponsesGet200Response) GetAssessmentResponsesOk() ([]AssessmentResponses, bool) {
	if o == nil || IsNil(o.AssessmentResponses) {
		return nil, false
	}
	return o.AssessmentResponses, true
}

// HasAssessmentResponses returns a boolean if a field has been set.
func (o *AssessmentResponsesGet200Response) HasAssessmentResponses() bool {
	if o != nil && !IsNil(o.AssessmentResponses) {
		return true
	}

	return false
}

// SetAssessmentResponses gets a reference to the given []AssessmentResponses and assigns it to the AssessmentResponses field.
func (o *AssessmentResponsesGet200Response) SetAssessmentResponses(v []AssessmentResponses) {
	o.AssessmentResponses = v
}

func (o AssessmentResponsesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssessmentResponsesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssessmentResponses) {
		toSerialize["assessment_responses"] = o.AssessmentResponses
	}
	return toSerialize, nil
}

type NullableAssessmentResponsesGet200Response struct {
	value *AssessmentResponsesGet200Response
	isSet bool
}

func (v NullableAssessmentResponsesGet200Response) Get() *AssessmentResponsesGet200Response {
	return v.value
}

func (v *NullableAssessmentResponsesGet200Response) Set(val *AssessmentResponsesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAssessmentResponsesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAssessmentResponsesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssessmentResponsesGet200Response(val *AssessmentResponsesGet200Response) *NullableAssessmentResponsesGet200Response {
	return &NullableAssessmentResponsesGet200Response{value: val, isSet: true}
}

func (v NullableAssessmentResponsesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssessmentResponsesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


