/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AuditableEntityRegionsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditableEntityRegionsPut{}

// AuditableEntityRegionsPut struct for AuditableEntityRegionsPut
type AuditableEntityRegionsPut struct {
	AuditableEntityRegion *AuditOfficeLocationsPutAuditOfficeLocation `json:"auditable_entity_region,omitempty"`
	PreviousValues *AuditOfficeLocationsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewAuditableEntityRegionsPut instantiates a new AuditableEntityRegionsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditableEntityRegionsPut() *AuditableEntityRegionsPut {
	this := AuditableEntityRegionsPut{}
	return &this
}

// NewAuditableEntityRegionsPutWithDefaults instantiates a new AuditableEntityRegionsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditableEntityRegionsPutWithDefaults() *AuditableEntityRegionsPut {
	this := AuditableEntityRegionsPut{}
	return &this
}

// GetAuditableEntityRegion returns the AuditableEntityRegion field value if set, zero value otherwise.
func (o *AuditableEntityRegionsPut) GetAuditableEntityRegion() AuditOfficeLocationsPutAuditOfficeLocation {
	if o == nil || IsNil(o.AuditableEntityRegion) {
		var ret AuditOfficeLocationsPutAuditOfficeLocation
		return ret
	}
	return *o.AuditableEntityRegion
}

// GetAuditableEntityRegionOk returns a tuple with the AuditableEntityRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditableEntityRegionsPut) GetAuditableEntityRegionOk() (*AuditOfficeLocationsPutAuditOfficeLocation, bool) {
	if o == nil || IsNil(o.AuditableEntityRegion) {
		return nil, false
	}
	return o.AuditableEntityRegion, true
}

// HasAuditableEntityRegion returns a boolean if a field has been set.
func (o *AuditableEntityRegionsPut) HasAuditableEntityRegion() bool {
	if o != nil && !IsNil(o.AuditableEntityRegion) {
		return true
	}

	return false
}

// SetAuditableEntityRegion gets a reference to the given AuditOfficeLocationsPutAuditOfficeLocation and assigns it to the AuditableEntityRegion field.
func (o *AuditableEntityRegionsPut) SetAuditableEntityRegion(v AuditOfficeLocationsPutAuditOfficeLocation) {
	o.AuditableEntityRegion = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *AuditableEntityRegionsPut) GetPreviousValues() AuditOfficeLocationsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret AuditOfficeLocationsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditableEntityRegionsPut) GetPreviousValuesOk() (*AuditOfficeLocationsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *AuditableEntityRegionsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given AuditOfficeLocationsPutPreviousValues and assigns it to the PreviousValues field.
func (o *AuditableEntityRegionsPut) SetPreviousValues(v AuditOfficeLocationsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o AuditableEntityRegionsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditableEntityRegionsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditableEntityRegion) {
		toSerialize["auditable_entity_region"] = o.AuditableEntityRegion
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableAuditableEntityRegionsPut struct {
	value *AuditableEntityRegionsPut
	isSet bool
}

func (v NullableAuditableEntityRegionsPut) Get() *AuditableEntityRegionsPut {
	return v.value
}

func (v *NullableAuditableEntityRegionsPut) Set(val *AuditableEntityRegionsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditableEntityRegionsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditableEntityRegionsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditableEntityRegionsPut(val *AuditableEntityRegionsPut) *NullableAuditableEntityRegionsPut {
	return &NullableAuditableEntityRegionsPut{value: val, isSet: true}
}

func (v NullableAuditableEntityRegionsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditableEntityRegionsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


