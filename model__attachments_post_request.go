/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AttachmentsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentsPostRequest{}

// AttachmentsPostRequest struct for AttachmentsPostRequest
type AttachmentsPostRequest struct {
	Attachment *Attachments `json:"attachment,omitempty"`
}

// NewAttachmentsPostRequest instantiates a new AttachmentsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentsPostRequest() *AttachmentsPostRequest {
	this := AttachmentsPostRequest{}
	return &this
}

// NewAttachmentsPostRequestWithDefaults instantiates a new AttachmentsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentsPostRequestWithDefaults() *AttachmentsPostRequest {
	this := AttachmentsPostRequest{}
	return &this
}

// GetAttachment returns the Attachment field value if set, zero value otherwise.
func (o *AttachmentsPostRequest) GetAttachment() Attachments {
	if o == nil || IsNil(o.Attachment) {
		var ret Attachments
		return ret
	}
	return *o.Attachment
}

// GetAttachmentOk returns a tuple with the Attachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentsPostRequest) GetAttachmentOk() (*Attachments, bool) {
	if o == nil || IsNil(o.Attachment) {
		return nil, false
	}
	return o.Attachment, true
}

// HasAttachment returns a boolean if a field has been set.
func (o *AttachmentsPostRequest) HasAttachment() bool {
	if o != nil && !IsNil(o.Attachment) {
		return true
	}

	return false
}

// SetAttachment gets a reference to the given Attachments and assigns it to the Attachment field.
func (o *AttachmentsPostRequest) SetAttachment(v Attachments) {
	o.Attachment = &v
}

func (o AttachmentsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachment) {
		toSerialize["attachment"] = o.Attachment
	}
	return toSerialize, nil
}

type NullableAttachmentsPostRequest struct {
	value *AttachmentsPostRequest
	isSet bool
}

func (v NullableAttachmentsPostRequest) Get() *AttachmentsPostRequest {
	return v.value
}

func (v *NullableAttachmentsPostRequest) Set(val *AttachmentsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentsPostRequest(val *AttachmentsPostRequest) *NullableAttachmentsPostRequest {
	return &NullableAttachmentsPostRequest{value: val, isSet: true}
}

func (v NullableAttachmentsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


