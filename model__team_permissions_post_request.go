/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TeamPermissionsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamPermissionsPostRequest{}

// TeamPermissionsPostRequest struct for TeamPermissionsPostRequest
type TeamPermissionsPostRequest struct {
	TeamPermission *TeamPermissions `json:"team_permission,omitempty"`
}

// NewTeamPermissionsPostRequest instantiates a new TeamPermissionsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamPermissionsPostRequest() *TeamPermissionsPostRequest {
	this := TeamPermissionsPostRequest{}
	return &this
}

// NewTeamPermissionsPostRequestWithDefaults instantiates a new TeamPermissionsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamPermissionsPostRequestWithDefaults() *TeamPermissionsPostRequest {
	this := TeamPermissionsPostRequest{}
	return &this
}

// GetTeamPermission returns the TeamPermission field value if set, zero value otherwise.
func (o *TeamPermissionsPostRequest) GetTeamPermission() TeamPermissions {
	if o == nil || IsNil(o.TeamPermission) {
		var ret TeamPermissions
		return ret
	}
	return *o.TeamPermission
}

// GetTeamPermissionOk returns a tuple with the TeamPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamPermissionsPostRequest) GetTeamPermissionOk() (*TeamPermissions, bool) {
	if o == nil || IsNil(o.TeamPermission) {
		return nil, false
	}
	return o.TeamPermission, true
}

// HasTeamPermission returns a boolean if a field has been set.
func (o *TeamPermissionsPostRequest) HasTeamPermission() bool {
	if o != nil && !IsNil(o.TeamPermission) {
		return true
	}

	return false
}

// SetTeamPermission gets a reference to the given TeamPermissions and assigns it to the TeamPermission field.
func (o *TeamPermissionsPostRequest) SetTeamPermission(v TeamPermissions) {
	o.TeamPermission = &v
}

func (o TeamPermissionsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamPermissionsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TeamPermission) {
		toSerialize["team_permission"] = o.TeamPermission
	}
	return toSerialize, nil
}

type NullableTeamPermissionsPostRequest struct {
	value *TeamPermissionsPostRequest
	isSet bool
}

func (v NullableTeamPermissionsPostRequest) Get() *TeamPermissionsPostRequest {
	return v.value
}

func (v *NullableTeamPermissionsPostRequest) Set(val *TeamPermissionsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamPermissionsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamPermissionsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamPermissionsPostRequest(val *TeamPermissionsPostRequest) *NullableTeamPermissionsPostRequest {
	return &NullableTeamPermissionsPostRequest{value: val, isSet: true}
}

func (v NullableTeamPermissionsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamPermissionsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


