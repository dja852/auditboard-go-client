/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TaskGroupsPutPreviousValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskGroupsPutPreviousValues{}

// TaskGroupsPutPreviousValues struct for TaskGroupsPutPreviousValues
type TaskGroupsPutPreviousValues struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	CreatorUserId *int32 `json:"creator_user_id,omitempty"`
	// Note: This is a Foreign Key to `task_categories.id`.<fk table='task_categories' column='id'/>
	TaskCategoryId *int32 `json:"task_category_id,omitempty"`
	ArchivedAt *string `json:"archived_at,omitempty"`
	// Note: This is a Foreign Key to `task_periods.id`.<fk table='task_periods' column='id'/>
	TaskPeriodId *int32 `json:"task_period_id,omitempty"`
	// Note: This is a Foreign Key to `surveys.id`.<fk table='surveys' column='id'/>
	SurveyId *int32 `json:"survey_id,omitempty"`
	StartedAt *string `json:"started_at,omitempty"`
	Status *string `json:"status,omitempty"`
	Title *string `json:"title,omitempty"`
	AllowYesToAll *bool `json:"allow_yes_to_all,omitempty"`
	// Note: This is a Foreign Key to `test_sections.id`.<fk table='test_sections' column='id'/>
	TestSectionId *int32 `json:"test_section_id,omitempty"`
	EmailProjectStart interface{} `json:"email_project_start,omitempty"`
	EmailPreparerDigest interface{} `json:"email_preparer_digest,omitempty"`
	EmailReviewerDigest interface{} `json:"email_reviewer_digest,omitempty"`
	EmailAdminDigest interface{} `json:"email_admin_digest,omitempty"`
	Uid *string `json:"uid,omitempty"`
	ReviewerUsers interface{} `json:"reviewer_users,omitempty"`
	AssigneeUsers interface{} `json:"assignee_users,omitempty"`
	IsMultiReviewer *bool `json:"is_multi_reviewer,omitempty"`
	ProjectOptions interface{} `json:"project_options,omitempty"`
	IsManagedChange *bool `json:"is_managed_change,omitempty"`
	SubscriberUsers interface{} `json:"subscriber_users,omitempty"`
	EmailSubscriberDigest interface{} `json:"email_subscriber_digest,omitempty"`
	// Note: This is a Foreign Key to `assessments.id`.<fk table='assessments' column='id'/>
	AssessmentId *int32 `json:"assessment_id,omitempty"`
	AdditionalAssigneeUsers interface{} `json:"additional_assignee_users,omitempty"`
	AdditionalPreparersEnabled *bool `json:"additional_preparers_enabled,omitempty"`
	EmailAdditionalPreparerDigest interface{} `json:"email_additional_preparer_digest,omitempty"`
	// Note: This is a Foreign Key to `task_groups.id`.<fk table='task_groups' column='id'/>
	HistoricalProjectId *int32 `json:"historical_project_id,omitempty"`
	Scopes interface{} `json:"scopes,omitempty"`
	ScheduledStartDate *string `json:"scheduled_start_date,omitempty"`
	Totals interface{} `json:"totals,omitempty"`
	ShortTitle *string `json:"short_title,omitempty"`
	// Note: This is a Foreign Key to `recurring_task_groups.id`.<fk table='recurring_task_groups' column='id'/>
	RecurringTaskGroupId *int32 `json:"recurring_task_group_id,omitempty"`
	// Note: This is a Foreign Key to `auditable_entities.id`.<fk table='auditable_entities' column='id'/>
	AuditableEntityId *int32 `json:"auditable_entity_id,omitempty"`
	MultiReviewerMode *string `json:"multi_reviewer_mode,omitempty"`
	RequiredReviewerCount *int32 `json:"required_reviewer_count,omitempty"`
	UserTotals interface{} `json:"user_totals,omitempty"`
}

// NewTaskGroupsPutPreviousValues instantiates a new TaskGroupsPutPreviousValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskGroupsPutPreviousValues() *TaskGroupsPutPreviousValues {
	this := TaskGroupsPutPreviousValues{}
	var allowYesToAll bool = false
	this.AllowYesToAll = &allowYesToAll
	var isMultiReviewer bool = false
	this.IsMultiReviewer = &isMultiReviewer
	var isManagedChange bool = false
	this.IsManagedChange = &isManagedChange
	var additionalPreparersEnabled bool = false
	this.AdditionalPreparersEnabled = &additionalPreparersEnabled
	var multiReviewerMode string = "sequential"
	this.MultiReviewerMode = &multiReviewerMode
	return &this
}

// NewTaskGroupsPutPreviousValuesWithDefaults instantiates a new TaskGroupsPutPreviousValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskGroupsPutPreviousValuesWithDefaults() *TaskGroupsPutPreviousValues {
	this := TaskGroupsPutPreviousValues{}
	var allowYesToAll bool = false
	this.AllowYesToAll = &allowYesToAll
	var isMultiReviewer bool = false
	this.IsMultiReviewer = &isMultiReviewer
	var isManagedChange bool = false
	this.IsManagedChange = &isManagedChange
	var additionalPreparersEnabled bool = false
	this.AdditionalPreparersEnabled = &additionalPreparersEnabled
	var multiReviewerMode string = "sequential"
	this.MultiReviewerMode = &multiReviewerMode
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TaskGroupsPutPreviousValues) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *TaskGroupsPutPreviousValues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *TaskGroupsPutPreviousValues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *TaskGroupsPutPreviousValues) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetCreatorUserId returns the CreatorUserId field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetCreatorUserId() int32 {
	if o == nil || IsNil(o.CreatorUserId) {
		var ret int32
		return ret
	}
	return *o.CreatorUserId
}

// GetCreatorUserIdOk returns a tuple with the CreatorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetCreatorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatorUserId) {
		return nil, false
	}
	return o.CreatorUserId, true
}

// HasCreatorUserId returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasCreatorUserId() bool {
	if o != nil && !IsNil(o.CreatorUserId) {
		return true
	}

	return false
}

// SetCreatorUserId gets a reference to the given int32 and assigns it to the CreatorUserId field.
func (o *TaskGroupsPutPreviousValues) SetCreatorUserId(v int32) {
	o.CreatorUserId = &v
}

// GetTaskCategoryId returns the TaskCategoryId field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetTaskCategoryId() int32 {
	if o == nil || IsNil(o.TaskCategoryId) {
		var ret int32
		return ret
	}
	return *o.TaskCategoryId
}

// GetTaskCategoryIdOk returns a tuple with the TaskCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetTaskCategoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskCategoryId) {
		return nil, false
	}
	return o.TaskCategoryId, true
}

// HasTaskCategoryId returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasTaskCategoryId() bool {
	if o != nil && !IsNil(o.TaskCategoryId) {
		return true
	}

	return false
}

// SetTaskCategoryId gets a reference to the given int32 and assigns it to the TaskCategoryId field.
func (o *TaskGroupsPutPreviousValues) SetTaskCategoryId(v int32) {
	o.TaskCategoryId = &v
}

// GetArchivedAt returns the ArchivedAt field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetArchivedAt() string {
	if o == nil || IsNil(o.ArchivedAt) {
		var ret string
		return ret
	}
	return *o.ArchivedAt
}

// GetArchivedAtOk returns a tuple with the ArchivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetArchivedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ArchivedAt) {
		return nil, false
	}
	return o.ArchivedAt, true
}

// HasArchivedAt returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasArchivedAt() bool {
	if o != nil && !IsNil(o.ArchivedAt) {
		return true
	}

	return false
}

// SetArchivedAt gets a reference to the given string and assigns it to the ArchivedAt field.
func (o *TaskGroupsPutPreviousValues) SetArchivedAt(v string) {
	o.ArchivedAt = &v
}

// GetTaskPeriodId returns the TaskPeriodId field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetTaskPeriodId() int32 {
	if o == nil || IsNil(o.TaskPeriodId) {
		var ret int32
		return ret
	}
	return *o.TaskPeriodId
}

// GetTaskPeriodIdOk returns a tuple with the TaskPeriodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetTaskPeriodIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskPeriodId) {
		return nil, false
	}
	return o.TaskPeriodId, true
}

// HasTaskPeriodId returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasTaskPeriodId() bool {
	if o != nil && !IsNil(o.TaskPeriodId) {
		return true
	}

	return false
}

// SetTaskPeriodId gets a reference to the given int32 and assigns it to the TaskPeriodId field.
func (o *TaskGroupsPutPreviousValues) SetTaskPeriodId(v int32) {
	o.TaskPeriodId = &v
}

// GetSurveyId returns the SurveyId field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetSurveyId() int32 {
	if o == nil || IsNil(o.SurveyId) {
		var ret int32
		return ret
	}
	return *o.SurveyId
}

// GetSurveyIdOk returns a tuple with the SurveyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetSurveyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SurveyId) {
		return nil, false
	}
	return o.SurveyId, true
}

// HasSurveyId returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasSurveyId() bool {
	if o != nil && !IsNil(o.SurveyId) {
		return true
	}

	return false
}

// SetSurveyId gets a reference to the given int32 and assigns it to the SurveyId field.
func (o *TaskGroupsPutPreviousValues) SetSurveyId(v int32) {
	o.SurveyId = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetStartedAt() string {
	if o == nil || IsNil(o.StartedAt) {
		var ret string
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetStartedAtOk() (*string, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasStartedAt() bool {
	if o != nil && !IsNil(o.StartedAt) {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given string and assigns it to the StartedAt field.
func (o *TaskGroupsPutPreviousValues) SetStartedAt(v string) {
	o.StartedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TaskGroupsPutPreviousValues) SetStatus(v string) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TaskGroupsPutPreviousValues) SetTitle(v string) {
	o.Title = &v
}

// GetAllowYesToAll returns the AllowYesToAll field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetAllowYesToAll() bool {
	if o == nil || IsNil(o.AllowYesToAll) {
		var ret bool
		return ret
	}
	return *o.AllowYesToAll
}

// GetAllowYesToAllOk returns a tuple with the AllowYesToAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetAllowYesToAllOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowYesToAll) {
		return nil, false
	}
	return o.AllowYesToAll, true
}

// HasAllowYesToAll returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasAllowYesToAll() bool {
	if o != nil && !IsNil(o.AllowYesToAll) {
		return true
	}

	return false
}

// SetAllowYesToAll gets a reference to the given bool and assigns it to the AllowYesToAll field.
func (o *TaskGroupsPutPreviousValues) SetAllowYesToAll(v bool) {
	o.AllowYesToAll = &v
}

// GetTestSectionId returns the TestSectionId field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetTestSectionId() int32 {
	if o == nil || IsNil(o.TestSectionId) {
		var ret int32
		return ret
	}
	return *o.TestSectionId
}

// GetTestSectionIdOk returns a tuple with the TestSectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetTestSectionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestSectionId) {
		return nil, false
	}
	return o.TestSectionId, true
}

// HasTestSectionId returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasTestSectionId() bool {
	if o != nil && !IsNil(o.TestSectionId) {
		return true
	}

	return false
}

// SetTestSectionId gets a reference to the given int32 and assigns it to the TestSectionId field.
func (o *TaskGroupsPutPreviousValues) SetTestSectionId(v int32) {
	o.TestSectionId = &v
}

// GetEmailProjectStart returns the EmailProjectStart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetEmailProjectStart() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.EmailProjectStart
}

// GetEmailProjectStartOk returns a tuple with the EmailProjectStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetEmailProjectStartOk() (*interface{}, bool) {
	if o == nil || IsNil(o.EmailProjectStart) {
		return nil, false
	}
	return &o.EmailProjectStart, true
}

// HasEmailProjectStart returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasEmailProjectStart() bool {
	if o != nil && !IsNil(o.EmailProjectStart) {
		return true
	}

	return false
}

// SetEmailProjectStart gets a reference to the given interface{} and assigns it to the EmailProjectStart field.
func (o *TaskGroupsPutPreviousValues) SetEmailProjectStart(v interface{}) {
	o.EmailProjectStart = v
}

// GetEmailPreparerDigest returns the EmailPreparerDigest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetEmailPreparerDigest() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.EmailPreparerDigest
}

// GetEmailPreparerDigestOk returns a tuple with the EmailPreparerDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetEmailPreparerDigestOk() (*interface{}, bool) {
	if o == nil || IsNil(o.EmailPreparerDigest) {
		return nil, false
	}
	return &o.EmailPreparerDigest, true
}

// HasEmailPreparerDigest returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasEmailPreparerDigest() bool {
	if o != nil && !IsNil(o.EmailPreparerDigest) {
		return true
	}

	return false
}

// SetEmailPreparerDigest gets a reference to the given interface{} and assigns it to the EmailPreparerDigest field.
func (o *TaskGroupsPutPreviousValues) SetEmailPreparerDigest(v interface{}) {
	o.EmailPreparerDigest = v
}

// GetEmailReviewerDigest returns the EmailReviewerDigest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetEmailReviewerDigest() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.EmailReviewerDigest
}

// GetEmailReviewerDigestOk returns a tuple with the EmailReviewerDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetEmailReviewerDigestOk() (*interface{}, bool) {
	if o == nil || IsNil(o.EmailReviewerDigest) {
		return nil, false
	}
	return &o.EmailReviewerDigest, true
}

// HasEmailReviewerDigest returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasEmailReviewerDigest() bool {
	if o != nil && !IsNil(o.EmailReviewerDigest) {
		return true
	}

	return false
}

// SetEmailReviewerDigest gets a reference to the given interface{} and assigns it to the EmailReviewerDigest field.
func (o *TaskGroupsPutPreviousValues) SetEmailReviewerDigest(v interface{}) {
	o.EmailReviewerDigest = v
}

// GetEmailAdminDigest returns the EmailAdminDigest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetEmailAdminDigest() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.EmailAdminDigest
}

// GetEmailAdminDigestOk returns a tuple with the EmailAdminDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetEmailAdminDigestOk() (*interface{}, bool) {
	if o == nil || IsNil(o.EmailAdminDigest) {
		return nil, false
	}
	return &o.EmailAdminDigest, true
}

// HasEmailAdminDigest returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasEmailAdminDigest() bool {
	if o != nil && !IsNil(o.EmailAdminDigest) {
		return true
	}

	return false
}

// SetEmailAdminDigest gets a reference to the given interface{} and assigns it to the EmailAdminDigest field.
func (o *TaskGroupsPutPreviousValues) SetEmailAdminDigest(v interface{}) {
	o.EmailAdminDigest = v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *TaskGroupsPutPreviousValues) SetUid(v string) {
	o.Uid = &v
}

// GetReviewerUsers returns the ReviewerUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetReviewerUsers() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReviewerUsers
}

// GetReviewerUsersOk returns a tuple with the ReviewerUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetReviewerUsersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReviewerUsers) {
		return nil, false
	}
	return &o.ReviewerUsers, true
}

// HasReviewerUsers returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasReviewerUsers() bool {
	if o != nil && !IsNil(o.ReviewerUsers) {
		return true
	}

	return false
}

// SetReviewerUsers gets a reference to the given interface{} and assigns it to the ReviewerUsers field.
func (o *TaskGroupsPutPreviousValues) SetReviewerUsers(v interface{}) {
	o.ReviewerUsers = v
}

// GetAssigneeUsers returns the AssigneeUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetAssigneeUsers() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AssigneeUsers
}

// GetAssigneeUsersOk returns a tuple with the AssigneeUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetAssigneeUsersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AssigneeUsers) {
		return nil, false
	}
	return &o.AssigneeUsers, true
}

// HasAssigneeUsers returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasAssigneeUsers() bool {
	if o != nil && !IsNil(o.AssigneeUsers) {
		return true
	}

	return false
}

// SetAssigneeUsers gets a reference to the given interface{} and assigns it to the AssigneeUsers field.
func (o *TaskGroupsPutPreviousValues) SetAssigneeUsers(v interface{}) {
	o.AssigneeUsers = v
}

// GetIsMultiReviewer returns the IsMultiReviewer field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetIsMultiReviewer() bool {
	if o == nil || IsNil(o.IsMultiReviewer) {
		var ret bool
		return ret
	}
	return *o.IsMultiReviewer
}

// GetIsMultiReviewerOk returns a tuple with the IsMultiReviewer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetIsMultiReviewerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMultiReviewer) {
		return nil, false
	}
	return o.IsMultiReviewer, true
}

// HasIsMultiReviewer returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasIsMultiReviewer() bool {
	if o != nil && !IsNil(o.IsMultiReviewer) {
		return true
	}

	return false
}

// SetIsMultiReviewer gets a reference to the given bool and assigns it to the IsMultiReviewer field.
func (o *TaskGroupsPutPreviousValues) SetIsMultiReviewer(v bool) {
	o.IsMultiReviewer = &v
}

// GetProjectOptions returns the ProjectOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetProjectOptions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ProjectOptions
}

// GetProjectOptionsOk returns a tuple with the ProjectOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetProjectOptionsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ProjectOptions) {
		return nil, false
	}
	return &o.ProjectOptions, true
}

// HasProjectOptions returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasProjectOptions() bool {
	if o != nil && !IsNil(o.ProjectOptions) {
		return true
	}

	return false
}

// SetProjectOptions gets a reference to the given interface{} and assigns it to the ProjectOptions field.
func (o *TaskGroupsPutPreviousValues) SetProjectOptions(v interface{}) {
	o.ProjectOptions = v
}

// GetIsManagedChange returns the IsManagedChange field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetIsManagedChange() bool {
	if o == nil || IsNil(o.IsManagedChange) {
		var ret bool
		return ret
	}
	return *o.IsManagedChange
}

// GetIsManagedChangeOk returns a tuple with the IsManagedChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetIsManagedChangeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsManagedChange) {
		return nil, false
	}
	return o.IsManagedChange, true
}

// HasIsManagedChange returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasIsManagedChange() bool {
	if o != nil && !IsNil(o.IsManagedChange) {
		return true
	}

	return false
}

// SetIsManagedChange gets a reference to the given bool and assigns it to the IsManagedChange field.
func (o *TaskGroupsPutPreviousValues) SetIsManagedChange(v bool) {
	o.IsManagedChange = &v
}

// GetSubscriberUsers returns the SubscriberUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetSubscriberUsers() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SubscriberUsers
}

// GetSubscriberUsersOk returns a tuple with the SubscriberUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetSubscriberUsersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SubscriberUsers) {
		return nil, false
	}
	return &o.SubscriberUsers, true
}

// HasSubscriberUsers returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasSubscriberUsers() bool {
	if o != nil && !IsNil(o.SubscriberUsers) {
		return true
	}

	return false
}

// SetSubscriberUsers gets a reference to the given interface{} and assigns it to the SubscriberUsers field.
func (o *TaskGroupsPutPreviousValues) SetSubscriberUsers(v interface{}) {
	o.SubscriberUsers = v
}

// GetEmailSubscriberDigest returns the EmailSubscriberDigest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetEmailSubscriberDigest() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.EmailSubscriberDigest
}

// GetEmailSubscriberDigestOk returns a tuple with the EmailSubscriberDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetEmailSubscriberDigestOk() (*interface{}, bool) {
	if o == nil || IsNil(o.EmailSubscriberDigest) {
		return nil, false
	}
	return &o.EmailSubscriberDigest, true
}

// HasEmailSubscriberDigest returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasEmailSubscriberDigest() bool {
	if o != nil && !IsNil(o.EmailSubscriberDigest) {
		return true
	}

	return false
}

// SetEmailSubscriberDigest gets a reference to the given interface{} and assigns it to the EmailSubscriberDigest field.
func (o *TaskGroupsPutPreviousValues) SetEmailSubscriberDigest(v interface{}) {
	o.EmailSubscriberDigest = v
}

// GetAssessmentId returns the AssessmentId field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetAssessmentId() int32 {
	if o == nil || IsNil(o.AssessmentId) {
		var ret int32
		return ret
	}
	return *o.AssessmentId
}

// GetAssessmentIdOk returns a tuple with the AssessmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetAssessmentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AssessmentId) {
		return nil, false
	}
	return o.AssessmentId, true
}

// HasAssessmentId returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasAssessmentId() bool {
	if o != nil && !IsNil(o.AssessmentId) {
		return true
	}

	return false
}

// SetAssessmentId gets a reference to the given int32 and assigns it to the AssessmentId field.
func (o *TaskGroupsPutPreviousValues) SetAssessmentId(v int32) {
	o.AssessmentId = &v
}

// GetAdditionalAssigneeUsers returns the AdditionalAssigneeUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetAdditionalAssigneeUsers() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AdditionalAssigneeUsers
}

// GetAdditionalAssigneeUsersOk returns a tuple with the AdditionalAssigneeUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetAdditionalAssigneeUsersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AdditionalAssigneeUsers) {
		return nil, false
	}
	return &o.AdditionalAssigneeUsers, true
}

// HasAdditionalAssigneeUsers returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasAdditionalAssigneeUsers() bool {
	if o != nil && !IsNil(o.AdditionalAssigneeUsers) {
		return true
	}

	return false
}

// SetAdditionalAssigneeUsers gets a reference to the given interface{} and assigns it to the AdditionalAssigneeUsers field.
func (o *TaskGroupsPutPreviousValues) SetAdditionalAssigneeUsers(v interface{}) {
	o.AdditionalAssigneeUsers = v
}

// GetAdditionalPreparersEnabled returns the AdditionalPreparersEnabled field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetAdditionalPreparersEnabled() bool {
	if o == nil || IsNil(o.AdditionalPreparersEnabled) {
		var ret bool
		return ret
	}
	return *o.AdditionalPreparersEnabled
}

// GetAdditionalPreparersEnabledOk returns a tuple with the AdditionalPreparersEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetAdditionalPreparersEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AdditionalPreparersEnabled) {
		return nil, false
	}
	return o.AdditionalPreparersEnabled, true
}

// HasAdditionalPreparersEnabled returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasAdditionalPreparersEnabled() bool {
	if o != nil && !IsNil(o.AdditionalPreparersEnabled) {
		return true
	}

	return false
}

// SetAdditionalPreparersEnabled gets a reference to the given bool and assigns it to the AdditionalPreparersEnabled field.
func (o *TaskGroupsPutPreviousValues) SetAdditionalPreparersEnabled(v bool) {
	o.AdditionalPreparersEnabled = &v
}

// GetEmailAdditionalPreparerDigest returns the EmailAdditionalPreparerDigest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetEmailAdditionalPreparerDigest() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.EmailAdditionalPreparerDigest
}

// GetEmailAdditionalPreparerDigestOk returns a tuple with the EmailAdditionalPreparerDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetEmailAdditionalPreparerDigestOk() (*interface{}, bool) {
	if o == nil || IsNil(o.EmailAdditionalPreparerDigest) {
		return nil, false
	}
	return &o.EmailAdditionalPreparerDigest, true
}

// HasEmailAdditionalPreparerDigest returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasEmailAdditionalPreparerDigest() bool {
	if o != nil && !IsNil(o.EmailAdditionalPreparerDigest) {
		return true
	}

	return false
}

// SetEmailAdditionalPreparerDigest gets a reference to the given interface{} and assigns it to the EmailAdditionalPreparerDigest field.
func (o *TaskGroupsPutPreviousValues) SetEmailAdditionalPreparerDigest(v interface{}) {
	o.EmailAdditionalPreparerDigest = v
}

// GetHistoricalProjectId returns the HistoricalProjectId field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetHistoricalProjectId() int32 {
	if o == nil || IsNil(o.HistoricalProjectId) {
		var ret int32
		return ret
	}
	return *o.HistoricalProjectId
}

// GetHistoricalProjectIdOk returns a tuple with the HistoricalProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetHistoricalProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HistoricalProjectId) {
		return nil, false
	}
	return o.HistoricalProjectId, true
}

// HasHistoricalProjectId returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasHistoricalProjectId() bool {
	if o != nil && !IsNil(o.HistoricalProjectId) {
		return true
	}

	return false
}

// SetHistoricalProjectId gets a reference to the given int32 and assigns it to the HistoricalProjectId field.
func (o *TaskGroupsPutPreviousValues) SetHistoricalProjectId(v int32) {
	o.HistoricalProjectId = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetScopes() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetScopesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return &o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given interface{} and assigns it to the Scopes field.
func (o *TaskGroupsPutPreviousValues) SetScopes(v interface{}) {
	o.Scopes = v
}

// GetScheduledStartDate returns the ScheduledStartDate field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetScheduledStartDate() string {
	if o == nil || IsNil(o.ScheduledStartDate) {
		var ret string
		return ret
	}
	return *o.ScheduledStartDate
}

// GetScheduledStartDateOk returns a tuple with the ScheduledStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetScheduledStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledStartDate) {
		return nil, false
	}
	return o.ScheduledStartDate, true
}

// HasScheduledStartDate returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasScheduledStartDate() bool {
	if o != nil && !IsNil(o.ScheduledStartDate) {
		return true
	}

	return false
}

// SetScheduledStartDate gets a reference to the given string and assigns it to the ScheduledStartDate field.
func (o *TaskGroupsPutPreviousValues) SetScheduledStartDate(v string) {
	o.ScheduledStartDate = &v
}

// GetTotals returns the Totals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetTotals() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Totals
}

// GetTotalsOk returns a tuple with the Totals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetTotalsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Totals) {
		return nil, false
	}
	return &o.Totals, true
}

// HasTotals returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasTotals() bool {
	if o != nil && !IsNil(o.Totals) {
		return true
	}

	return false
}

// SetTotals gets a reference to the given interface{} and assigns it to the Totals field.
func (o *TaskGroupsPutPreviousValues) SetTotals(v interface{}) {
	o.Totals = v
}

// GetShortTitle returns the ShortTitle field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetShortTitle() string {
	if o == nil || IsNil(o.ShortTitle) {
		var ret string
		return ret
	}
	return *o.ShortTitle
}

// GetShortTitleOk returns a tuple with the ShortTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetShortTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ShortTitle) {
		return nil, false
	}
	return o.ShortTitle, true
}

// HasShortTitle returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasShortTitle() bool {
	if o != nil && !IsNil(o.ShortTitle) {
		return true
	}

	return false
}

// SetShortTitle gets a reference to the given string and assigns it to the ShortTitle field.
func (o *TaskGroupsPutPreviousValues) SetShortTitle(v string) {
	o.ShortTitle = &v
}

// GetRecurringTaskGroupId returns the RecurringTaskGroupId field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetRecurringTaskGroupId() int32 {
	if o == nil || IsNil(o.RecurringTaskGroupId) {
		var ret int32
		return ret
	}
	return *o.RecurringTaskGroupId
}

// GetRecurringTaskGroupIdOk returns a tuple with the RecurringTaskGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetRecurringTaskGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RecurringTaskGroupId) {
		return nil, false
	}
	return o.RecurringTaskGroupId, true
}

// HasRecurringTaskGroupId returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasRecurringTaskGroupId() bool {
	if o != nil && !IsNil(o.RecurringTaskGroupId) {
		return true
	}

	return false
}

// SetRecurringTaskGroupId gets a reference to the given int32 and assigns it to the RecurringTaskGroupId field.
func (o *TaskGroupsPutPreviousValues) SetRecurringTaskGroupId(v int32) {
	o.RecurringTaskGroupId = &v
}

// GetAuditableEntityId returns the AuditableEntityId field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetAuditableEntityId() int32 {
	if o == nil || IsNil(o.AuditableEntityId) {
		var ret int32
		return ret
	}
	return *o.AuditableEntityId
}

// GetAuditableEntityIdOk returns a tuple with the AuditableEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetAuditableEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuditableEntityId) {
		return nil, false
	}
	return o.AuditableEntityId, true
}

// HasAuditableEntityId returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasAuditableEntityId() bool {
	if o != nil && !IsNil(o.AuditableEntityId) {
		return true
	}

	return false
}

// SetAuditableEntityId gets a reference to the given int32 and assigns it to the AuditableEntityId field.
func (o *TaskGroupsPutPreviousValues) SetAuditableEntityId(v int32) {
	o.AuditableEntityId = &v
}

// GetMultiReviewerMode returns the MultiReviewerMode field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetMultiReviewerMode() string {
	if o == nil || IsNil(o.MultiReviewerMode) {
		var ret string
		return ret
	}
	return *o.MultiReviewerMode
}

// GetMultiReviewerModeOk returns a tuple with the MultiReviewerMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetMultiReviewerModeOk() (*string, bool) {
	if o == nil || IsNil(o.MultiReviewerMode) {
		return nil, false
	}
	return o.MultiReviewerMode, true
}

// HasMultiReviewerMode returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasMultiReviewerMode() bool {
	if o != nil && !IsNil(o.MultiReviewerMode) {
		return true
	}

	return false
}

// SetMultiReviewerMode gets a reference to the given string and assigns it to the MultiReviewerMode field.
func (o *TaskGroupsPutPreviousValues) SetMultiReviewerMode(v string) {
	o.MultiReviewerMode = &v
}

// GetRequiredReviewerCount returns the RequiredReviewerCount field value if set, zero value otherwise.
func (o *TaskGroupsPutPreviousValues) GetRequiredReviewerCount() int32 {
	if o == nil || IsNil(o.RequiredReviewerCount) {
		var ret int32
		return ret
	}
	return *o.RequiredReviewerCount
}

// GetRequiredReviewerCountOk returns a tuple with the RequiredReviewerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskGroupsPutPreviousValues) GetRequiredReviewerCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RequiredReviewerCount) {
		return nil, false
	}
	return o.RequiredReviewerCount, true
}

// HasRequiredReviewerCount returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasRequiredReviewerCount() bool {
	if o != nil && !IsNil(o.RequiredReviewerCount) {
		return true
	}

	return false
}

// SetRequiredReviewerCount gets a reference to the given int32 and assigns it to the RequiredReviewerCount field.
func (o *TaskGroupsPutPreviousValues) SetRequiredReviewerCount(v int32) {
	o.RequiredReviewerCount = &v
}

// GetUserTotals returns the UserTotals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaskGroupsPutPreviousValues) GetUserTotals() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UserTotals
}

// GetUserTotalsOk returns a tuple with the UserTotals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaskGroupsPutPreviousValues) GetUserTotalsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UserTotals) {
		return nil, false
	}
	return &o.UserTotals, true
}

// HasUserTotals returns a boolean if a field has been set.
func (o *TaskGroupsPutPreviousValues) HasUserTotals() bool {
	if o != nil && !IsNil(o.UserTotals) {
		return true
	}

	return false
}

// SetUserTotals gets a reference to the given interface{} and assigns it to the UserTotals field.
func (o *TaskGroupsPutPreviousValues) SetUserTotals(v interface{}) {
	o.UserTotals = v
}

func (o TaskGroupsPutPreviousValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskGroupsPutPreviousValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.CreatorUserId) {
		toSerialize["creator_user_id"] = o.CreatorUserId
	}
	if !IsNil(o.TaskCategoryId) {
		toSerialize["task_category_id"] = o.TaskCategoryId
	}
	if !IsNil(o.ArchivedAt) {
		toSerialize["archived_at"] = o.ArchivedAt
	}
	if !IsNil(o.TaskPeriodId) {
		toSerialize["task_period_id"] = o.TaskPeriodId
	}
	if !IsNil(o.SurveyId) {
		toSerialize["survey_id"] = o.SurveyId
	}
	if !IsNil(o.StartedAt) {
		toSerialize["started_at"] = o.StartedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.AllowYesToAll) {
		toSerialize["allow_yes_to_all"] = o.AllowYesToAll
	}
	if !IsNil(o.TestSectionId) {
		toSerialize["test_section_id"] = o.TestSectionId
	}
	if o.EmailProjectStart != nil {
		toSerialize["email_project_start"] = o.EmailProjectStart
	}
	if o.EmailPreparerDigest != nil {
		toSerialize["email_preparer_digest"] = o.EmailPreparerDigest
	}
	if o.EmailReviewerDigest != nil {
		toSerialize["email_reviewer_digest"] = o.EmailReviewerDigest
	}
	if o.EmailAdminDigest != nil {
		toSerialize["email_admin_digest"] = o.EmailAdminDigest
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if o.ReviewerUsers != nil {
		toSerialize["reviewer_users"] = o.ReviewerUsers
	}
	if o.AssigneeUsers != nil {
		toSerialize["assignee_users"] = o.AssigneeUsers
	}
	if !IsNil(o.IsMultiReviewer) {
		toSerialize["is_multi_reviewer"] = o.IsMultiReviewer
	}
	if o.ProjectOptions != nil {
		toSerialize["project_options"] = o.ProjectOptions
	}
	if !IsNil(o.IsManagedChange) {
		toSerialize["is_managed_change"] = o.IsManagedChange
	}
	if o.SubscriberUsers != nil {
		toSerialize["subscriber_users"] = o.SubscriberUsers
	}
	if o.EmailSubscriberDigest != nil {
		toSerialize["email_subscriber_digest"] = o.EmailSubscriberDigest
	}
	if !IsNil(o.AssessmentId) {
		toSerialize["assessment_id"] = o.AssessmentId
	}
	if o.AdditionalAssigneeUsers != nil {
		toSerialize["additional_assignee_users"] = o.AdditionalAssigneeUsers
	}
	if !IsNil(o.AdditionalPreparersEnabled) {
		toSerialize["additional_preparers_enabled"] = o.AdditionalPreparersEnabled
	}
	if o.EmailAdditionalPreparerDigest != nil {
		toSerialize["email_additional_preparer_digest"] = o.EmailAdditionalPreparerDigest
	}
	if !IsNil(o.HistoricalProjectId) {
		toSerialize["historical_project_id"] = o.HistoricalProjectId
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.ScheduledStartDate) {
		toSerialize["scheduled_start_date"] = o.ScheduledStartDate
	}
	if o.Totals != nil {
		toSerialize["totals"] = o.Totals
	}
	if !IsNil(o.ShortTitle) {
		toSerialize["short_title"] = o.ShortTitle
	}
	if !IsNil(o.RecurringTaskGroupId) {
		toSerialize["recurring_task_group_id"] = o.RecurringTaskGroupId
	}
	if !IsNil(o.AuditableEntityId) {
		toSerialize["auditable_entity_id"] = o.AuditableEntityId
	}
	if !IsNil(o.MultiReviewerMode) {
		toSerialize["multi_reviewer_mode"] = o.MultiReviewerMode
	}
	if !IsNil(o.RequiredReviewerCount) {
		toSerialize["required_reviewer_count"] = o.RequiredReviewerCount
	}
	if o.UserTotals != nil {
		toSerialize["user_totals"] = o.UserTotals
	}
	return toSerialize, nil
}

type NullableTaskGroupsPutPreviousValues struct {
	value *TaskGroupsPutPreviousValues
	isSet bool
}

func (v NullableTaskGroupsPutPreviousValues) Get() *TaskGroupsPutPreviousValues {
	return v.value
}

func (v *NullableTaskGroupsPutPreviousValues) Set(val *TaskGroupsPutPreviousValues) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskGroupsPutPreviousValues) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskGroupsPutPreviousValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskGroupsPutPreviousValues(val *TaskGroupsPutPreviousValues) *NullableTaskGroupsPutPreviousValues {
	return &NullableTaskGroupsPutPreviousValues{value: val, isSet: true}
}

func (v NullableTaskGroupsPutPreviousValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskGroupsPutPreviousValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


