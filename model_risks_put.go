/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RisksPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RisksPut{}

// RisksPut struct for RisksPut
type RisksPut struct {
	Risk *RisksPutRisk `json:"risk,omitempty"`
	PreviousValues *RisksPutPreviousValues `json:"previous_values,omitempty"`
}

// NewRisksPut instantiates a new RisksPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRisksPut() *RisksPut {
	this := RisksPut{}
	return &this
}

// NewRisksPutWithDefaults instantiates a new RisksPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRisksPutWithDefaults() *RisksPut {
	this := RisksPut{}
	return &this
}

// GetRisk returns the Risk field value if set, zero value otherwise.
func (o *RisksPut) GetRisk() RisksPutRisk {
	if o == nil || IsNil(o.Risk) {
		var ret RisksPutRisk
		return ret
	}
	return *o.Risk
}

// GetRiskOk returns a tuple with the Risk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RisksPut) GetRiskOk() (*RisksPutRisk, bool) {
	if o == nil || IsNil(o.Risk) {
		return nil, false
	}
	return o.Risk, true
}

// HasRisk returns a boolean if a field has been set.
func (o *RisksPut) HasRisk() bool {
	if o != nil && !IsNil(o.Risk) {
		return true
	}

	return false
}

// SetRisk gets a reference to the given RisksPutRisk and assigns it to the Risk field.
func (o *RisksPut) SetRisk(v RisksPutRisk) {
	o.Risk = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *RisksPut) GetPreviousValues() RisksPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret RisksPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RisksPut) GetPreviousValuesOk() (*RisksPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *RisksPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given RisksPutPreviousValues and assigns it to the PreviousValues field.
func (o *RisksPut) SetPreviousValues(v RisksPutPreviousValues) {
	o.PreviousValues = &v
}

func (o RisksPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RisksPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Risk) {
		toSerialize["risk"] = o.Risk
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableRisksPut struct {
	value *RisksPut
	isSet bool
}

func (v NullableRisksPut) Get() *RisksPut {
	return v.value
}

func (v *NullableRisksPut) Set(val *RisksPut) {
	v.value = val
	v.isSet = true
}

func (v NullableRisksPut) IsSet() bool {
	return v.isSet
}

func (v *NullableRisksPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRisksPut(val *RisksPut) *NullableRisksPut {
	return &NullableRisksPut{value: val, isSet: true}
}

func (v NullableRisksPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRisksPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


