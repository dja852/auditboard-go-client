/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the EsgMetricsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EsgMetricsPut{}

// EsgMetricsPut struct for EsgMetricsPut
type EsgMetricsPut struct {
	EsgMetric *EsgMetricsPutEsgMetric `json:"esg_metric,omitempty"`
	PreviousValues *EsgMetricsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewEsgMetricsPut instantiates a new EsgMetricsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsgMetricsPut() *EsgMetricsPut {
	this := EsgMetricsPut{}
	return &this
}

// NewEsgMetricsPutWithDefaults instantiates a new EsgMetricsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsgMetricsPutWithDefaults() *EsgMetricsPut {
	this := EsgMetricsPut{}
	return &this
}

// GetEsgMetric returns the EsgMetric field value if set, zero value otherwise.
func (o *EsgMetricsPut) GetEsgMetric() EsgMetricsPutEsgMetric {
	if o == nil || IsNil(o.EsgMetric) {
		var ret EsgMetricsPutEsgMetric
		return ret
	}
	return *o.EsgMetric
}

// GetEsgMetricOk returns a tuple with the EsgMetric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricsPut) GetEsgMetricOk() (*EsgMetricsPutEsgMetric, bool) {
	if o == nil || IsNil(o.EsgMetric) {
		return nil, false
	}
	return o.EsgMetric, true
}

// HasEsgMetric returns a boolean if a field has been set.
func (o *EsgMetricsPut) HasEsgMetric() bool {
	if o != nil && !IsNil(o.EsgMetric) {
		return true
	}

	return false
}

// SetEsgMetric gets a reference to the given EsgMetricsPutEsgMetric and assigns it to the EsgMetric field.
func (o *EsgMetricsPut) SetEsgMetric(v EsgMetricsPutEsgMetric) {
	o.EsgMetric = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *EsgMetricsPut) GetPreviousValues() EsgMetricsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret EsgMetricsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricsPut) GetPreviousValuesOk() (*EsgMetricsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *EsgMetricsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given EsgMetricsPutPreviousValues and assigns it to the PreviousValues field.
func (o *EsgMetricsPut) SetPreviousValues(v EsgMetricsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o EsgMetricsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EsgMetricsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EsgMetric) {
		toSerialize["esg_metric"] = o.EsgMetric
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableEsgMetricsPut struct {
	value *EsgMetricsPut
	isSet bool
}

func (v NullableEsgMetricsPut) Get() *EsgMetricsPut {
	return v.value
}

func (v *NullableEsgMetricsPut) Set(val *EsgMetricsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableEsgMetricsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableEsgMetricsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsgMetricsPut(val *EsgMetricsPut) *NullableEsgMetricsPut {
	return &NullableEsgMetricsPut{value: val, isSet: true}
}

func (v NullableEsgMetricsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsgMetricsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


