/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the IssuesArchivesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssuesArchivesGet200Response{}

// IssuesArchivesGet200Response struct for IssuesArchivesGet200Response
type IssuesArchivesGet200Response struct {
	IssuesArchives []IssuesArchives `json:"issues_archives,omitempty"`
}

// NewIssuesArchivesGet200Response instantiates a new IssuesArchivesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssuesArchivesGet200Response() *IssuesArchivesGet200Response {
	this := IssuesArchivesGet200Response{}
	return &this
}

// NewIssuesArchivesGet200ResponseWithDefaults instantiates a new IssuesArchivesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssuesArchivesGet200ResponseWithDefaults() *IssuesArchivesGet200Response {
	this := IssuesArchivesGet200Response{}
	return &this
}

// GetIssuesArchives returns the IssuesArchives field value if set, zero value otherwise.
func (o *IssuesArchivesGet200Response) GetIssuesArchives() []IssuesArchives {
	if o == nil || IsNil(o.IssuesArchives) {
		var ret []IssuesArchives
		return ret
	}
	return o.IssuesArchives
}

// GetIssuesArchivesOk returns a tuple with the IssuesArchives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesArchivesGet200Response) GetIssuesArchivesOk() ([]IssuesArchives, bool) {
	if o == nil || IsNil(o.IssuesArchives) {
		return nil, false
	}
	return o.IssuesArchives, true
}

// HasIssuesArchives returns a boolean if a field has been set.
func (o *IssuesArchivesGet200Response) HasIssuesArchives() bool {
	if o != nil && !IsNil(o.IssuesArchives) {
		return true
	}

	return false
}

// SetIssuesArchives gets a reference to the given []IssuesArchives and assigns it to the IssuesArchives field.
func (o *IssuesArchivesGet200Response) SetIssuesArchives(v []IssuesArchives) {
	o.IssuesArchives = v
}

func (o IssuesArchivesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssuesArchivesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IssuesArchives) {
		toSerialize["issues_archives"] = o.IssuesArchives
	}
	return toSerialize, nil
}

type NullableIssuesArchivesGet200Response struct {
	value *IssuesArchivesGet200Response
	isSet bool
}

func (v NullableIssuesArchivesGet200Response) Get() *IssuesArchivesGet200Response {
	return v.value
}

func (v *NullableIssuesArchivesGet200Response) Set(val *IssuesArchivesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableIssuesArchivesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableIssuesArchivesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssuesArchivesGet200Response(val *IssuesArchivesGet200Response) *NullableIssuesArchivesGet200Response {
	return &NullableIssuesArchivesGet200Response{value: val, isSet: true}
}

func (v NullableIssuesArchivesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssuesArchivesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


