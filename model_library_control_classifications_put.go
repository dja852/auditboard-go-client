/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the LibraryControlClassificationsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LibraryControlClassificationsPut{}

// LibraryControlClassificationsPut struct for LibraryControlClassificationsPut
type LibraryControlClassificationsPut struct {
	LibraryControlClassification *AssessmentPeriodsPutAssessmentPeriod `json:"library_control_classification,omitempty"`
	PreviousValues *AssessmentPeriodsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewLibraryControlClassificationsPut instantiates a new LibraryControlClassificationsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLibraryControlClassificationsPut() *LibraryControlClassificationsPut {
	this := LibraryControlClassificationsPut{}
	return &this
}

// NewLibraryControlClassificationsPutWithDefaults instantiates a new LibraryControlClassificationsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLibraryControlClassificationsPutWithDefaults() *LibraryControlClassificationsPut {
	this := LibraryControlClassificationsPut{}
	return &this
}

// GetLibraryControlClassification returns the LibraryControlClassification field value if set, zero value otherwise.
func (o *LibraryControlClassificationsPut) GetLibraryControlClassification() AssessmentPeriodsPutAssessmentPeriod {
	if o == nil || IsNil(o.LibraryControlClassification) {
		var ret AssessmentPeriodsPutAssessmentPeriod
		return ret
	}
	return *o.LibraryControlClassification
}

// GetLibraryControlClassificationOk returns a tuple with the LibraryControlClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LibraryControlClassificationsPut) GetLibraryControlClassificationOk() (*AssessmentPeriodsPutAssessmentPeriod, bool) {
	if o == nil || IsNil(o.LibraryControlClassification) {
		return nil, false
	}
	return o.LibraryControlClassification, true
}

// HasLibraryControlClassification returns a boolean if a field has been set.
func (o *LibraryControlClassificationsPut) HasLibraryControlClassification() bool {
	if o != nil && !IsNil(o.LibraryControlClassification) {
		return true
	}

	return false
}

// SetLibraryControlClassification gets a reference to the given AssessmentPeriodsPutAssessmentPeriod and assigns it to the LibraryControlClassification field.
func (o *LibraryControlClassificationsPut) SetLibraryControlClassification(v AssessmentPeriodsPutAssessmentPeriod) {
	o.LibraryControlClassification = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *LibraryControlClassificationsPut) GetPreviousValues() AssessmentPeriodsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret AssessmentPeriodsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LibraryControlClassificationsPut) GetPreviousValuesOk() (*AssessmentPeriodsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *LibraryControlClassificationsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given AssessmentPeriodsPutPreviousValues and assigns it to the PreviousValues field.
func (o *LibraryControlClassificationsPut) SetPreviousValues(v AssessmentPeriodsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o LibraryControlClassificationsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LibraryControlClassificationsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LibraryControlClassification) {
		toSerialize["library_control_classification"] = o.LibraryControlClassification
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableLibraryControlClassificationsPut struct {
	value *LibraryControlClassificationsPut
	isSet bool
}

func (v NullableLibraryControlClassificationsPut) Get() *LibraryControlClassificationsPut {
	return v.value
}

func (v *NullableLibraryControlClassificationsPut) Set(val *LibraryControlClassificationsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableLibraryControlClassificationsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableLibraryControlClassificationsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLibraryControlClassificationsPut(val *LibraryControlClassificationsPut) *NullableLibraryControlClassificationsPut {
	return &NullableLibraryControlClassificationsPut{value: val, isSet: true}
}

func (v NullableLibraryControlClassificationsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLibraryControlClassificationsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


