/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EsgMetricConversionFactorsPutEsgMetricConversionFactor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EsgMetricConversionFactorsPutEsgMetricConversionFactor{}

// EsgMetricConversionFactorsPutEsgMetricConversionFactor struct for EsgMetricConversionFactorsPutEsgMetricConversionFactor
type EsgMetricConversionFactorsPutEsgMetricConversionFactor struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	// Note: This is a Foreign Key to `esg_metric_unit_options.id`.<fk table='esg_metric_unit_options' column='id'/>
	FromUnitId int32 `json:"from_unit_id"`
	// Note: This is a Foreign Key to `esg_metric_unit_options.id`.<fk table='esg_metric_unit_options' column='id'/>
	ToUnitId int32 `json:"to_unit_id"`
	ConversionFactor float32 `json:"conversion_factor"`
	Type *string `json:"type,omitempty"`
}

type _EsgMetricConversionFactorsPutEsgMetricConversionFactor EsgMetricConversionFactorsPutEsgMetricConversionFactor

// NewEsgMetricConversionFactorsPutEsgMetricConversionFactor instantiates a new EsgMetricConversionFactorsPutEsgMetricConversionFactor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsgMetricConversionFactorsPutEsgMetricConversionFactor(fromUnitId int32, toUnitId int32, conversionFactor float32) *EsgMetricConversionFactorsPutEsgMetricConversionFactor {
	this := EsgMetricConversionFactorsPutEsgMetricConversionFactor{}
	this.FromUnitId = fromUnitId
	this.ToUnitId = toUnitId
	this.ConversionFactor = conversionFactor
	return &this
}

// NewEsgMetricConversionFactorsPutEsgMetricConversionFactorWithDefaults instantiates a new EsgMetricConversionFactorsPutEsgMetricConversionFactor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsgMetricConversionFactorsPutEsgMetricConversionFactorWithDefaults() *EsgMetricConversionFactorsPutEsgMetricConversionFactor {
	this := EsgMetricConversionFactorsPutEsgMetricConversionFactor{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetFromUnitId returns the FromUnitId field value
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetFromUnitId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FromUnitId
}

// GetFromUnitIdOk returns a tuple with the FromUnitId field value
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetFromUnitIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromUnitId, true
}

// SetFromUnitId sets field value
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) SetFromUnitId(v int32) {
	o.FromUnitId = v
}

// GetToUnitId returns the ToUnitId field value
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetToUnitId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ToUnitId
}

// GetToUnitIdOk returns a tuple with the ToUnitId field value
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetToUnitIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToUnitId, true
}

// SetToUnitId sets field value
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) SetToUnitId(v int32) {
	o.ToUnitId = v
}

// GetConversionFactor returns the ConversionFactor field value
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetConversionFactor() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ConversionFactor
}

// GetConversionFactorOk returns a tuple with the ConversionFactor field value
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetConversionFactorOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConversionFactor, true
}

// SetConversionFactor sets field value
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) SetConversionFactor(v float32) {
	o.ConversionFactor = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EsgMetricConversionFactorsPutEsgMetricConversionFactor) SetType(v string) {
	o.Type = &v
}

func (o EsgMetricConversionFactorsPutEsgMetricConversionFactor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EsgMetricConversionFactorsPutEsgMetricConversionFactor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	toSerialize["from_unit_id"] = o.FromUnitId
	toSerialize["to_unit_id"] = o.ToUnitId
	toSerialize["conversion_factor"] = o.ConversionFactor
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableEsgMetricConversionFactorsPutEsgMetricConversionFactor struct {
	value *EsgMetricConversionFactorsPutEsgMetricConversionFactor
	isSet bool
}

func (v NullableEsgMetricConversionFactorsPutEsgMetricConversionFactor) Get() *EsgMetricConversionFactorsPutEsgMetricConversionFactor {
	return v.value
}

func (v *NullableEsgMetricConversionFactorsPutEsgMetricConversionFactor) Set(val *EsgMetricConversionFactorsPutEsgMetricConversionFactor) {
	v.value = val
	v.isSet = true
}

func (v NullableEsgMetricConversionFactorsPutEsgMetricConversionFactor) IsSet() bool {
	return v.isSet
}

func (v *NullableEsgMetricConversionFactorsPutEsgMetricConversionFactor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsgMetricConversionFactorsPutEsgMetricConversionFactor(val *EsgMetricConversionFactorsPutEsgMetricConversionFactor) *NullableEsgMetricConversionFactorsPutEsgMetricConversionFactor {
	return &NullableEsgMetricConversionFactorsPutEsgMetricConversionFactor{value: val, isSet: true}
}

func (v NullableEsgMetricConversionFactorsPutEsgMetricConversionFactor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsgMetricConversionFactorsPutEsgMetricConversionFactor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


