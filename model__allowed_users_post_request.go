/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AllowedUsersPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllowedUsersPostRequest{}

// AllowedUsersPostRequest struct for AllowedUsersPostRequest
type AllowedUsersPostRequest struct {
	AllowedUser *AllowedUsers `json:"allowed_user,omitempty"`
}

// NewAllowedUsersPostRequest instantiates a new AllowedUsersPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowedUsersPostRequest() *AllowedUsersPostRequest {
	this := AllowedUsersPostRequest{}
	return &this
}

// NewAllowedUsersPostRequestWithDefaults instantiates a new AllowedUsersPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowedUsersPostRequestWithDefaults() *AllowedUsersPostRequest {
	this := AllowedUsersPostRequest{}
	return &this
}

// GetAllowedUser returns the AllowedUser field value if set, zero value otherwise.
func (o *AllowedUsersPostRequest) GetAllowedUser() AllowedUsers {
	if o == nil || IsNil(o.AllowedUser) {
		var ret AllowedUsers
		return ret
	}
	return *o.AllowedUser
}

// GetAllowedUserOk returns a tuple with the AllowedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedUsersPostRequest) GetAllowedUserOk() (*AllowedUsers, bool) {
	if o == nil || IsNil(o.AllowedUser) {
		return nil, false
	}
	return o.AllowedUser, true
}

// HasAllowedUser returns a boolean if a field has been set.
func (o *AllowedUsersPostRequest) HasAllowedUser() bool {
	if o != nil && !IsNil(o.AllowedUser) {
		return true
	}

	return false
}

// SetAllowedUser gets a reference to the given AllowedUsers and assigns it to the AllowedUser field.
func (o *AllowedUsersPostRequest) SetAllowedUser(v AllowedUsers) {
	o.AllowedUser = &v
}

func (o AllowedUsersPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllowedUsersPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedUser) {
		toSerialize["allowed_user"] = o.AllowedUser
	}
	return toSerialize, nil
}

type NullableAllowedUsersPostRequest struct {
	value *AllowedUsersPostRequest
	isSet bool
}

func (v NullableAllowedUsersPostRequest) Get() *AllowedUsersPostRequest {
	return v.value
}

func (v *NullableAllowedUsersPostRequest) Set(val *AllowedUsersPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowedUsersPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowedUsersPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowedUsersPostRequest(val *AllowedUsersPostRequest) *NullableAllowedUsersPostRequest {
	return &NullableAllowedUsersPostRequest{value: val, isSet: true}
}

func (v NullableAllowedUsersPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowedUsersPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


