/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the OpsAuditSectionInstancesPutPreviousValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpsAuditSectionInstancesPutPreviousValues{}

// OpsAuditSectionInstancesPutPreviousValues struct for OpsAuditSectionInstancesPutPreviousValues
type OpsAuditSectionInstancesPutPreviousValues struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	SortOrder *int32 `json:"sort_order,omitempty"`
	// Note: This is a Foreign Key to `ops_audits.id`.<fk table='ops_audits' column='id'/>
	OpsAuditId *int32 `json:"ops_audit_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_sections.id`.<fk table='ops_audit_sections' column='id'/>
	OpsAuditSectionId *int32 `json:"ops_audit_section_id,omitempty"`
	FormTemplateId *int32 `json:"form_template_id,omitempty"`
}

// NewOpsAuditSectionInstancesPutPreviousValues instantiates a new OpsAuditSectionInstancesPutPreviousValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsAuditSectionInstancesPutPreviousValues() *OpsAuditSectionInstancesPutPreviousValues {
	this := OpsAuditSectionInstancesPutPreviousValues{}
	var sortOrder int32 = 0
	this.SortOrder = &sortOrder
	var formTemplateId int32 = 1
	this.FormTemplateId = &formTemplateId
	return &this
}

// NewOpsAuditSectionInstancesPutPreviousValuesWithDefaults instantiates a new OpsAuditSectionInstancesPutPreviousValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsAuditSectionInstancesPutPreviousValuesWithDefaults() *OpsAuditSectionInstancesPutPreviousValues {
	this := OpsAuditSectionInstancesPutPreviousValues{}
	var sortOrder int32 = 0
	this.SortOrder = &sortOrder
	var formTemplateId int32 = 1
	this.FormTemplateId = &formTemplateId
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OpsAuditSectionInstancesPutPreviousValues) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *OpsAuditSectionInstancesPutPreviousValues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *OpsAuditSectionInstancesPutPreviousValues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *OpsAuditSectionInstancesPutPreviousValues) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *OpsAuditSectionInstancesPutPreviousValues) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetOpsAuditId returns the OpsAuditId field value if set, zero value otherwise.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetOpsAuditId() int32 {
	if o == nil || IsNil(o.OpsAuditId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditId
}

// GetOpsAuditIdOk returns a tuple with the OpsAuditId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetOpsAuditIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditId) {
		return nil, false
	}
	return o.OpsAuditId, true
}

// HasOpsAuditId returns a boolean if a field has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) HasOpsAuditId() bool {
	if o != nil && !IsNil(o.OpsAuditId) {
		return true
	}

	return false
}

// SetOpsAuditId gets a reference to the given int32 and assigns it to the OpsAuditId field.
func (o *OpsAuditSectionInstancesPutPreviousValues) SetOpsAuditId(v int32) {
	o.OpsAuditId = &v
}

// GetOpsAuditSectionId returns the OpsAuditSectionId field value if set, zero value otherwise.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetOpsAuditSectionId() int32 {
	if o == nil || IsNil(o.OpsAuditSectionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditSectionId
}

// GetOpsAuditSectionIdOk returns a tuple with the OpsAuditSectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetOpsAuditSectionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditSectionId) {
		return nil, false
	}
	return o.OpsAuditSectionId, true
}

// HasOpsAuditSectionId returns a boolean if a field has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) HasOpsAuditSectionId() bool {
	if o != nil && !IsNil(o.OpsAuditSectionId) {
		return true
	}

	return false
}

// SetOpsAuditSectionId gets a reference to the given int32 and assigns it to the OpsAuditSectionId field.
func (o *OpsAuditSectionInstancesPutPreviousValues) SetOpsAuditSectionId(v int32) {
	o.OpsAuditSectionId = &v
}

// GetFormTemplateId returns the FormTemplateId field value if set, zero value otherwise.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetFormTemplateId() int32 {
	if o == nil || IsNil(o.FormTemplateId) {
		var ret int32
		return ret
	}
	return *o.FormTemplateId
}

// GetFormTemplateIdOk returns a tuple with the FormTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) GetFormTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FormTemplateId) {
		return nil, false
	}
	return o.FormTemplateId, true
}

// HasFormTemplateId returns a boolean if a field has been set.
func (o *OpsAuditSectionInstancesPutPreviousValues) HasFormTemplateId() bool {
	if o != nil && !IsNil(o.FormTemplateId) {
		return true
	}

	return false
}

// SetFormTemplateId gets a reference to the given int32 and assigns it to the FormTemplateId field.
func (o *OpsAuditSectionInstancesPutPreviousValues) SetFormTemplateId(v int32) {
	o.FormTemplateId = &v
}

func (o OpsAuditSectionInstancesPutPreviousValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpsAuditSectionInstancesPutPreviousValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sort_order"] = o.SortOrder
	}
	if !IsNil(o.OpsAuditId) {
		toSerialize["ops_audit_id"] = o.OpsAuditId
	}
	if !IsNil(o.OpsAuditSectionId) {
		toSerialize["ops_audit_section_id"] = o.OpsAuditSectionId
	}
	if !IsNil(o.FormTemplateId) {
		toSerialize["form_template_id"] = o.FormTemplateId
	}
	return toSerialize, nil
}

type NullableOpsAuditSectionInstancesPutPreviousValues struct {
	value *OpsAuditSectionInstancesPutPreviousValues
	isSet bool
}

func (v NullableOpsAuditSectionInstancesPutPreviousValues) Get() *OpsAuditSectionInstancesPutPreviousValues {
	return v.value
}

func (v *NullableOpsAuditSectionInstancesPutPreviousValues) Set(val *OpsAuditSectionInstancesPutPreviousValues) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsAuditSectionInstancesPutPreviousValues) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsAuditSectionInstancesPutPreviousValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsAuditSectionInstancesPutPreviousValues(val *OpsAuditSectionInstancesPutPreviousValues) *NullableOpsAuditSectionInstancesPutPreviousValues {
	return &NullableOpsAuditSectionInstancesPutPreviousValues{value: val, isSet: true}
}

func (v NullableOpsAuditSectionInstancesPutPreviousValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsAuditSectionInstancesPutPreviousValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


