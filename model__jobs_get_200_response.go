/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the JobsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobsGet200Response{}

// JobsGet200Response struct for JobsGet200Response
type JobsGet200Response struct {
	Jobs []Jobs `json:"jobs,omitempty"`
}

// NewJobsGet200Response instantiates a new JobsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsGet200Response() *JobsGet200Response {
	this := JobsGet200Response{}
	return &this
}

// NewJobsGet200ResponseWithDefaults instantiates a new JobsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsGet200ResponseWithDefaults() *JobsGet200Response {
	this := JobsGet200Response{}
	return &this
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *JobsGet200Response) GetJobs() []Jobs {
	if o == nil || IsNil(o.Jobs) {
		var ret []Jobs
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsGet200Response) GetJobsOk() ([]Jobs, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *JobsGet200Response) HasJobs() bool {
	if o != nil && !IsNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []Jobs and assigns it to the Jobs field.
func (o *JobsGet200Response) SetJobs(v []Jobs) {
	o.Jobs = v
}

func (o JobsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	return toSerialize, nil
}

type NullableJobsGet200Response struct {
	value *JobsGet200Response
	isSet bool
}

func (v NullableJobsGet200Response) Get() *JobsGet200Response {
	return v.value
}

func (v *NullableJobsGet200Response) Set(val *JobsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsGet200Response(val *JobsGet200Response) *NullableJobsGet200Response {
	return &NullableJobsGet200Response{value: val, isSet: true}
}

func (v NullableJobsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


