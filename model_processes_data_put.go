/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ProcessesDataPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessesDataPut{}

// ProcessesDataPut struct for ProcessesDataPut
type ProcessesDataPut struct {
	ProcessesDatum *ProcessesDataPutProcessesDatum `json:"processes_datum,omitempty"`
	PreviousValues *ProcessesDataPutPreviousValues `json:"previous_values,omitempty"`
}

// NewProcessesDataPut instantiates a new ProcessesDataPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessesDataPut() *ProcessesDataPut {
	this := ProcessesDataPut{}
	return &this
}

// NewProcessesDataPutWithDefaults instantiates a new ProcessesDataPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessesDataPutWithDefaults() *ProcessesDataPut {
	this := ProcessesDataPut{}
	return &this
}

// GetProcessesDatum returns the ProcessesDatum field value if set, zero value otherwise.
func (o *ProcessesDataPut) GetProcessesDatum() ProcessesDataPutProcessesDatum {
	if o == nil || IsNil(o.ProcessesDatum) {
		var ret ProcessesDataPutProcessesDatum
		return ret
	}
	return *o.ProcessesDatum
}

// GetProcessesDatumOk returns a tuple with the ProcessesDatum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessesDataPut) GetProcessesDatumOk() (*ProcessesDataPutProcessesDatum, bool) {
	if o == nil || IsNil(o.ProcessesDatum) {
		return nil, false
	}
	return o.ProcessesDatum, true
}

// HasProcessesDatum returns a boolean if a field has been set.
func (o *ProcessesDataPut) HasProcessesDatum() bool {
	if o != nil && !IsNil(o.ProcessesDatum) {
		return true
	}

	return false
}

// SetProcessesDatum gets a reference to the given ProcessesDataPutProcessesDatum and assigns it to the ProcessesDatum field.
func (o *ProcessesDataPut) SetProcessesDatum(v ProcessesDataPutProcessesDatum) {
	o.ProcessesDatum = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *ProcessesDataPut) GetPreviousValues() ProcessesDataPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret ProcessesDataPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessesDataPut) GetPreviousValuesOk() (*ProcessesDataPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *ProcessesDataPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given ProcessesDataPutPreviousValues and assigns it to the PreviousValues field.
func (o *ProcessesDataPut) SetPreviousValues(v ProcessesDataPutPreviousValues) {
	o.PreviousValues = &v
}

func (o ProcessesDataPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessesDataPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProcessesDatum) {
		toSerialize["processes_datum"] = o.ProcessesDatum
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableProcessesDataPut struct {
	value *ProcessesDataPut
	isSet bool
}

func (v NullableProcessesDataPut) Get() *ProcessesDataPut {
	return v.value
}

func (v *NullableProcessesDataPut) Set(val *ProcessesDataPut) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessesDataPut) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessesDataPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessesDataPut(val *ProcessesDataPut) *NullableProcessesDataPut {
	return &NullableProcessesDataPut{value: val, isSet: true}
}

func (v NullableProcessesDataPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessesDataPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


