/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AssessmentResponsesPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssessmentResponsesPut{}

// AssessmentResponsesPut struct for AssessmentResponsesPut
type AssessmentResponsesPut struct {
	AssessmentResponse *AssessmentResponsesPutAssessmentResponse `json:"assessment_response,omitempty"`
	PreviousValues *AssessmentResponsesPutPreviousValues `json:"previous_values,omitempty"`
}

// NewAssessmentResponsesPut instantiates a new AssessmentResponsesPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssessmentResponsesPut() *AssessmentResponsesPut {
	this := AssessmentResponsesPut{}
	return &this
}

// NewAssessmentResponsesPutWithDefaults instantiates a new AssessmentResponsesPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssessmentResponsesPutWithDefaults() *AssessmentResponsesPut {
	this := AssessmentResponsesPut{}
	return &this
}

// GetAssessmentResponse returns the AssessmentResponse field value if set, zero value otherwise.
func (o *AssessmentResponsesPut) GetAssessmentResponse() AssessmentResponsesPutAssessmentResponse {
	if o == nil || IsNil(o.AssessmentResponse) {
		var ret AssessmentResponsesPutAssessmentResponse
		return ret
	}
	return *o.AssessmentResponse
}

// GetAssessmentResponseOk returns a tuple with the AssessmentResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssessmentResponsesPut) GetAssessmentResponseOk() (*AssessmentResponsesPutAssessmentResponse, bool) {
	if o == nil || IsNil(o.AssessmentResponse) {
		return nil, false
	}
	return o.AssessmentResponse, true
}

// HasAssessmentResponse returns a boolean if a field has been set.
func (o *AssessmentResponsesPut) HasAssessmentResponse() bool {
	if o != nil && !IsNil(o.AssessmentResponse) {
		return true
	}

	return false
}

// SetAssessmentResponse gets a reference to the given AssessmentResponsesPutAssessmentResponse and assigns it to the AssessmentResponse field.
func (o *AssessmentResponsesPut) SetAssessmentResponse(v AssessmentResponsesPutAssessmentResponse) {
	o.AssessmentResponse = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *AssessmentResponsesPut) GetPreviousValues() AssessmentResponsesPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret AssessmentResponsesPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssessmentResponsesPut) GetPreviousValuesOk() (*AssessmentResponsesPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *AssessmentResponsesPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given AssessmentResponsesPutPreviousValues and assigns it to the PreviousValues field.
func (o *AssessmentResponsesPut) SetPreviousValues(v AssessmentResponsesPutPreviousValues) {
	o.PreviousValues = &v
}

func (o AssessmentResponsesPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssessmentResponsesPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssessmentResponse) {
		toSerialize["assessment_response"] = o.AssessmentResponse
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableAssessmentResponsesPut struct {
	value *AssessmentResponsesPut
	isSet bool
}

func (v NullableAssessmentResponsesPut) Get() *AssessmentResponsesPut {
	return v.value
}

func (v *NullableAssessmentResponsesPut) Set(val *AssessmentResponsesPut) {
	v.value = val
	v.isSet = true
}

func (v NullableAssessmentResponsesPut) IsSet() bool {
	return v.isSet
}

func (v *NullableAssessmentResponsesPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssessmentResponsesPut(val *AssessmentResponsesPut) *NullableAssessmentResponsesPut {
	return &NullableAssessmentResponsesPut{value: val, isSet: true}
}

func (v NullableAssessmentResponsesPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssessmentResponsesPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


