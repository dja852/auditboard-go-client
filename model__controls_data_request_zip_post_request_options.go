/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ControlsDataRequestZipPostRequestOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControlsDataRequestZipPostRequestOptions{}

// ControlsDataRequestZipPostRequestOptions struct for ControlsDataRequestZipPostRequestOptions
type ControlsDataRequestZipPostRequestOptions struct {
	PersistDownload *bool `json:"persistDownload,omitempty"`
	ControlPdfs *bool `json:"controlPdfs,omitempty"`
	ControlFiles *bool `json:"controlFiles,omitempty"`
	TestSheets *bool `json:"testSheets,omitempty"`
	TestFiles *bool `json:"testFiles,omitempty"`
	CustomZipName *string `json:"customZipName,omitempty"`
	Pdf *ControlsDataRequestZipPostRequestOptionsPdf `json:"pdf,omitempty"`
}

// NewControlsDataRequestZipPostRequestOptions instantiates a new ControlsDataRequestZipPostRequestOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControlsDataRequestZipPostRequestOptions() *ControlsDataRequestZipPostRequestOptions {
	this := ControlsDataRequestZipPostRequestOptions{}
	return &this
}

// NewControlsDataRequestZipPostRequestOptionsWithDefaults instantiates a new ControlsDataRequestZipPostRequestOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlsDataRequestZipPostRequestOptionsWithDefaults() *ControlsDataRequestZipPostRequestOptions {
	this := ControlsDataRequestZipPostRequestOptions{}
	return &this
}

// GetPersistDownload returns the PersistDownload field value if set, zero value otherwise.
func (o *ControlsDataRequestZipPostRequestOptions) GetPersistDownload() bool {
	if o == nil || IsNil(o.PersistDownload) {
		var ret bool
		return ret
	}
	return *o.PersistDownload
}

// GetPersistDownloadOk returns a tuple with the PersistDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataRequestZipPostRequestOptions) GetPersistDownloadOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistDownload) {
		return nil, false
	}
	return o.PersistDownload, true
}

// HasPersistDownload returns a boolean if a field has been set.
func (o *ControlsDataRequestZipPostRequestOptions) HasPersistDownload() bool {
	if o != nil && !IsNil(o.PersistDownload) {
		return true
	}

	return false
}

// SetPersistDownload gets a reference to the given bool and assigns it to the PersistDownload field.
func (o *ControlsDataRequestZipPostRequestOptions) SetPersistDownload(v bool) {
	o.PersistDownload = &v
}

// GetControlPdfs returns the ControlPdfs field value if set, zero value otherwise.
func (o *ControlsDataRequestZipPostRequestOptions) GetControlPdfs() bool {
	if o == nil || IsNil(o.ControlPdfs) {
		var ret bool
		return ret
	}
	return *o.ControlPdfs
}

// GetControlPdfsOk returns a tuple with the ControlPdfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataRequestZipPostRequestOptions) GetControlPdfsOk() (*bool, bool) {
	if o == nil || IsNil(o.ControlPdfs) {
		return nil, false
	}
	return o.ControlPdfs, true
}

// HasControlPdfs returns a boolean if a field has been set.
func (o *ControlsDataRequestZipPostRequestOptions) HasControlPdfs() bool {
	if o != nil && !IsNil(o.ControlPdfs) {
		return true
	}

	return false
}

// SetControlPdfs gets a reference to the given bool and assigns it to the ControlPdfs field.
func (o *ControlsDataRequestZipPostRequestOptions) SetControlPdfs(v bool) {
	o.ControlPdfs = &v
}

// GetControlFiles returns the ControlFiles field value if set, zero value otherwise.
func (o *ControlsDataRequestZipPostRequestOptions) GetControlFiles() bool {
	if o == nil || IsNil(o.ControlFiles) {
		var ret bool
		return ret
	}
	return *o.ControlFiles
}

// GetControlFilesOk returns a tuple with the ControlFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataRequestZipPostRequestOptions) GetControlFilesOk() (*bool, bool) {
	if o == nil || IsNil(o.ControlFiles) {
		return nil, false
	}
	return o.ControlFiles, true
}

// HasControlFiles returns a boolean if a field has been set.
func (o *ControlsDataRequestZipPostRequestOptions) HasControlFiles() bool {
	if o != nil && !IsNil(o.ControlFiles) {
		return true
	}

	return false
}

// SetControlFiles gets a reference to the given bool and assigns it to the ControlFiles field.
func (o *ControlsDataRequestZipPostRequestOptions) SetControlFiles(v bool) {
	o.ControlFiles = &v
}

// GetTestSheets returns the TestSheets field value if set, zero value otherwise.
func (o *ControlsDataRequestZipPostRequestOptions) GetTestSheets() bool {
	if o == nil || IsNil(o.TestSheets) {
		var ret bool
		return ret
	}
	return *o.TestSheets
}

// GetTestSheetsOk returns a tuple with the TestSheets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataRequestZipPostRequestOptions) GetTestSheetsOk() (*bool, bool) {
	if o == nil || IsNil(o.TestSheets) {
		return nil, false
	}
	return o.TestSheets, true
}

// HasTestSheets returns a boolean if a field has been set.
func (o *ControlsDataRequestZipPostRequestOptions) HasTestSheets() bool {
	if o != nil && !IsNil(o.TestSheets) {
		return true
	}

	return false
}

// SetTestSheets gets a reference to the given bool and assigns it to the TestSheets field.
func (o *ControlsDataRequestZipPostRequestOptions) SetTestSheets(v bool) {
	o.TestSheets = &v
}

// GetTestFiles returns the TestFiles field value if set, zero value otherwise.
func (o *ControlsDataRequestZipPostRequestOptions) GetTestFiles() bool {
	if o == nil || IsNil(o.TestFiles) {
		var ret bool
		return ret
	}
	return *o.TestFiles
}

// GetTestFilesOk returns a tuple with the TestFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataRequestZipPostRequestOptions) GetTestFilesOk() (*bool, bool) {
	if o == nil || IsNil(o.TestFiles) {
		return nil, false
	}
	return o.TestFiles, true
}

// HasTestFiles returns a boolean if a field has been set.
func (o *ControlsDataRequestZipPostRequestOptions) HasTestFiles() bool {
	if o != nil && !IsNil(o.TestFiles) {
		return true
	}

	return false
}

// SetTestFiles gets a reference to the given bool and assigns it to the TestFiles field.
func (o *ControlsDataRequestZipPostRequestOptions) SetTestFiles(v bool) {
	o.TestFiles = &v
}

// GetCustomZipName returns the CustomZipName field value if set, zero value otherwise.
func (o *ControlsDataRequestZipPostRequestOptions) GetCustomZipName() string {
	if o == nil || IsNil(o.CustomZipName) {
		var ret string
		return ret
	}
	return *o.CustomZipName
}

// GetCustomZipNameOk returns a tuple with the CustomZipName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataRequestZipPostRequestOptions) GetCustomZipNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomZipName) {
		return nil, false
	}
	return o.CustomZipName, true
}

// HasCustomZipName returns a boolean if a field has been set.
func (o *ControlsDataRequestZipPostRequestOptions) HasCustomZipName() bool {
	if o != nil && !IsNil(o.CustomZipName) {
		return true
	}

	return false
}

// SetCustomZipName gets a reference to the given string and assigns it to the CustomZipName field.
func (o *ControlsDataRequestZipPostRequestOptions) SetCustomZipName(v string) {
	o.CustomZipName = &v
}

// GetPdf returns the Pdf field value if set, zero value otherwise.
func (o *ControlsDataRequestZipPostRequestOptions) GetPdf() ControlsDataRequestZipPostRequestOptionsPdf {
	if o == nil || IsNil(o.Pdf) {
		var ret ControlsDataRequestZipPostRequestOptionsPdf
		return ret
	}
	return *o.Pdf
}

// GetPdfOk returns a tuple with the Pdf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataRequestZipPostRequestOptions) GetPdfOk() (*ControlsDataRequestZipPostRequestOptionsPdf, bool) {
	if o == nil || IsNil(o.Pdf) {
		return nil, false
	}
	return o.Pdf, true
}

// HasPdf returns a boolean if a field has been set.
func (o *ControlsDataRequestZipPostRequestOptions) HasPdf() bool {
	if o != nil && !IsNil(o.Pdf) {
		return true
	}

	return false
}

// SetPdf gets a reference to the given ControlsDataRequestZipPostRequestOptionsPdf and assigns it to the Pdf field.
func (o *ControlsDataRequestZipPostRequestOptions) SetPdf(v ControlsDataRequestZipPostRequestOptionsPdf) {
	o.Pdf = &v
}

func (o ControlsDataRequestZipPostRequestOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControlsDataRequestZipPostRequestOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PersistDownload) {
		toSerialize["persistDownload"] = o.PersistDownload
	}
	if !IsNil(o.ControlPdfs) {
		toSerialize["controlPdfs"] = o.ControlPdfs
	}
	if !IsNil(o.ControlFiles) {
		toSerialize["controlFiles"] = o.ControlFiles
	}
	if !IsNil(o.TestSheets) {
		toSerialize["testSheets"] = o.TestSheets
	}
	if !IsNil(o.TestFiles) {
		toSerialize["testFiles"] = o.TestFiles
	}
	if !IsNil(o.CustomZipName) {
		toSerialize["customZipName"] = o.CustomZipName
	}
	if !IsNil(o.Pdf) {
		toSerialize["pdf"] = o.Pdf
	}
	return toSerialize, nil
}

type NullableControlsDataRequestZipPostRequestOptions struct {
	value *ControlsDataRequestZipPostRequestOptions
	isSet bool
}

func (v NullableControlsDataRequestZipPostRequestOptions) Get() *ControlsDataRequestZipPostRequestOptions {
	return v.value
}

func (v *NullableControlsDataRequestZipPostRequestOptions) Set(val *ControlsDataRequestZipPostRequestOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableControlsDataRequestZipPostRequestOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableControlsDataRequestZipPostRequestOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControlsDataRequestZipPostRequestOptions(val *ControlsDataRequestZipPostRequestOptions) *NullableControlsDataRequestZipPostRequestOptions {
	return &NullableControlsDataRequestZipPostRequestOptions{value: val, isSet: true}
}

func (v NullableControlsDataRequestZipPostRequestOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControlsDataRequestZipPostRequestOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


