/*
AuditBoard Developer Portal API Documentation

Testing OpsAuditSectionInstancesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package auditboard

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/dja852/auditboard-go-client"
)

func Test_auditboard_OpsAuditSectionInstancesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test OpsAuditSectionInstancesAPIService OpsAuditSectionInstancesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.OpsAuditSectionInstancesAPI.OpsAuditSectionInstancesGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OpsAuditSectionInstancesAPIService OpsAuditSectionInstancesOpsAuditSectionInstanceIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var opsAuditSectionInstanceId int64

		resp, httpRes, err := apiClient.OpsAuditSectionInstancesAPI.OpsAuditSectionInstancesOpsAuditSectionInstanceIdDelete(context.Background(), opsAuditSectionInstanceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OpsAuditSectionInstancesAPIService OpsAuditSectionInstancesOpsAuditSectionInstanceIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var opsAuditSectionInstanceId int64

		resp, httpRes, err := apiClient.OpsAuditSectionInstancesAPI.OpsAuditSectionInstancesOpsAuditSectionInstanceIdGet(context.Background(), opsAuditSectionInstanceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OpsAuditSectionInstancesAPIService OpsAuditSectionInstancesOpsAuditSectionInstanceIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var opsAuditSectionInstanceId int64

		resp, httpRes, err := apiClient.OpsAuditSectionInstancesAPI.OpsAuditSectionInstancesOpsAuditSectionInstanceIdPut(context.Background(), opsAuditSectionInstanceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OpsAuditSectionInstancesAPIService OpsAuditSectionInstancesPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.OpsAuditSectionInstancesAPI.OpsAuditSectionInstancesPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
