/*
AuditBoard Developer Portal API Documentation

Testing TestSectionsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package auditboard

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/dja852/auditboard-go-client"
)

func Test_auditboard_TestSectionsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TestSectionsAPIService TestSectionsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.TestSectionsAPI.TestSectionsGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TestSectionsAPIService TestSectionsPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.TestSectionsAPI.TestSectionsPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TestSectionsAPIService TestSectionsTestSectionIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var testSectionId int64

		resp, httpRes, err := apiClient.TestSectionsAPI.TestSectionsTestSectionIdDelete(context.Background(), testSectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TestSectionsAPIService TestSectionsTestSectionIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var testSectionId int64

		resp, httpRes, err := apiClient.TestSectionsAPI.TestSectionsTestSectionIdGet(context.Background(), testSectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TestSectionsAPIService TestSectionsTestSectionIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var testSectionId int64

		resp, httpRes, err := apiClient.TestSectionsAPI.TestSectionsTestSectionIdPut(context.Background(), testSectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
