/*
AuditBoard Developer Portal API Documentation

Testing OpsAuditSubsectionsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package auditboard

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/dja852/auditboard-go-client"
)

func Test_auditboard_OpsAuditSubsectionsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test OpsAuditSubsectionsAPIService OpsAuditSubsectionsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.OpsAuditSubsectionsAPI.OpsAuditSubsectionsGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OpsAuditSubsectionsAPIService OpsAuditSubsectionsOpsAuditSubsectionIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var opsAuditSubsectionId int64

		resp, httpRes, err := apiClient.OpsAuditSubsectionsAPI.OpsAuditSubsectionsOpsAuditSubsectionIdDelete(context.Background(), opsAuditSubsectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OpsAuditSubsectionsAPIService OpsAuditSubsectionsOpsAuditSubsectionIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var opsAuditSubsectionId int64

		resp, httpRes, err := apiClient.OpsAuditSubsectionsAPI.OpsAuditSubsectionsOpsAuditSubsectionIdGet(context.Background(), opsAuditSubsectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OpsAuditSubsectionsAPIService OpsAuditSubsectionsOpsAuditSubsectionIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var opsAuditSubsectionId int64

		resp, httpRes, err := apiClient.OpsAuditSubsectionsAPI.OpsAuditSubsectionsOpsAuditSubsectionIdPut(context.Background(), opsAuditSubsectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OpsAuditSubsectionsAPIService OpsAuditSubsectionsPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.OpsAuditSubsectionsAPI.OpsAuditSubsectionsPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
