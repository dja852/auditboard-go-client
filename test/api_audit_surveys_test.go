/*
AuditBoard Developer Portal API Documentation

Testing AuditSurveysAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package auditboard

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/dja852/auditboard-go-client"
)

func Test_auditboard_AuditSurveysAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AuditSurveysAPIService AuditSurveysAuditSurveyIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var auditSurveyId int64

		resp, httpRes, err := apiClient.AuditSurveysAPI.AuditSurveysAuditSurveyIdDelete(context.Background(), auditSurveyId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AuditSurveysAPIService AuditSurveysAuditSurveyIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var auditSurveyId int64

		resp, httpRes, err := apiClient.AuditSurveysAPI.AuditSurveysAuditSurveyIdGet(context.Background(), auditSurveyId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AuditSurveysAPIService AuditSurveysAuditSurveyIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var auditSurveyId int64

		resp, httpRes, err := apiClient.AuditSurveysAPI.AuditSurveysAuditSurveyIdPut(context.Background(), auditSurveyId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AuditSurveysAPIService AuditSurveysGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AuditSurveysAPI.AuditSurveysGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
