/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AuditBusinessSegmentsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditBusinessSegmentsPostRequest{}

// AuditBusinessSegmentsPostRequest struct for AuditBusinessSegmentsPostRequest
type AuditBusinessSegmentsPostRequest struct {
	AuditBusinessSegment *AuditBusinessSegments `json:"audit_business _segment,omitempty"`
}

// NewAuditBusinessSegmentsPostRequest instantiates a new AuditBusinessSegmentsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditBusinessSegmentsPostRequest() *AuditBusinessSegmentsPostRequest {
	this := AuditBusinessSegmentsPostRequest{}
	return &this
}

// NewAuditBusinessSegmentsPostRequestWithDefaults instantiates a new AuditBusinessSegmentsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditBusinessSegmentsPostRequestWithDefaults() *AuditBusinessSegmentsPostRequest {
	this := AuditBusinessSegmentsPostRequest{}
	return &this
}

// GetAuditBusinessSegment returns the AuditBusinessSegment field value if set, zero value otherwise.
func (o *AuditBusinessSegmentsPostRequest) GetAuditBusinessSegment() AuditBusinessSegments {
	if o == nil || IsNil(o.AuditBusinessSegment) {
		var ret AuditBusinessSegments
		return ret
	}
	return *o.AuditBusinessSegment
}

// GetAuditBusinessSegmentOk returns a tuple with the AuditBusinessSegment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditBusinessSegmentsPostRequest) GetAuditBusinessSegmentOk() (*AuditBusinessSegments, bool) {
	if o == nil || IsNil(o.AuditBusinessSegment) {
		return nil, false
	}
	return o.AuditBusinessSegment, true
}

// HasAuditBusinessSegment returns a boolean if a field has been set.
func (o *AuditBusinessSegmentsPostRequest) HasAuditBusinessSegment() bool {
	if o != nil && !IsNil(o.AuditBusinessSegment) {
		return true
	}

	return false
}

// SetAuditBusinessSegment gets a reference to the given AuditBusinessSegments and assigns it to the AuditBusinessSegment field.
func (o *AuditBusinessSegmentsPostRequest) SetAuditBusinessSegment(v AuditBusinessSegments) {
	o.AuditBusinessSegment = &v
}

func (o AuditBusinessSegmentsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditBusinessSegmentsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditBusinessSegment) {
		toSerialize["audit_business _segment"] = o.AuditBusinessSegment
	}
	return toSerialize, nil
}

type NullableAuditBusinessSegmentsPostRequest struct {
	value *AuditBusinessSegmentsPostRequest
	isSet bool
}

func (v NullableAuditBusinessSegmentsPostRequest) Get() *AuditBusinessSegmentsPostRequest {
	return v.value
}

func (v *NullableAuditBusinessSegmentsPostRequest) Set(val *AuditBusinessSegmentsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditBusinessSegmentsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditBusinessSegmentsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditBusinessSegmentsPostRequest(val *AuditBusinessSegmentsPostRequest) *NullableAuditBusinessSegmentsPostRequest {
	return &NullableAuditBusinessSegmentsPostRequest{value: val, isSet: true}
}

func (v NullableAuditBusinessSegmentsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditBusinessSegmentsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


