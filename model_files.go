/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Files type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Files{}

// Files struct for Files
type Files struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	FileableId *int32 `json:"fileable_id,omitempty"`
	FileableType *string `json:"fileable_type,omitempty"`
	Name string `json:"name"`
	Size *string `json:"size,omitempty"`
	Type string `json:"type"`
	Key *string `json:"key,omitempty"`
	Url string `json:"url"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	UploadUserId *int32 `json:"upload_user_id,omitempty"`
	Comments *string `json:"comments,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	StorageType *string `json:"storage_type,omitempty"`
	EmbedUrl *string `json:"embed_url,omitempty"`
	ThumbUrl *string `json:"thumb_url,omitempty"`
	ImageUrl *string `json:"image_url,omitempty"`
	Meta interface{} `json:"meta,omitempty"`
	UserAgent *string `json:"user_agent,omitempty"`
	CreatorUserId *int32 `json:"creator_user_id,omitempty"`
	LocalFolderPath *string `json:"local_folder_path,omitempty"`
	Status *string `json:"status,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ReviewedByUserId *int32 `json:"reviewed_by_user_id,omitempty"`
	ReviewedDate *string `json:"reviewed_date,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	AmendedByUserId *int32 `json:"amended_by_user_id,omitempty"`
	AmendedDate *string `json:"amended_date,omitempty"`
	Scope *string `json:"scope,omitempty"`
	ExternalIntegrationId *string `json:"external_integration_id,omitempty"`
	ExternalIntegrationAuthor interface{} `json:"external_integration_author,omitempty"`
}

type _Files Files

// NewFiles instantiates a new Files object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiles(name string, type_ string, url string) *Files {
	this := Files{}
	this.Name = name
	this.Type = type_
	this.Url = url
	var storageType string = "NULL::character varying"
	this.StorageType = &storageType
	var userAgent string = "NULL::character varying"
	this.UserAgent = &userAgent
	var status string = "unverified"
	this.Status = &status
	return &this
}

// NewFilesWithDefaults instantiates a new Files object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesWithDefaults() *Files {
	this := Files{}
	var storageType string = "NULL::character varying"
	this.StorageType = &storageType
	var userAgent string = "NULL::character varying"
	this.UserAgent = &userAgent
	var status string = "unverified"
	this.Status = &status
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Files) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Files) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Files) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Files) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Files) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Files) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Files) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Files) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *Files) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetFileableId returns the FileableId field value if set, zero value otherwise.
func (o *Files) GetFileableId() int32 {
	if o == nil || IsNil(o.FileableId) {
		var ret int32
		return ret
	}
	return *o.FileableId
}

// GetFileableIdOk returns a tuple with the FileableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetFileableIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FileableId) {
		return nil, false
	}
	return o.FileableId, true
}

// HasFileableId returns a boolean if a field has been set.
func (o *Files) HasFileableId() bool {
	if o != nil && !IsNil(o.FileableId) {
		return true
	}

	return false
}

// SetFileableId gets a reference to the given int32 and assigns it to the FileableId field.
func (o *Files) SetFileableId(v int32) {
	o.FileableId = &v
}

// GetFileableType returns the FileableType field value if set, zero value otherwise.
func (o *Files) GetFileableType() string {
	if o == nil || IsNil(o.FileableType) {
		var ret string
		return ret
	}
	return *o.FileableType
}

// GetFileableTypeOk returns a tuple with the FileableType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetFileableTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FileableType) {
		return nil, false
	}
	return o.FileableType, true
}

// HasFileableType returns a boolean if a field has been set.
func (o *Files) HasFileableType() bool {
	if o != nil && !IsNil(o.FileableType) {
		return true
	}

	return false
}

// SetFileableType gets a reference to the given string and assigns it to the FileableType field.
func (o *Files) SetFileableType(v string) {
	o.FileableType = &v
}

// GetName returns the Name field value
func (o *Files) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Files) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Files) SetName(v string) {
	o.Name = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Files) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Files) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *Files) SetSize(v string) {
	o.Size = &v
}

// GetType returns the Type field value
func (o *Files) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Files) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Files) SetType(v string) {
	o.Type = v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *Files) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *Files) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *Files) SetKey(v string) {
	o.Key = &v
}

// GetUrl returns the Url field value
func (o *Files) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Files) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Files) SetUrl(v string) {
	o.Url = v
}

// GetUploadUserId returns the UploadUserId field value if set, zero value otherwise.
func (o *Files) GetUploadUserId() int32 {
	if o == nil || IsNil(o.UploadUserId) {
		var ret int32
		return ret
	}
	return *o.UploadUserId
}

// GetUploadUserIdOk returns a tuple with the UploadUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetUploadUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UploadUserId) {
		return nil, false
	}
	return o.UploadUserId, true
}

// HasUploadUserId returns a boolean if a field has been set.
func (o *Files) HasUploadUserId() bool {
	if o != nil && !IsNil(o.UploadUserId) {
		return true
	}

	return false
}

// SetUploadUserId gets a reference to the given int32 and assigns it to the UploadUserId field.
func (o *Files) SetUploadUserId(v int32) {
	o.UploadUserId = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *Files) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *Files) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *Files) SetComments(v string) {
	o.Comments = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *Files) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *Files) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *Files) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetStorageType returns the StorageType field value if set, zero value otherwise.
func (o *Files) GetStorageType() string {
	if o == nil || IsNil(o.StorageType) {
		var ret string
		return ret
	}
	return *o.StorageType
}

// GetStorageTypeOk returns a tuple with the StorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.StorageType) {
		return nil, false
	}
	return o.StorageType, true
}

// HasStorageType returns a boolean if a field has been set.
func (o *Files) HasStorageType() bool {
	if o != nil && !IsNil(o.StorageType) {
		return true
	}

	return false
}

// SetStorageType gets a reference to the given string and assigns it to the StorageType field.
func (o *Files) SetStorageType(v string) {
	o.StorageType = &v
}

// GetEmbedUrl returns the EmbedUrl field value if set, zero value otherwise.
func (o *Files) GetEmbedUrl() string {
	if o == nil || IsNil(o.EmbedUrl) {
		var ret string
		return ret
	}
	return *o.EmbedUrl
}

// GetEmbedUrlOk returns a tuple with the EmbedUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetEmbedUrlOk() (*string, bool) {
	if o == nil || IsNil(o.EmbedUrl) {
		return nil, false
	}
	return o.EmbedUrl, true
}

// HasEmbedUrl returns a boolean if a field has been set.
func (o *Files) HasEmbedUrl() bool {
	if o != nil && !IsNil(o.EmbedUrl) {
		return true
	}

	return false
}

// SetEmbedUrl gets a reference to the given string and assigns it to the EmbedUrl field.
func (o *Files) SetEmbedUrl(v string) {
	o.EmbedUrl = &v
}

// GetThumbUrl returns the ThumbUrl field value if set, zero value otherwise.
func (o *Files) GetThumbUrl() string {
	if o == nil || IsNil(o.ThumbUrl) {
		var ret string
		return ret
	}
	return *o.ThumbUrl
}

// GetThumbUrlOk returns a tuple with the ThumbUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetThumbUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbUrl) {
		return nil, false
	}
	return o.ThumbUrl, true
}

// HasThumbUrl returns a boolean if a field has been set.
func (o *Files) HasThumbUrl() bool {
	if o != nil && !IsNil(o.ThumbUrl) {
		return true
	}

	return false
}

// SetThumbUrl gets a reference to the given string and assigns it to the ThumbUrl field.
func (o *Files) SetThumbUrl(v string) {
	o.ThumbUrl = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *Files) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *Files) HasImageUrl() bool {
	if o != nil && !IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *Files) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Files) GetMeta() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Files) GetMetaOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return &o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *Files) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given interface{} and assigns it to the Meta field.
func (o *Files) SetMeta(v interface{}) {
	o.Meta = v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *Files) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *Files) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *Files) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetCreatorUserId returns the CreatorUserId field value if set, zero value otherwise.
func (o *Files) GetCreatorUserId() int32 {
	if o == nil || IsNil(o.CreatorUserId) {
		var ret int32
		return ret
	}
	return *o.CreatorUserId
}

// GetCreatorUserIdOk returns a tuple with the CreatorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetCreatorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatorUserId) {
		return nil, false
	}
	return o.CreatorUserId, true
}

// HasCreatorUserId returns a boolean if a field has been set.
func (o *Files) HasCreatorUserId() bool {
	if o != nil && !IsNil(o.CreatorUserId) {
		return true
	}

	return false
}

// SetCreatorUserId gets a reference to the given int32 and assigns it to the CreatorUserId field.
func (o *Files) SetCreatorUserId(v int32) {
	o.CreatorUserId = &v
}

// GetLocalFolderPath returns the LocalFolderPath field value if set, zero value otherwise.
func (o *Files) GetLocalFolderPath() string {
	if o == nil || IsNil(o.LocalFolderPath) {
		var ret string
		return ret
	}
	return *o.LocalFolderPath
}

// GetLocalFolderPathOk returns a tuple with the LocalFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetLocalFolderPathOk() (*string, bool) {
	if o == nil || IsNil(o.LocalFolderPath) {
		return nil, false
	}
	return o.LocalFolderPath, true
}

// HasLocalFolderPath returns a boolean if a field has been set.
func (o *Files) HasLocalFolderPath() bool {
	if o != nil && !IsNil(o.LocalFolderPath) {
		return true
	}

	return false
}

// SetLocalFolderPath gets a reference to the given string and assigns it to the LocalFolderPath field.
func (o *Files) SetLocalFolderPath(v string) {
	o.LocalFolderPath = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Files) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Files) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Files) SetStatus(v string) {
	o.Status = &v
}

// GetReviewedByUserId returns the ReviewedByUserId field value if set, zero value otherwise.
func (o *Files) GetReviewedByUserId() int32 {
	if o == nil || IsNil(o.ReviewedByUserId) {
		var ret int32
		return ret
	}
	return *o.ReviewedByUserId
}

// GetReviewedByUserIdOk returns a tuple with the ReviewedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetReviewedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReviewedByUserId) {
		return nil, false
	}
	return o.ReviewedByUserId, true
}

// HasReviewedByUserId returns a boolean if a field has been set.
func (o *Files) HasReviewedByUserId() bool {
	if o != nil && !IsNil(o.ReviewedByUserId) {
		return true
	}

	return false
}

// SetReviewedByUserId gets a reference to the given int32 and assigns it to the ReviewedByUserId field.
func (o *Files) SetReviewedByUserId(v int32) {
	o.ReviewedByUserId = &v
}

// GetReviewedDate returns the ReviewedDate field value if set, zero value otherwise.
func (o *Files) GetReviewedDate() string {
	if o == nil || IsNil(o.ReviewedDate) {
		var ret string
		return ret
	}
	return *o.ReviewedDate
}

// GetReviewedDateOk returns a tuple with the ReviewedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetReviewedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReviewedDate) {
		return nil, false
	}
	return o.ReviewedDate, true
}

// HasReviewedDate returns a boolean if a field has been set.
func (o *Files) HasReviewedDate() bool {
	if o != nil && !IsNil(o.ReviewedDate) {
		return true
	}

	return false
}

// SetReviewedDate gets a reference to the given string and assigns it to the ReviewedDate field.
func (o *Files) SetReviewedDate(v string) {
	o.ReviewedDate = &v
}

// GetAmendedByUserId returns the AmendedByUserId field value if set, zero value otherwise.
func (o *Files) GetAmendedByUserId() int32 {
	if o == nil || IsNil(o.AmendedByUserId) {
		var ret int32
		return ret
	}
	return *o.AmendedByUserId
}

// GetAmendedByUserIdOk returns a tuple with the AmendedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetAmendedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AmendedByUserId) {
		return nil, false
	}
	return o.AmendedByUserId, true
}

// HasAmendedByUserId returns a boolean if a field has been set.
func (o *Files) HasAmendedByUserId() bool {
	if o != nil && !IsNil(o.AmendedByUserId) {
		return true
	}

	return false
}

// SetAmendedByUserId gets a reference to the given int32 and assigns it to the AmendedByUserId field.
func (o *Files) SetAmendedByUserId(v int32) {
	o.AmendedByUserId = &v
}

// GetAmendedDate returns the AmendedDate field value if set, zero value otherwise.
func (o *Files) GetAmendedDate() string {
	if o == nil || IsNil(o.AmendedDate) {
		var ret string
		return ret
	}
	return *o.AmendedDate
}

// GetAmendedDateOk returns a tuple with the AmendedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetAmendedDateOk() (*string, bool) {
	if o == nil || IsNil(o.AmendedDate) {
		return nil, false
	}
	return o.AmendedDate, true
}

// HasAmendedDate returns a boolean if a field has been set.
func (o *Files) HasAmendedDate() bool {
	if o != nil && !IsNil(o.AmendedDate) {
		return true
	}

	return false
}

// SetAmendedDate gets a reference to the given string and assigns it to the AmendedDate field.
func (o *Files) SetAmendedDate(v string) {
	o.AmendedDate = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *Files) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *Files) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *Files) SetScope(v string) {
	o.Scope = &v
}

// GetExternalIntegrationId returns the ExternalIntegrationId field value if set, zero value otherwise.
func (o *Files) GetExternalIntegrationId() string {
	if o == nil || IsNil(o.ExternalIntegrationId) {
		var ret string
		return ret
	}
	return *o.ExternalIntegrationId
}

// GetExternalIntegrationIdOk returns a tuple with the ExternalIntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Files) GetExternalIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalIntegrationId) {
		return nil, false
	}
	return o.ExternalIntegrationId, true
}

// HasExternalIntegrationId returns a boolean if a field has been set.
func (o *Files) HasExternalIntegrationId() bool {
	if o != nil && !IsNil(o.ExternalIntegrationId) {
		return true
	}

	return false
}

// SetExternalIntegrationId gets a reference to the given string and assigns it to the ExternalIntegrationId field.
func (o *Files) SetExternalIntegrationId(v string) {
	o.ExternalIntegrationId = &v
}

// GetExternalIntegrationAuthor returns the ExternalIntegrationAuthor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Files) GetExternalIntegrationAuthor() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ExternalIntegrationAuthor
}

// GetExternalIntegrationAuthorOk returns a tuple with the ExternalIntegrationAuthor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Files) GetExternalIntegrationAuthorOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ExternalIntegrationAuthor) {
		return nil, false
	}
	return &o.ExternalIntegrationAuthor, true
}

// HasExternalIntegrationAuthor returns a boolean if a field has been set.
func (o *Files) HasExternalIntegrationAuthor() bool {
	if o != nil && !IsNil(o.ExternalIntegrationAuthor) {
		return true
	}

	return false
}

// SetExternalIntegrationAuthor gets a reference to the given interface{} and assigns it to the ExternalIntegrationAuthor field.
func (o *Files) SetExternalIntegrationAuthor(v interface{}) {
	o.ExternalIntegrationAuthor = v
}

func (o Files) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Files) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.FileableId) {
		toSerialize["fileable_id"] = o.FileableId
	}
	if !IsNil(o.FileableType) {
		toSerialize["fileable_type"] = o.FileableType
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	toSerialize["url"] = o.Url
	if !IsNil(o.UploadUserId) {
		toSerialize["upload_user_id"] = o.UploadUserId
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.StorageType) {
		toSerialize["storage_type"] = o.StorageType
	}
	if !IsNil(o.EmbedUrl) {
		toSerialize["embed_url"] = o.EmbedUrl
	}
	if !IsNil(o.ThumbUrl) {
		toSerialize["thumb_url"] = o.ThumbUrl
	}
	if !IsNil(o.ImageUrl) {
		toSerialize["image_url"] = o.ImageUrl
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.UserAgent) {
		toSerialize["user_agent"] = o.UserAgent
	}
	if !IsNil(o.CreatorUserId) {
		toSerialize["creator_user_id"] = o.CreatorUserId
	}
	if !IsNil(o.LocalFolderPath) {
		toSerialize["local_folder_path"] = o.LocalFolderPath
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ReviewedByUserId) {
		toSerialize["reviewed_by_user_id"] = o.ReviewedByUserId
	}
	if !IsNil(o.ReviewedDate) {
		toSerialize["reviewed_date"] = o.ReviewedDate
	}
	if !IsNil(o.AmendedByUserId) {
		toSerialize["amended_by_user_id"] = o.AmendedByUserId
	}
	if !IsNil(o.AmendedDate) {
		toSerialize["amended_date"] = o.AmendedDate
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.ExternalIntegrationId) {
		toSerialize["external_integration_id"] = o.ExternalIntegrationId
	}
	if o.ExternalIntegrationAuthor != nil {
		toSerialize["external_integration_author"] = o.ExternalIntegrationAuthor
	}
	return toSerialize, nil
}

type NullableFiles struct {
	value *Files
	isSet bool
}

func (v NullableFiles) Get() *Files {
	return v.value
}

func (v *NullableFiles) Set(val *Files) {
	v.value = val
	v.isSet = true
}

func (v NullableFiles) IsSet() bool {
	return v.isSet
}

func (v *NullableFiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiles(val *Files) *NullableFiles {
	return &NullableFiles{value: val, isSet: true}
}

func (v NullableFiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


