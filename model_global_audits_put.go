/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the GlobalAuditsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalAuditsPut{}

// GlobalAuditsPut struct for GlobalAuditsPut
type GlobalAuditsPut struct {
	GlobalAudit *GlobalAuditsPutGlobalAudit `json:"global_audit,omitempty"`
	PreviousValues *GlobalAuditsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewGlobalAuditsPut instantiates a new GlobalAuditsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalAuditsPut() *GlobalAuditsPut {
	this := GlobalAuditsPut{}
	return &this
}

// NewGlobalAuditsPutWithDefaults instantiates a new GlobalAuditsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalAuditsPutWithDefaults() *GlobalAuditsPut {
	this := GlobalAuditsPut{}
	return &this
}

// GetGlobalAudit returns the GlobalAudit field value if set, zero value otherwise.
func (o *GlobalAuditsPut) GetGlobalAudit() GlobalAuditsPutGlobalAudit {
	if o == nil || IsNil(o.GlobalAudit) {
		var ret GlobalAuditsPutGlobalAudit
		return ret
	}
	return *o.GlobalAudit
}

// GetGlobalAuditOk returns a tuple with the GlobalAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPut) GetGlobalAuditOk() (*GlobalAuditsPutGlobalAudit, bool) {
	if o == nil || IsNil(o.GlobalAudit) {
		return nil, false
	}
	return o.GlobalAudit, true
}

// HasGlobalAudit returns a boolean if a field has been set.
func (o *GlobalAuditsPut) HasGlobalAudit() bool {
	if o != nil && !IsNil(o.GlobalAudit) {
		return true
	}

	return false
}

// SetGlobalAudit gets a reference to the given GlobalAuditsPutGlobalAudit and assigns it to the GlobalAudit field.
func (o *GlobalAuditsPut) SetGlobalAudit(v GlobalAuditsPutGlobalAudit) {
	o.GlobalAudit = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *GlobalAuditsPut) GetPreviousValues() GlobalAuditsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret GlobalAuditsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAuditsPut) GetPreviousValuesOk() (*GlobalAuditsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *GlobalAuditsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given GlobalAuditsPutPreviousValues and assigns it to the PreviousValues field.
func (o *GlobalAuditsPut) SetPreviousValues(v GlobalAuditsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o GlobalAuditsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalAuditsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlobalAudit) {
		toSerialize["global_audit"] = o.GlobalAudit
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableGlobalAuditsPut struct {
	value *GlobalAuditsPut
	isSet bool
}

func (v NullableGlobalAuditsPut) Get() *GlobalAuditsPut {
	return v.value
}

func (v *NullableGlobalAuditsPut) Set(val *GlobalAuditsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalAuditsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalAuditsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalAuditsPut(val *GlobalAuditsPut) *NullableGlobalAuditsPut {
	return &NullableGlobalAuditsPut{value: val, isSet: true}
}

func (v NullableGlobalAuditsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalAuditsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


