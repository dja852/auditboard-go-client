/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TaskItemsImportJsonSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskItemsImportJsonSummary{}

// TaskItemsImportJsonSummary struct for TaskItemsImportJsonSummary
type TaskItemsImportJsonSummary struct {
	Success *int32 `json:"success,omitempty"`
	Failed *int32 `json:"failed,omitempty"`
	Skipped *int32 `json:"skipped,omitempty"`
	UpdateSuccess *int32 `json:"updateSuccess,omitempty"`
	UpdateFailed *int32 `json:"updateFailed,omitempty"`
	CreateSuccess *int32 `json:"createSuccess,omitempty"`
	CreateFailed *int32 `json:"createFailed,omitempty"`
	FailedIndex []int32 `json:"failedIndex,omitempty"`
	SuccessIndex []int32 `json:"successIndex,omitempty"`
}

// NewTaskItemsImportJsonSummary instantiates a new TaskItemsImportJsonSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskItemsImportJsonSummary() *TaskItemsImportJsonSummary {
	this := TaskItemsImportJsonSummary{}
	return &this
}

// NewTaskItemsImportJsonSummaryWithDefaults instantiates a new TaskItemsImportJsonSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskItemsImportJsonSummaryWithDefaults() *TaskItemsImportJsonSummary {
	this := TaskItemsImportJsonSummary{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *TaskItemsImportJsonSummary) GetSuccess() int32 {
	if o == nil || IsNil(o.Success) {
		var ret int32
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonSummary) GetSuccessOk() (*int32, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *TaskItemsImportJsonSummary) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given int32 and assigns it to the Success field.
func (o *TaskItemsImportJsonSummary) SetSuccess(v int32) {
	o.Success = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *TaskItemsImportJsonSummary) GetFailed() int32 {
	if o == nil || IsNil(o.Failed) {
		var ret int32
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonSummary) GetFailedOk() (*int32, bool) {
	if o == nil || IsNil(o.Failed) {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *TaskItemsImportJsonSummary) HasFailed() bool {
	if o != nil && !IsNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given int32 and assigns it to the Failed field.
func (o *TaskItemsImportJsonSummary) SetFailed(v int32) {
	o.Failed = &v
}

// GetSkipped returns the Skipped field value if set, zero value otherwise.
func (o *TaskItemsImportJsonSummary) GetSkipped() int32 {
	if o == nil || IsNil(o.Skipped) {
		var ret int32
		return ret
	}
	return *o.Skipped
}

// GetSkippedOk returns a tuple with the Skipped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonSummary) GetSkippedOk() (*int32, bool) {
	if o == nil || IsNil(o.Skipped) {
		return nil, false
	}
	return o.Skipped, true
}

// HasSkipped returns a boolean if a field has been set.
func (o *TaskItemsImportJsonSummary) HasSkipped() bool {
	if o != nil && !IsNil(o.Skipped) {
		return true
	}

	return false
}

// SetSkipped gets a reference to the given int32 and assigns it to the Skipped field.
func (o *TaskItemsImportJsonSummary) SetSkipped(v int32) {
	o.Skipped = &v
}

// GetUpdateSuccess returns the UpdateSuccess field value if set, zero value otherwise.
func (o *TaskItemsImportJsonSummary) GetUpdateSuccess() int32 {
	if o == nil || IsNil(o.UpdateSuccess) {
		var ret int32
		return ret
	}
	return *o.UpdateSuccess
}

// GetUpdateSuccessOk returns a tuple with the UpdateSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonSummary) GetUpdateSuccessOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdateSuccess) {
		return nil, false
	}
	return o.UpdateSuccess, true
}

// HasUpdateSuccess returns a boolean if a field has been set.
func (o *TaskItemsImportJsonSummary) HasUpdateSuccess() bool {
	if o != nil && !IsNil(o.UpdateSuccess) {
		return true
	}

	return false
}

// SetUpdateSuccess gets a reference to the given int32 and assigns it to the UpdateSuccess field.
func (o *TaskItemsImportJsonSummary) SetUpdateSuccess(v int32) {
	o.UpdateSuccess = &v
}

// GetUpdateFailed returns the UpdateFailed field value if set, zero value otherwise.
func (o *TaskItemsImportJsonSummary) GetUpdateFailed() int32 {
	if o == nil || IsNil(o.UpdateFailed) {
		var ret int32
		return ret
	}
	return *o.UpdateFailed
}

// GetUpdateFailedOk returns a tuple with the UpdateFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonSummary) GetUpdateFailedOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdateFailed) {
		return nil, false
	}
	return o.UpdateFailed, true
}

// HasUpdateFailed returns a boolean if a field has been set.
func (o *TaskItemsImportJsonSummary) HasUpdateFailed() bool {
	if o != nil && !IsNil(o.UpdateFailed) {
		return true
	}

	return false
}

// SetUpdateFailed gets a reference to the given int32 and assigns it to the UpdateFailed field.
func (o *TaskItemsImportJsonSummary) SetUpdateFailed(v int32) {
	o.UpdateFailed = &v
}

// GetCreateSuccess returns the CreateSuccess field value if set, zero value otherwise.
func (o *TaskItemsImportJsonSummary) GetCreateSuccess() int32 {
	if o == nil || IsNil(o.CreateSuccess) {
		var ret int32
		return ret
	}
	return *o.CreateSuccess
}

// GetCreateSuccessOk returns a tuple with the CreateSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonSummary) GetCreateSuccessOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateSuccess) {
		return nil, false
	}
	return o.CreateSuccess, true
}

// HasCreateSuccess returns a boolean if a field has been set.
func (o *TaskItemsImportJsonSummary) HasCreateSuccess() bool {
	if o != nil && !IsNil(o.CreateSuccess) {
		return true
	}

	return false
}

// SetCreateSuccess gets a reference to the given int32 and assigns it to the CreateSuccess field.
func (o *TaskItemsImportJsonSummary) SetCreateSuccess(v int32) {
	o.CreateSuccess = &v
}

// GetCreateFailed returns the CreateFailed field value if set, zero value otherwise.
func (o *TaskItemsImportJsonSummary) GetCreateFailed() int32 {
	if o == nil || IsNil(o.CreateFailed) {
		var ret int32
		return ret
	}
	return *o.CreateFailed
}

// GetCreateFailedOk returns a tuple with the CreateFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonSummary) GetCreateFailedOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateFailed) {
		return nil, false
	}
	return o.CreateFailed, true
}

// HasCreateFailed returns a boolean if a field has been set.
func (o *TaskItemsImportJsonSummary) HasCreateFailed() bool {
	if o != nil && !IsNil(o.CreateFailed) {
		return true
	}

	return false
}

// SetCreateFailed gets a reference to the given int32 and assigns it to the CreateFailed field.
func (o *TaskItemsImportJsonSummary) SetCreateFailed(v int32) {
	o.CreateFailed = &v
}

// GetFailedIndex returns the FailedIndex field value if set, zero value otherwise.
func (o *TaskItemsImportJsonSummary) GetFailedIndex() []int32 {
	if o == nil || IsNil(o.FailedIndex) {
		var ret []int32
		return ret
	}
	return o.FailedIndex
}

// GetFailedIndexOk returns a tuple with the FailedIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonSummary) GetFailedIndexOk() ([]int32, bool) {
	if o == nil || IsNil(o.FailedIndex) {
		return nil, false
	}
	return o.FailedIndex, true
}

// HasFailedIndex returns a boolean if a field has been set.
func (o *TaskItemsImportJsonSummary) HasFailedIndex() bool {
	if o != nil && !IsNil(o.FailedIndex) {
		return true
	}

	return false
}

// SetFailedIndex gets a reference to the given []int32 and assigns it to the FailedIndex field.
func (o *TaskItemsImportJsonSummary) SetFailedIndex(v []int32) {
	o.FailedIndex = v
}

// GetSuccessIndex returns the SuccessIndex field value if set, zero value otherwise.
func (o *TaskItemsImportJsonSummary) GetSuccessIndex() []int32 {
	if o == nil || IsNil(o.SuccessIndex) {
		var ret []int32
		return ret
	}
	return o.SuccessIndex
}

// GetSuccessIndexOk returns a tuple with the SuccessIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonSummary) GetSuccessIndexOk() ([]int32, bool) {
	if o == nil || IsNil(o.SuccessIndex) {
		return nil, false
	}
	return o.SuccessIndex, true
}

// HasSuccessIndex returns a boolean if a field has been set.
func (o *TaskItemsImportJsonSummary) HasSuccessIndex() bool {
	if o != nil && !IsNil(o.SuccessIndex) {
		return true
	}

	return false
}

// SetSuccessIndex gets a reference to the given []int32 and assigns it to the SuccessIndex field.
func (o *TaskItemsImportJsonSummary) SetSuccessIndex(v []int32) {
	o.SuccessIndex = v
}

func (o TaskItemsImportJsonSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskItemsImportJsonSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Failed) {
		toSerialize["failed"] = o.Failed
	}
	if !IsNil(o.Skipped) {
		toSerialize["skipped"] = o.Skipped
	}
	if !IsNil(o.UpdateSuccess) {
		toSerialize["updateSuccess"] = o.UpdateSuccess
	}
	if !IsNil(o.UpdateFailed) {
		toSerialize["updateFailed"] = o.UpdateFailed
	}
	if !IsNil(o.CreateSuccess) {
		toSerialize["createSuccess"] = o.CreateSuccess
	}
	if !IsNil(o.CreateFailed) {
		toSerialize["createFailed"] = o.CreateFailed
	}
	if !IsNil(o.FailedIndex) {
		toSerialize["failedIndex"] = o.FailedIndex
	}
	if !IsNil(o.SuccessIndex) {
		toSerialize["successIndex"] = o.SuccessIndex
	}
	return toSerialize, nil
}

type NullableTaskItemsImportJsonSummary struct {
	value *TaskItemsImportJsonSummary
	isSet bool
}

func (v NullableTaskItemsImportJsonSummary) Get() *TaskItemsImportJsonSummary {
	return v.value
}

func (v *NullableTaskItemsImportJsonSummary) Set(val *TaskItemsImportJsonSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskItemsImportJsonSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskItemsImportJsonSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskItemsImportJsonSummary(val *TaskItemsImportJsonSummary) *NullableTaskItemsImportJsonSummary {
	return &NullableTaskItemsImportJsonSummary{value: val, isSet: true}
}

func (v NullableTaskItemsImportJsonSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskItemsImportJsonSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


