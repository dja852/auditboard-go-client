/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TestsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestsPostRequest{}

// TestsPostRequest struct for TestsPostRequest
type TestsPostRequest struct {
	Test *Tests `json:"test,omitempty"`
}

// NewTestsPostRequest instantiates a new TestsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestsPostRequest() *TestsPostRequest {
	this := TestsPostRequest{}
	return &this
}

// NewTestsPostRequestWithDefaults instantiates a new TestsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestsPostRequestWithDefaults() *TestsPostRequest {
	this := TestsPostRequest{}
	return &this
}

// GetTest returns the Test field value if set, zero value otherwise.
func (o *TestsPostRequest) GetTest() Tests {
	if o == nil || IsNil(o.Test) {
		var ret Tests
		return ret
	}
	return *o.Test
}

// GetTestOk returns a tuple with the Test field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPostRequest) GetTestOk() (*Tests, bool) {
	if o == nil || IsNil(o.Test) {
		return nil, false
	}
	return o.Test, true
}

// HasTest returns a boolean if a field has been set.
func (o *TestsPostRequest) HasTest() bool {
	if o != nil && !IsNil(o.Test) {
		return true
	}

	return false
}

// SetTest gets a reference to the given Tests and assigns it to the Test field.
func (o *TestsPostRequest) SetTest(v Tests) {
	o.Test = &v
}

func (o TestsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Test) {
		toSerialize["test"] = o.Test
	}
	return toSerialize, nil
}

type NullableTestsPostRequest struct {
	value *TestsPostRequest
	isSet bool
}

func (v NullableTestsPostRequest) Get() *TestsPostRequest {
	return v.value
}

func (v *NullableTestsPostRequest) Set(val *TestsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTestsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTestsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestsPostRequest(val *TestsPostRequest) *NullableTestsPostRequest {
	return &NullableTestsPostRequest{value: val, isSet: true}
}

func (v NullableTestsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


