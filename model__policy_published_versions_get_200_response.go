/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the PolicyPublishedVersionsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyPublishedVersionsGet200Response{}

// PolicyPublishedVersionsGet200Response struct for PolicyPublishedVersionsGet200Response
type PolicyPublishedVersionsGet200Response struct {
	PolicyPublishedVersions []PolicyPublishedVersions `json:"policy_published_versions,omitempty"`
}

// NewPolicyPublishedVersionsGet200Response instantiates a new PolicyPublishedVersionsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyPublishedVersionsGet200Response() *PolicyPublishedVersionsGet200Response {
	this := PolicyPublishedVersionsGet200Response{}
	return &this
}

// NewPolicyPublishedVersionsGet200ResponseWithDefaults instantiates a new PolicyPublishedVersionsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyPublishedVersionsGet200ResponseWithDefaults() *PolicyPublishedVersionsGet200Response {
	this := PolicyPublishedVersionsGet200Response{}
	return &this
}

// GetPolicyPublishedVersions returns the PolicyPublishedVersions field value if set, zero value otherwise.
func (o *PolicyPublishedVersionsGet200Response) GetPolicyPublishedVersions() []PolicyPublishedVersions {
	if o == nil || IsNil(o.PolicyPublishedVersions) {
		var ret []PolicyPublishedVersions
		return ret
	}
	return o.PolicyPublishedVersions
}

// GetPolicyPublishedVersionsOk returns a tuple with the PolicyPublishedVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyPublishedVersionsGet200Response) GetPolicyPublishedVersionsOk() ([]PolicyPublishedVersions, bool) {
	if o == nil || IsNil(o.PolicyPublishedVersions) {
		return nil, false
	}
	return o.PolicyPublishedVersions, true
}

// HasPolicyPublishedVersions returns a boolean if a field has been set.
func (o *PolicyPublishedVersionsGet200Response) HasPolicyPublishedVersions() bool {
	if o != nil && !IsNil(o.PolicyPublishedVersions) {
		return true
	}

	return false
}

// SetPolicyPublishedVersions gets a reference to the given []PolicyPublishedVersions and assigns it to the PolicyPublishedVersions field.
func (o *PolicyPublishedVersionsGet200Response) SetPolicyPublishedVersions(v []PolicyPublishedVersions) {
	o.PolicyPublishedVersions = v
}

func (o PolicyPublishedVersionsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyPublishedVersionsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicyPublishedVersions) {
		toSerialize["policy_published_versions"] = o.PolicyPublishedVersions
	}
	return toSerialize, nil
}

type NullablePolicyPublishedVersionsGet200Response struct {
	value *PolicyPublishedVersionsGet200Response
	isSet bool
}

func (v NullablePolicyPublishedVersionsGet200Response) Get() *PolicyPublishedVersionsGet200Response {
	return v.value
}

func (v *NullablePolicyPublishedVersionsGet200Response) Set(val *PolicyPublishedVersionsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyPublishedVersionsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyPublishedVersionsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyPublishedVersionsGet200Response(val *PolicyPublishedVersionsGet200Response) *NullablePolicyPublishedVersionsGet200Response {
	return &NullablePolicyPublishedVersionsGet200Response{value: val, isSet: true}
}

func (v NullablePolicyPublishedVersionsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyPublishedVersionsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


