/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ControlsDataGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControlsDataGet200Response{}

// ControlsDataGet200Response struct for ControlsDataGet200Response
type ControlsDataGet200Response struct {
	ControlsData []ControlsData `json:"controls_data,omitempty"`
}

// NewControlsDataGet200Response instantiates a new ControlsDataGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControlsDataGet200Response() *ControlsDataGet200Response {
	this := ControlsDataGet200Response{}
	return &this
}

// NewControlsDataGet200ResponseWithDefaults instantiates a new ControlsDataGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlsDataGet200ResponseWithDefaults() *ControlsDataGet200Response {
	this := ControlsDataGet200Response{}
	return &this
}

// GetControlsData returns the ControlsData field value if set, zero value otherwise.
func (o *ControlsDataGet200Response) GetControlsData() []ControlsData {
	if o == nil || IsNil(o.ControlsData) {
		var ret []ControlsData
		return ret
	}
	return o.ControlsData
}

// GetControlsDataOk returns a tuple with the ControlsData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataGet200Response) GetControlsDataOk() ([]ControlsData, bool) {
	if o == nil || IsNil(o.ControlsData) {
		return nil, false
	}
	return o.ControlsData, true
}

// HasControlsData returns a boolean if a field has been set.
func (o *ControlsDataGet200Response) HasControlsData() bool {
	if o != nil && !IsNil(o.ControlsData) {
		return true
	}

	return false
}

// SetControlsData gets a reference to the given []ControlsData and assigns it to the ControlsData field.
func (o *ControlsDataGet200Response) SetControlsData(v []ControlsData) {
	o.ControlsData = v
}

func (o ControlsDataGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControlsDataGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ControlsData) {
		toSerialize["controls_data"] = o.ControlsData
	}
	return toSerialize, nil
}

type NullableControlsDataGet200Response struct {
	value *ControlsDataGet200Response
	isSet bool
}

func (v NullableControlsDataGet200Response) Get() *ControlsDataGet200Response {
	return v.value
}

func (v *NullableControlsDataGet200Response) Set(val *ControlsDataGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableControlsDataGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableControlsDataGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControlsDataGet200Response(val *ControlsDataGet200Response) *NullableControlsDataGet200Response {
	return &NullableControlsDataGet200Response{value: val, isSet: true}
}

func (v NullableControlsDataGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControlsDataGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


