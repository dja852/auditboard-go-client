/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the LibraryPreloadMetaInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LibraryPreloadMetaInner{}

// LibraryPreloadMetaInner struct for LibraryPreloadMetaInner
type LibraryPreloadMetaInner struct {
	Datafields []string `json:"datafields,omitempty"`
}

// NewLibraryPreloadMetaInner instantiates a new LibraryPreloadMetaInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLibraryPreloadMetaInner() *LibraryPreloadMetaInner {
	this := LibraryPreloadMetaInner{}
	return &this
}

// NewLibraryPreloadMetaInnerWithDefaults instantiates a new LibraryPreloadMetaInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLibraryPreloadMetaInnerWithDefaults() *LibraryPreloadMetaInner {
	this := LibraryPreloadMetaInner{}
	return &this
}

// GetDatafields returns the Datafields field value if set, zero value otherwise.
func (o *LibraryPreloadMetaInner) GetDatafields() []string {
	if o == nil || IsNil(o.Datafields) {
		var ret []string
		return ret
	}
	return o.Datafields
}

// GetDatafieldsOk returns a tuple with the Datafields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LibraryPreloadMetaInner) GetDatafieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.Datafields) {
		return nil, false
	}
	return o.Datafields, true
}

// HasDatafields returns a boolean if a field has been set.
func (o *LibraryPreloadMetaInner) HasDatafields() bool {
	if o != nil && !IsNil(o.Datafields) {
		return true
	}

	return false
}

// SetDatafields gets a reference to the given []string and assigns it to the Datafields field.
func (o *LibraryPreloadMetaInner) SetDatafields(v []string) {
	o.Datafields = v
}

func (o LibraryPreloadMetaInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LibraryPreloadMetaInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Datafields) {
		toSerialize["datafields"] = o.Datafields
	}
	return toSerialize, nil
}

type NullableLibraryPreloadMetaInner struct {
	value *LibraryPreloadMetaInner
	isSet bool
}

func (v NullableLibraryPreloadMetaInner) Get() *LibraryPreloadMetaInner {
	return v.value
}

func (v *NullableLibraryPreloadMetaInner) Set(val *LibraryPreloadMetaInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLibraryPreloadMetaInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLibraryPreloadMetaInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLibraryPreloadMetaInner(val *LibraryPreloadMetaInner) *NullableLibraryPreloadMetaInner {
	return &NullableLibraryPreloadMetaInner{value: val, isSet: true}
}

func (v NullableLibraryPreloadMetaInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLibraryPreloadMetaInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


