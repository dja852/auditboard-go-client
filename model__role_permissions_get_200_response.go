/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RolePermissionsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RolePermissionsGet200Response{}

// RolePermissionsGet200Response struct for RolePermissionsGet200Response
type RolePermissionsGet200Response struct {
	RolePermissions []RolePermissions `json:"role_permissions,omitempty"`
}

// NewRolePermissionsGet200Response instantiates a new RolePermissionsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolePermissionsGet200Response() *RolePermissionsGet200Response {
	this := RolePermissionsGet200Response{}
	return &this
}

// NewRolePermissionsGet200ResponseWithDefaults instantiates a new RolePermissionsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolePermissionsGet200ResponseWithDefaults() *RolePermissionsGet200Response {
	this := RolePermissionsGet200Response{}
	return &this
}

// GetRolePermissions returns the RolePermissions field value if set, zero value otherwise.
func (o *RolePermissionsGet200Response) GetRolePermissions() []RolePermissions {
	if o == nil || IsNil(o.RolePermissions) {
		var ret []RolePermissions
		return ret
	}
	return o.RolePermissions
}

// GetRolePermissionsOk returns a tuple with the RolePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionsGet200Response) GetRolePermissionsOk() ([]RolePermissions, bool) {
	if o == nil || IsNil(o.RolePermissions) {
		return nil, false
	}
	return o.RolePermissions, true
}

// HasRolePermissions returns a boolean if a field has been set.
func (o *RolePermissionsGet200Response) HasRolePermissions() bool {
	if o != nil && !IsNil(o.RolePermissions) {
		return true
	}

	return false
}

// SetRolePermissions gets a reference to the given []RolePermissions and assigns it to the RolePermissions field.
func (o *RolePermissionsGet200Response) SetRolePermissions(v []RolePermissions) {
	o.RolePermissions = v
}

func (o RolePermissionsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RolePermissionsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RolePermissions) {
		toSerialize["role_permissions"] = o.RolePermissions
	}
	return toSerialize, nil
}

type NullableRolePermissionsGet200Response struct {
	value *RolePermissionsGet200Response
	isSet bool
}

func (v NullableRolePermissionsGet200Response) Get() *RolePermissionsGet200Response {
	return v.value
}

func (v *NullableRolePermissionsGet200Response) Set(val *RolePermissionsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRolePermissionsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRolePermissionsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolePermissionsGet200Response(val *RolePermissionsGet200Response) *NullableRolePermissionsGet200Response {
	return &NullableRolePermissionsGet200Response{value: val, isSet: true}
}

func (v NullableRolePermissionsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolePermissionsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


