/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the LocationsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationsGet200Response{}

// LocationsGet200Response struct for LocationsGet200Response
type LocationsGet200Response struct {
	Locations []Locations `json:"locations,omitempty"`
}

// NewLocationsGet200Response instantiates a new LocationsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationsGet200Response() *LocationsGet200Response {
	this := LocationsGet200Response{}
	return &this
}

// NewLocationsGet200ResponseWithDefaults instantiates a new LocationsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationsGet200ResponseWithDefaults() *LocationsGet200Response {
	this := LocationsGet200Response{}
	return &this
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *LocationsGet200Response) GetLocations() []Locations {
	if o == nil || IsNil(o.Locations) {
		var ret []Locations
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationsGet200Response) GetLocationsOk() ([]Locations, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *LocationsGet200Response) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []Locations and assigns it to the Locations field.
func (o *LocationsGet200Response) SetLocations(v []Locations) {
	o.Locations = v
}

func (o LocationsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	return toSerialize, nil
}

type NullableLocationsGet200Response struct {
	value *LocationsGet200Response
	isSet bool
}

func (v NullableLocationsGet200Response) Get() *LocationsGet200Response {
	return v.value
}

func (v *NullableLocationsGet200Response) Set(val *LocationsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationsGet200Response(val *LocationsGet200Response) *NullableLocationsGet200Response {
	return &NullableLocationsGet200Response{value: val, isSet: true}
}

func (v NullableLocationsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


