/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the NarrativesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NarrativesPostRequest{}

// NarrativesPostRequest struct for NarrativesPostRequest
type NarrativesPostRequest struct {
	Narrative *Narratives `json:"narrative,omitempty"`
}

// NewNarrativesPostRequest instantiates a new NarrativesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNarrativesPostRequest() *NarrativesPostRequest {
	this := NarrativesPostRequest{}
	return &this
}

// NewNarrativesPostRequestWithDefaults instantiates a new NarrativesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNarrativesPostRequestWithDefaults() *NarrativesPostRequest {
	this := NarrativesPostRequest{}
	return &this
}

// GetNarrative returns the Narrative field value if set, zero value otherwise.
func (o *NarrativesPostRequest) GetNarrative() Narratives {
	if o == nil || IsNil(o.Narrative) {
		var ret Narratives
		return ret
	}
	return *o.Narrative
}

// GetNarrativeOk returns a tuple with the Narrative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPostRequest) GetNarrativeOk() (*Narratives, bool) {
	if o == nil || IsNil(o.Narrative) {
		return nil, false
	}
	return o.Narrative, true
}

// HasNarrative returns a boolean if a field has been set.
func (o *NarrativesPostRequest) HasNarrative() bool {
	if o != nil && !IsNil(o.Narrative) {
		return true
	}

	return false
}

// SetNarrative gets a reference to the given Narratives and assigns it to the Narrative field.
func (o *NarrativesPostRequest) SetNarrative(v Narratives) {
	o.Narrative = &v
}

func (o NarrativesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NarrativesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Narrative) {
		toSerialize["narrative"] = o.Narrative
	}
	return toSerialize, nil
}

type NullableNarrativesPostRequest struct {
	value *NarrativesPostRequest
	isSet bool
}

func (v NullableNarrativesPostRequest) Get() *NarrativesPostRequest {
	return v.value
}

func (v *NullableNarrativesPostRequest) Set(val *NarrativesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNarrativesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNarrativesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNarrativesPostRequest(val *NarrativesPostRequest) *NullableNarrativesPostRequest {
	return &NullableNarrativesPostRequest{value: val, isSet: true}
}

func (v NullableNarrativesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNarrativesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


