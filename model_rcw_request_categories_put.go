/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RcwRequestCategoriesPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RcwRequestCategoriesPut{}

// RcwRequestCategoriesPut struct for RcwRequestCategoriesPut
type RcwRequestCategoriesPut struct {
	RcwRequestCategory *RcwRequestCategoriesPutRcwRequestCategory `json:"rcw_request_category,omitempty"`
	PreviousValues *RcwRequestCategoriesPutPreviousValues `json:"previous_values,omitempty"`
}

// NewRcwRequestCategoriesPut instantiates a new RcwRequestCategoriesPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRcwRequestCategoriesPut() *RcwRequestCategoriesPut {
	this := RcwRequestCategoriesPut{}
	return &this
}

// NewRcwRequestCategoriesPutWithDefaults instantiates a new RcwRequestCategoriesPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRcwRequestCategoriesPutWithDefaults() *RcwRequestCategoriesPut {
	this := RcwRequestCategoriesPut{}
	return &this
}

// GetRcwRequestCategory returns the RcwRequestCategory field value if set, zero value otherwise.
func (o *RcwRequestCategoriesPut) GetRcwRequestCategory() RcwRequestCategoriesPutRcwRequestCategory {
	if o == nil || IsNil(o.RcwRequestCategory) {
		var ret RcwRequestCategoriesPutRcwRequestCategory
		return ret
	}
	return *o.RcwRequestCategory
}

// GetRcwRequestCategoryOk returns a tuple with the RcwRequestCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RcwRequestCategoriesPut) GetRcwRequestCategoryOk() (*RcwRequestCategoriesPutRcwRequestCategory, bool) {
	if o == nil || IsNil(o.RcwRequestCategory) {
		return nil, false
	}
	return o.RcwRequestCategory, true
}

// HasRcwRequestCategory returns a boolean if a field has been set.
func (o *RcwRequestCategoriesPut) HasRcwRequestCategory() bool {
	if o != nil && !IsNil(o.RcwRequestCategory) {
		return true
	}

	return false
}

// SetRcwRequestCategory gets a reference to the given RcwRequestCategoriesPutRcwRequestCategory and assigns it to the RcwRequestCategory field.
func (o *RcwRequestCategoriesPut) SetRcwRequestCategory(v RcwRequestCategoriesPutRcwRequestCategory) {
	o.RcwRequestCategory = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *RcwRequestCategoriesPut) GetPreviousValues() RcwRequestCategoriesPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret RcwRequestCategoriesPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RcwRequestCategoriesPut) GetPreviousValuesOk() (*RcwRequestCategoriesPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *RcwRequestCategoriesPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given RcwRequestCategoriesPutPreviousValues and assigns it to the PreviousValues field.
func (o *RcwRequestCategoriesPut) SetPreviousValues(v RcwRequestCategoriesPutPreviousValues) {
	o.PreviousValues = &v
}

func (o RcwRequestCategoriesPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RcwRequestCategoriesPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RcwRequestCategory) {
		toSerialize["rcw_request_category"] = o.RcwRequestCategory
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableRcwRequestCategoriesPut struct {
	value *RcwRequestCategoriesPut
	isSet bool
}

func (v NullableRcwRequestCategoriesPut) Get() *RcwRequestCategoriesPut {
	return v.value
}

func (v *NullableRcwRequestCategoriesPut) Set(val *RcwRequestCategoriesPut) {
	v.value = val
	v.isSet = true
}

func (v NullableRcwRequestCategoriesPut) IsSet() bool {
	return v.isSet
}

func (v *NullableRcwRequestCategoriesPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRcwRequestCategoriesPut(val *RcwRequestCategoriesPut) *NullableRcwRequestCategoriesPut {
	return &NullableRcwRequestCategoriesPut{value: val, isSet: true}
}

func (v NullableRcwRequestCategoriesPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRcwRequestCategoriesPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


