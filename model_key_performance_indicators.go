/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the KeyPerformanceIndicators type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyPerformanceIndicators{}

// KeyPerformanceIndicators struct for KeyPerformanceIndicators
type KeyPerformanceIndicators struct {
	Id *int64 `json:"id,omitempty"`
	Uid *string `json:"uid,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Target *string `json:"target,omitempty"`
	Value *string `json:"value,omitempty"`
	CompletionPercentage *string `json:"completion_percentage,omitempty"`
	SumValues *bool `json:"sum_values,omitempty"`
	OwnerUserId *int64 `json:"owner_user_id,omitempty"`
	ExecutiveOwnerUserId *int64 `json:"executive_owner_user_id,omitempty"`
	FieldData map[string]interface{} `json:"field_data,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	Permissions map[string]interface{} `json:"_permissions,omitempty"`
}

// NewKeyPerformanceIndicators instantiates a new KeyPerformanceIndicators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyPerformanceIndicators() *KeyPerformanceIndicators {
	this := KeyPerformanceIndicators{}
	return &this
}

// NewKeyPerformanceIndicatorsWithDefaults instantiates a new KeyPerformanceIndicators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyPerformanceIndicatorsWithDefaults() *KeyPerformanceIndicators {
	this := KeyPerformanceIndicators{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *KeyPerformanceIndicators) SetId(v int64) {
	o.Id = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *KeyPerformanceIndicators) SetUid(v string) {
	o.Uid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KeyPerformanceIndicators) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KeyPerformanceIndicators) SetDescription(v string) {
	o.Description = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *KeyPerformanceIndicators) SetTarget(v string) {
	o.Target = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *KeyPerformanceIndicators) SetValue(v string) {
	o.Value = &v
}

// GetCompletionPercentage returns the CompletionPercentage field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetCompletionPercentage() string {
	if o == nil || IsNil(o.CompletionPercentage) {
		var ret string
		return ret
	}
	return *o.CompletionPercentage
}

// GetCompletionPercentageOk returns a tuple with the CompletionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetCompletionPercentageOk() (*string, bool) {
	if o == nil || IsNil(o.CompletionPercentage) {
		return nil, false
	}
	return o.CompletionPercentage, true
}

// HasCompletionPercentage returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasCompletionPercentage() bool {
	if o != nil && !IsNil(o.CompletionPercentage) {
		return true
	}

	return false
}

// SetCompletionPercentage gets a reference to the given string and assigns it to the CompletionPercentage field.
func (o *KeyPerformanceIndicators) SetCompletionPercentage(v string) {
	o.CompletionPercentage = &v
}

// GetSumValues returns the SumValues field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetSumValues() bool {
	if o == nil || IsNil(o.SumValues) {
		var ret bool
		return ret
	}
	return *o.SumValues
}

// GetSumValuesOk returns a tuple with the SumValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetSumValuesOk() (*bool, bool) {
	if o == nil || IsNil(o.SumValues) {
		return nil, false
	}
	return o.SumValues, true
}

// HasSumValues returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasSumValues() bool {
	if o != nil && !IsNil(o.SumValues) {
		return true
	}

	return false
}

// SetSumValues gets a reference to the given bool and assigns it to the SumValues field.
func (o *KeyPerformanceIndicators) SetSumValues(v bool) {
	o.SumValues = &v
}

// GetOwnerUserId returns the OwnerUserId field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetOwnerUserId() int64 {
	if o == nil || IsNil(o.OwnerUserId) {
		var ret int64
		return ret
	}
	return *o.OwnerUserId
}

// GetOwnerUserIdOk returns a tuple with the OwnerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetOwnerUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OwnerUserId) {
		return nil, false
	}
	return o.OwnerUserId, true
}

// HasOwnerUserId returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasOwnerUserId() bool {
	if o != nil && !IsNil(o.OwnerUserId) {
		return true
	}

	return false
}

// SetOwnerUserId gets a reference to the given int64 and assigns it to the OwnerUserId field.
func (o *KeyPerformanceIndicators) SetOwnerUserId(v int64) {
	o.OwnerUserId = &v
}

// GetExecutiveOwnerUserId returns the ExecutiveOwnerUserId field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetExecutiveOwnerUserId() int64 {
	if o == nil || IsNil(o.ExecutiveOwnerUserId) {
		var ret int64
		return ret
	}
	return *o.ExecutiveOwnerUserId
}

// GetExecutiveOwnerUserIdOk returns a tuple with the ExecutiveOwnerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetExecutiveOwnerUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ExecutiveOwnerUserId) {
		return nil, false
	}
	return o.ExecutiveOwnerUserId, true
}

// HasExecutiveOwnerUserId returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasExecutiveOwnerUserId() bool {
	if o != nil && !IsNil(o.ExecutiveOwnerUserId) {
		return true
	}

	return false
}

// SetExecutiveOwnerUserId gets a reference to the given int64 and assigns it to the ExecutiveOwnerUserId field.
func (o *KeyPerformanceIndicators) SetExecutiveOwnerUserId(v int64) {
	o.ExecutiveOwnerUserId = &v
}

// GetFieldData returns the FieldData field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetFieldData() map[string]interface{} {
	if o == nil || IsNil(o.FieldData) {
		var ret map[string]interface{}
		return ret
	}
	return o.FieldData
}

// GetFieldDataOk returns a tuple with the FieldData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetFieldDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FieldData) {
		return map[string]interface{}{}, false
	}
	return o.FieldData, true
}

// HasFieldData returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasFieldData() bool {
	if o != nil && !IsNil(o.FieldData) {
		return true
	}

	return false
}

// SetFieldData gets a reference to the given map[string]interface{} and assigns it to the FieldData field.
func (o *KeyPerformanceIndicators) SetFieldData(v map[string]interface{}) {
	o.FieldData = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *KeyPerformanceIndicators) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *KeyPerformanceIndicators) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *KeyPerformanceIndicators) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *KeyPerformanceIndicators) GetPermissions() map[string]interface{} {
	if o == nil || IsNil(o.Permissions) {
		var ret map[string]interface{}
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyPerformanceIndicators) GetPermissionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Permissions) {
		return map[string]interface{}{}, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *KeyPerformanceIndicators) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given map[string]interface{} and assigns it to the Permissions field.
func (o *KeyPerformanceIndicators) SetPermissions(v map[string]interface{}) {
	o.Permissions = v
}

func (o KeyPerformanceIndicators) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyPerformanceIndicators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.CompletionPercentage) {
		toSerialize["completion_percentage"] = o.CompletionPercentage
	}
	if !IsNil(o.SumValues) {
		toSerialize["sum_values"] = o.SumValues
	}
	if !IsNil(o.OwnerUserId) {
		toSerialize["owner_user_id"] = o.OwnerUserId
	}
	if !IsNil(o.ExecutiveOwnerUserId) {
		toSerialize["executive_owner_user_id"] = o.ExecutiveOwnerUserId
	}
	if !IsNil(o.FieldData) {
		toSerialize["field_data"] = o.FieldData
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.Permissions) {
		toSerialize["_permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableKeyPerformanceIndicators struct {
	value *KeyPerformanceIndicators
	isSet bool
}

func (v NullableKeyPerformanceIndicators) Get() *KeyPerformanceIndicators {
	return v.value
}

func (v *NullableKeyPerformanceIndicators) Set(val *KeyPerformanceIndicators) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyPerformanceIndicators) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyPerformanceIndicators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyPerformanceIndicators(val *KeyPerformanceIndicators) *NullableKeyPerformanceIndicators {
	return &NullableKeyPerformanceIndicators{value: val, isSet: true}
}

func (v NullableKeyPerformanceIndicators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyPerformanceIndicators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


