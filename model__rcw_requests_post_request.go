/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RcwRequestsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RcwRequestsPostRequest{}

// RcwRequestsPostRequest struct for RcwRequestsPostRequest
type RcwRequestsPostRequest struct {
	RcwRequest *RcwRequests `json:"rcw_request,omitempty"`
}

// NewRcwRequestsPostRequest instantiates a new RcwRequestsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRcwRequestsPostRequest() *RcwRequestsPostRequest {
	this := RcwRequestsPostRequest{}
	return &this
}

// NewRcwRequestsPostRequestWithDefaults instantiates a new RcwRequestsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRcwRequestsPostRequestWithDefaults() *RcwRequestsPostRequest {
	this := RcwRequestsPostRequest{}
	return &this
}

// GetRcwRequest returns the RcwRequest field value if set, zero value otherwise.
func (o *RcwRequestsPostRequest) GetRcwRequest() RcwRequests {
	if o == nil || IsNil(o.RcwRequest) {
		var ret RcwRequests
		return ret
	}
	return *o.RcwRequest
}

// GetRcwRequestOk returns a tuple with the RcwRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RcwRequestsPostRequest) GetRcwRequestOk() (*RcwRequests, bool) {
	if o == nil || IsNil(o.RcwRequest) {
		return nil, false
	}
	return o.RcwRequest, true
}

// HasRcwRequest returns a boolean if a field has been set.
func (o *RcwRequestsPostRequest) HasRcwRequest() bool {
	if o != nil && !IsNil(o.RcwRequest) {
		return true
	}

	return false
}

// SetRcwRequest gets a reference to the given RcwRequests and assigns it to the RcwRequest field.
func (o *RcwRequestsPostRequest) SetRcwRequest(v RcwRequests) {
	o.RcwRequest = &v
}

func (o RcwRequestsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RcwRequestsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RcwRequest) {
		toSerialize["rcw_request"] = o.RcwRequest
	}
	return toSerialize, nil
}

type NullableRcwRequestsPostRequest struct {
	value *RcwRequestsPostRequest
	isSet bool
}

func (v NullableRcwRequestsPostRequest) Get() *RcwRequestsPostRequest {
	return v.value
}

func (v *NullableRcwRequestsPostRequest) Set(val *RcwRequestsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRcwRequestsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRcwRequestsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRcwRequestsPostRequest(val *RcwRequestsPostRequest) *NullableRcwRequestsPostRequest {
	return &NullableRcwRequestsPostRequest{value: val, isSet: true}
}

func (v NullableRcwRequestsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRcwRequestsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


