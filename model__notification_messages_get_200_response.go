/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the NotificationMessagesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationMessagesGet200Response{}

// NotificationMessagesGet200Response struct for NotificationMessagesGet200Response
type NotificationMessagesGet200Response struct {
	NotificationMessages []NotificationMessages `json:"notification_messages,omitempty"`
}

// NewNotificationMessagesGet200Response instantiates a new NotificationMessagesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationMessagesGet200Response() *NotificationMessagesGet200Response {
	this := NotificationMessagesGet200Response{}
	return &this
}

// NewNotificationMessagesGet200ResponseWithDefaults instantiates a new NotificationMessagesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationMessagesGet200ResponseWithDefaults() *NotificationMessagesGet200Response {
	this := NotificationMessagesGet200Response{}
	return &this
}

// GetNotificationMessages returns the NotificationMessages field value if set, zero value otherwise.
func (o *NotificationMessagesGet200Response) GetNotificationMessages() []NotificationMessages {
	if o == nil || IsNil(o.NotificationMessages) {
		var ret []NotificationMessages
		return ret
	}
	return o.NotificationMessages
}

// GetNotificationMessagesOk returns a tuple with the NotificationMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationMessagesGet200Response) GetNotificationMessagesOk() ([]NotificationMessages, bool) {
	if o == nil || IsNil(o.NotificationMessages) {
		return nil, false
	}
	return o.NotificationMessages, true
}

// HasNotificationMessages returns a boolean if a field has been set.
func (o *NotificationMessagesGet200Response) HasNotificationMessages() bool {
	if o != nil && !IsNil(o.NotificationMessages) {
		return true
	}

	return false
}

// SetNotificationMessages gets a reference to the given []NotificationMessages and assigns it to the NotificationMessages field.
func (o *NotificationMessagesGet200Response) SetNotificationMessages(v []NotificationMessages) {
	o.NotificationMessages = v
}

func (o NotificationMessagesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationMessagesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NotificationMessages) {
		toSerialize["notification_messages"] = o.NotificationMessages
	}
	return toSerialize, nil
}

type NullableNotificationMessagesGet200Response struct {
	value *NotificationMessagesGet200Response
	isSet bool
}

func (v NullableNotificationMessagesGet200Response) Get() *NotificationMessagesGet200Response {
	return v.value
}

func (v *NullableNotificationMessagesGet200Response) Set(val *NotificationMessagesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationMessagesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationMessagesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationMessagesGet200Response(val *NotificationMessagesGet200Response) *NullableNotificationMessagesGet200Response {
	return &NullableNotificationMessagesGet200Response{value: val, isSet: true}
}

func (v NullableNotificationMessagesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationMessagesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


