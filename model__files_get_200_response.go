/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the FilesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesGet200Response{}

// FilesGet200Response struct for FilesGet200Response
type FilesGet200Response struct {
	Files []Files `json:"files,omitempty"`
}

// NewFilesGet200Response instantiates a new FilesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesGet200Response() *FilesGet200Response {
	this := FilesGet200Response{}
	return &this
}

// NewFilesGet200ResponseWithDefaults instantiates a new FilesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesGet200ResponseWithDefaults() *FilesGet200Response {
	this := FilesGet200Response{}
	return &this
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *FilesGet200Response) GetFiles() []Files {
	if o == nil || IsNil(o.Files) {
		var ret []Files
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesGet200Response) GetFilesOk() ([]Files, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *FilesGet200Response) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []Files and assigns it to the Files field.
func (o *FilesGet200Response) SetFiles(v []Files) {
	o.Files = v
}

func (o FilesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	return toSerialize, nil
}

type NullableFilesGet200Response struct {
	value *FilesGet200Response
	isSet bool
}

func (v NullableFilesGet200Response) Get() *FilesGet200Response {
	return v.value
}

func (v *NullableFilesGet200Response) Set(val *FilesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesGet200Response(val *FilesGet200Response) *NullableFilesGet200Response {
	return &NullableFilesGet200Response{value: val, isSet: true}
}

func (v NullableFilesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


