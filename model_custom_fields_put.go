/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the CustomFieldsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomFieldsPut{}

// CustomFieldsPut struct for CustomFieldsPut
type CustomFieldsPut struct {
	CustomField *CustomFieldsPutCustomField `json:"custom_field,omitempty"`
	PreviousValues *CustomFieldsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewCustomFieldsPut instantiates a new CustomFieldsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomFieldsPut() *CustomFieldsPut {
	this := CustomFieldsPut{}
	return &this
}

// NewCustomFieldsPutWithDefaults instantiates a new CustomFieldsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFieldsPutWithDefaults() *CustomFieldsPut {
	this := CustomFieldsPut{}
	return &this
}

// GetCustomField returns the CustomField field value if set, zero value otherwise.
func (o *CustomFieldsPut) GetCustomField() CustomFieldsPutCustomField {
	if o == nil || IsNil(o.CustomField) {
		var ret CustomFieldsPutCustomField
		return ret
	}
	return *o.CustomField
}

// GetCustomFieldOk returns a tuple with the CustomField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldsPut) GetCustomFieldOk() (*CustomFieldsPutCustomField, bool) {
	if o == nil || IsNil(o.CustomField) {
		return nil, false
	}
	return o.CustomField, true
}

// HasCustomField returns a boolean if a field has been set.
func (o *CustomFieldsPut) HasCustomField() bool {
	if o != nil && !IsNil(o.CustomField) {
		return true
	}

	return false
}

// SetCustomField gets a reference to the given CustomFieldsPutCustomField and assigns it to the CustomField field.
func (o *CustomFieldsPut) SetCustomField(v CustomFieldsPutCustomField) {
	o.CustomField = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *CustomFieldsPut) GetPreviousValues() CustomFieldsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret CustomFieldsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldsPut) GetPreviousValuesOk() (*CustomFieldsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *CustomFieldsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given CustomFieldsPutPreviousValues and assigns it to the PreviousValues field.
func (o *CustomFieldsPut) SetPreviousValues(v CustomFieldsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o CustomFieldsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomFieldsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomField) {
		toSerialize["custom_field"] = o.CustomField
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableCustomFieldsPut struct {
	value *CustomFieldsPut
	isSet bool
}

func (v NullableCustomFieldsPut) Get() *CustomFieldsPut {
	return v.value
}

func (v *NullableCustomFieldsPut) Set(val *CustomFieldsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFieldsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFieldsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFieldsPut(val *CustomFieldsPut) *NullableCustomFieldsPut {
	return &NullableCustomFieldsPut{value: val, isSet: true}
}

func (v NullableCustomFieldsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFieldsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


