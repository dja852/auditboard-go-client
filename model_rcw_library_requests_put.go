/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RcwLibraryRequestsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RcwLibraryRequestsPut{}

// RcwLibraryRequestsPut struct for RcwLibraryRequestsPut
type RcwLibraryRequestsPut struct {
	RcwLibraryRequest *RcwLibraryRequestsPutRcwLibraryRequest `json:"rcw_library_request,omitempty"`
	PreviousValues *RcwLibraryRequestsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewRcwLibraryRequestsPut instantiates a new RcwLibraryRequestsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRcwLibraryRequestsPut() *RcwLibraryRequestsPut {
	this := RcwLibraryRequestsPut{}
	return &this
}

// NewRcwLibraryRequestsPutWithDefaults instantiates a new RcwLibraryRequestsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRcwLibraryRequestsPutWithDefaults() *RcwLibraryRequestsPut {
	this := RcwLibraryRequestsPut{}
	return &this
}

// GetRcwLibraryRequest returns the RcwLibraryRequest field value if set, zero value otherwise.
func (o *RcwLibraryRequestsPut) GetRcwLibraryRequest() RcwLibraryRequestsPutRcwLibraryRequest {
	if o == nil || IsNil(o.RcwLibraryRequest) {
		var ret RcwLibraryRequestsPutRcwLibraryRequest
		return ret
	}
	return *o.RcwLibraryRequest
}

// GetRcwLibraryRequestOk returns a tuple with the RcwLibraryRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RcwLibraryRequestsPut) GetRcwLibraryRequestOk() (*RcwLibraryRequestsPutRcwLibraryRequest, bool) {
	if o == nil || IsNil(o.RcwLibraryRequest) {
		return nil, false
	}
	return o.RcwLibraryRequest, true
}

// HasRcwLibraryRequest returns a boolean if a field has been set.
func (o *RcwLibraryRequestsPut) HasRcwLibraryRequest() bool {
	if o != nil && !IsNil(o.RcwLibraryRequest) {
		return true
	}

	return false
}

// SetRcwLibraryRequest gets a reference to the given RcwLibraryRequestsPutRcwLibraryRequest and assigns it to the RcwLibraryRequest field.
func (o *RcwLibraryRequestsPut) SetRcwLibraryRequest(v RcwLibraryRequestsPutRcwLibraryRequest) {
	o.RcwLibraryRequest = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *RcwLibraryRequestsPut) GetPreviousValues() RcwLibraryRequestsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret RcwLibraryRequestsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RcwLibraryRequestsPut) GetPreviousValuesOk() (*RcwLibraryRequestsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *RcwLibraryRequestsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given RcwLibraryRequestsPutPreviousValues and assigns it to the PreviousValues field.
func (o *RcwLibraryRequestsPut) SetPreviousValues(v RcwLibraryRequestsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o RcwLibraryRequestsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RcwLibraryRequestsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RcwLibraryRequest) {
		toSerialize["rcw_library_request"] = o.RcwLibraryRequest
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableRcwLibraryRequestsPut struct {
	value *RcwLibraryRequestsPut
	isSet bool
}

func (v NullableRcwLibraryRequestsPut) Get() *RcwLibraryRequestsPut {
	return v.value
}

func (v *NullableRcwLibraryRequestsPut) Set(val *RcwLibraryRequestsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableRcwLibraryRequestsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableRcwLibraryRequestsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRcwLibraryRequestsPut(val *RcwLibraryRequestsPut) *NullableRcwLibraryRequestsPut {
	return &NullableRcwLibraryRequestsPut{value: val, isSet: true}
}

func (v NullableRcwLibraryRequestsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRcwLibraryRequestsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


