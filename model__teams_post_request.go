/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TeamsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamsPostRequest{}

// TeamsPostRequest struct for TeamsPostRequest
type TeamsPostRequest struct {
	Team *Teams `json:"team,omitempty"`
}

// NewTeamsPostRequest instantiates a new TeamsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamsPostRequest() *TeamsPostRequest {
	this := TeamsPostRequest{}
	return &this
}

// NewTeamsPostRequestWithDefaults instantiates a new TeamsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamsPostRequestWithDefaults() *TeamsPostRequest {
	this := TeamsPostRequest{}
	return &this
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *TeamsPostRequest) GetTeam() Teams {
	if o == nil || IsNil(o.Team) {
		var ret Teams
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamsPostRequest) GetTeamOk() (*Teams, bool) {
	if o == nil || IsNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *TeamsPostRequest) HasTeam() bool {
	if o != nil && !IsNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given Teams and assigns it to the Team field.
func (o *TeamsPostRequest) SetTeam(v Teams) {
	o.Team = &v
}

func (o TeamsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	return toSerialize, nil
}

type NullableTeamsPostRequest struct {
	value *TeamsPostRequest
	isSet bool
}

func (v NullableTeamsPostRequest) Get() *TeamsPostRequest {
	return v.value
}

func (v *NullableTeamsPostRequest) Set(val *TeamsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamsPostRequest(val *TeamsPostRequest) *NullableTeamsPostRequest {
	return &NullableTeamsPostRequest{value: val, isSet: true}
}

func (v NullableTeamsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


