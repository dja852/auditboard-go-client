/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the KeyRiskIndicators type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyRiskIndicators{}

// KeyRiskIndicators struct for KeyRiskIndicators
type KeyRiskIndicators struct {
	CustomDate1 *string `json:"custom_date1,omitempty"`
	LinkifyUid *string `json:"linkify_uid,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Uid *string `json:"uid,omitempty"`
	Name *string `json:"name,omitempty"`
	Status *string `json:"status,omitempty"`
	PriorStatus *string `json:"prior_status,omitempty"`
	Description *string `json:"description,omitempty"`
	OwnerUserId *int64 `json:"owner_user_id,omitempty"`
	ExecutiveOwnerUserId *int64 `json:"executive_owner_user_id,omitempty"`
	CustomUserSelect1UserId *int64 `json:"custom_user_select1_user_id,omitempty"`
	Formula *string `json:"formula,omitempty"`
	FormulaData map[string]interface{} `json:"formula_data,omitempty"`
	Brackets []int32 `json:"brackets,omitempty"`
	CurrentValue *string `json:"current_value,omitempty"`
	NormalizedCurrentValue *string `json:"normalized_current_value,omitempty"`
	PriorValue *string `json:"prior_value,omitempty"`
	NormalizedPriorValue *string `json:"normalized_prior_value,omitempty"`
	ValueLastUpdated *string `json:"value_last_updated,omitempty"`
	KriCustomSelect1OptionId *int32 `json:"kri_custom_select1_option_id,omitempty"`
	KriCustomSelect2OptionId *int32 `json:"kri_custom_select2_option_id,omitempty"`
	KriCustomSelect3OptionId *int32 `json:"kri_custom_select3_option_id,omitempty"`
	KriCustomSelect4OptionId *int32 `json:"kri_custom_select4_option_id,omitempty"`
	KriCustomSelect5OptionId *int32 `json:"kri_custom_select5_option_id,omitempty"`
	CustomText1 *string `json:"custom_text1,omitempty"`
	CustomText2 *string `json:"custom_text2,omitempty"`
	CustomText3 *string `json:"custom_text3,omitempty"`
	CustomText4 *string `json:"custom_text4,omitempty"`
	CustomText5 *string `json:"custom_text5,omitempty"`
	NeedsUpdate *bool `json:"needs_update,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	Permissions map[string]interface{} `json:"_permissions,omitempty"`
}

// NewKeyRiskIndicators instantiates a new KeyRiskIndicators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyRiskIndicators() *KeyRiskIndicators {
	this := KeyRiskIndicators{}
	return &this
}

// NewKeyRiskIndicatorsWithDefaults instantiates a new KeyRiskIndicators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyRiskIndicatorsWithDefaults() *KeyRiskIndicators {
	this := KeyRiskIndicators{}
	return &this
}

// GetCustomDate1 returns the CustomDate1 field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetCustomDate1() string {
	if o == nil || IsNil(o.CustomDate1) {
		var ret string
		return ret
	}
	return *o.CustomDate1
}

// GetCustomDate1Ok returns a tuple with the CustomDate1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetCustomDate1Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomDate1) {
		return nil, false
	}
	return o.CustomDate1, true
}

// HasCustomDate1 returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasCustomDate1() bool {
	if o != nil && !IsNil(o.CustomDate1) {
		return true
	}

	return false
}

// SetCustomDate1 gets a reference to the given string and assigns it to the CustomDate1 field.
func (o *KeyRiskIndicators) SetCustomDate1(v string) {
	o.CustomDate1 = &v
}

// GetLinkifyUid returns the LinkifyUid field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetLinkifyUid() string {
	if o == nil || IsNil(o.LinkifyUid) {
		var ret string
		return ret
	}
	return *o.LinkifyUid
}

// GetLinkifyUidOk returns a tuple with the LinkifyUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetLinkifyUidOk() (*string, bool) {
	if o == nil || IsNil(o.LinkifyUid) {
		return nil, false
	}
	return o.LinkifyUid, true
}

// HasLinkifyUid returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasLinkifyUid() bool {
	if o != nil && !IsNil(o.LinkifyUid) {
		return true
	}

	return false
}

// SetLinkifyUid gets a reference to the given string and assigns it to the LinkifyUid field.
func (o *KeyRiskIndicators) SetLinkifyUid(v string) {
	o.LinkifyUid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *KeyRiskIndicators) SetId(v int64) {
	o.Id = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *KeyRiskIndicators) SetUid(v string) {
	o.Uid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KeyRiskIndicators) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *KeyRiskIndicators) SetStatus(v string) {
	o.Status = &v
}

// GetPriorStatus returns the PriorStatus field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetPriorStatus() string {
	if o == nil || IsNil(o.PriorStatus) {
		var ret string
		return ret
	}
	return *o.PriorStatus
}

// GetPriorStatusOk returns a tuple with the PriorStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetPriorStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PriorStatus) {
		return nil, false
	}
	return o.PriorStatus, true
}

// HasPriorStatus returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasPriorStatus() bool {
	if o != nil && !IsNil(o.PriorStatus) {
		return true
	}

	return false
}

// SetPriorStatus gets a reference to the given string and assigns it to the PriorStatus field.
func (o *KeyRiskIndicators) SetPriorStatus(v string) {
	o.PriorStatus = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KeyRiskIndicators) SetDescription(v string) {
	o.Description = &v
}

// GetOwnerUserId returns the OwnerUserId field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetOwnerUserId() int64 {
	if o == nil || IsNil(o.OwnerUserId) {
		var ret int64
		return ret
	}
	return *o.OwnerUserId
}

// GetOwnerUserIdOk returns a tuple with the OwnerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetOwnerUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OwnerUserId) {
		return nil, false
	}
	return o.OwnerUserId, true
}

// HasOwnerUserId returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasOwnerUserId() bool {
	if o != nil && !IsNil(o.OwnerUserId) {
		return true
	}

	return false
}

// SetOwnerUserId gets a reference to the given int64 and assigns it to the OwnerUserId field.
func (o *KeyRiskIndicators) SetOwnerUserId(v int64) {
	o.OwnerUserId = &v
}

// GetExecutiveOwnerUserId returns the ExecutiveOwnerUserId field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetExecutiveOwnerUserId() int64 {
	if o == nil || IsNil(o.ExecutiveOwnerUserId) {
		var ret int64
		return ret
	}
	return *o.ExecutiveOwnerUserId
}

// GetExecutiveOwnerUserIdOk returns a tuple with the ExecutiveOwnerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetExecutiveOwnerUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ExecutiveOwnerUserId) {
		return nil, false
	}
	return o.ExecutiveOwnerUserId, true
}

// HasExecutiveOwnerUserId returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasExecutiveOwnerUserId() bool {
	if o != nil && !IsNil(o.ExecutiveOwnerUserId) {
		return true
	}

	return false
}

// SetExecutiveOwnerUserId gets a reference to the given int64 and assigns it to the ExecutiveOwnerUserId field.
func (o *KeyRiskIndicators) SetExecutiveOwnerUserId(v int64) {
	o.ExecutiveOwnerUserId = &v
}

// GetCustomUserSelect1UserId returns the CustomUserSelect1UserId field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetCustomUserSelect1UserId() int64 {
	if o == nil || IsNil(o.CustomUserSelect1UserId) {
		var ret int64
		return ret
	}
	return *o.CustomUserSelect1UserId
}

// GetCustomUserSelect1UserIdOk returns a tuple with the CustomUserSelect1UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetCustomUserSelect1UserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CustomUserSelect1UserId) {
		return nil, false
	}
	return o.CustomUserSelect1UserId, true
}

// HasCustomUserSelect1UserId returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasCustomUserSelect1UserId() bool {
	if o != nil && !IsNil(o.CustomUserSelect1UserId) {
		return true
	}

	return false
}

// SetCustomUserSelect1UserId gets a reference to the given int64 and assigns it to the CustomUserSelect1UserId field.
func (o *KeyRiskIndicators) SetCustomUserSelect1UserId(v int64) {
	o.CustomUserSelect1UserId = &v
}

// GetFormula returns the Formula field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetFormula() string {
	if o == nil || IsNil(o.Formula) {
		var ret string
		return ret
	}
	return *o.Formula
}

// GetFormulaOk returns a tuple with the Formula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetFormulaOk() (*string, bool) {
	if o == nil || IsNil(o.Formula) {
		return nil, false
	}
	return o.Formula, true
}

// HasFormula returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasFormula() bool {
	if o != nil && !IsNil(o.Formula) {
		return true
	}

	return false
}

// SetFormula gets a reference to the given string and assigns it to the Formula field.
func (o *KeyRiskIndicators) SetFormula(v string) {
	o.Formula = &v
}

// GetFormulaData returns the FormulaData field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetFormulaData() map[string]interface{} {
	if o == nil || IsNil(o.FormulaData) {
		var ret map[string]interface{}
		return ret
	}
	return o.FormulaData
}

// GetFormulaDataOk returns a tuple with the FormulaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetFormulaDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FormulaData) {
		return map[string]interface{}{}, false
	}
	return o.FormulaData, true
}

// HasFormulaData returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasFormulaData() bool {
	if o != nil && !IsNil(o.FormulaData) {
		return true
	}

	return false
}

// SetFormulaData gets a reference to the given map[string]interface{} and assigns it to the FormulaData field.
func (o *KeyRiskIndicators) SetFormulaData(v map[string]interface{}) {
	o.FormulaData = v
}

// GetBrackets returns the Brackets field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetBrackets() []int32 {
	if o == nil || IsNil(o.Brackets) {
		var ret []int32
		return ret
	}
	return o.Brackets
}

// GetBracketsOk returns a tuple with the Brackets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetBracketsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Brackets) {
		return nil, false
	}
	return o.Brackets, true
}

// HasBrackets returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasBrackets() bool {
	if o != nil && !IsNil(o.Brackets) {
		return true
	}

	return false
}

// SetBrackets gets a reference to the given []int32 and assigns it to the Brackets field.
func (o *KeyRiskIndicators) SetBrackets(v []int32) {
	o.Brackets = v
}

// GetCurrentValue returns the CurrentValue field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetCurrentValue() string {
	if o == nil || IsNil(o.CurrentValue) {
		var ret string
		return ret
	}
	return *o.CurrentValue
}

// GetCurrentValueOk returns a tuple with the CurrentValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetCurrentValueOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentValue) {
		return nil, false
	}
	return o.CurrentValue, true
}

// HasCurrentValue returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasCurrentValue() bool {
	if o != nil && !IsNil(o.CurrentValue) {
		return true
	}

	return false
}

// SetCurrentValue gets a reference to the given string and assigns it to the CurrentValue field.
func (o *KeyRiskIndicators) SetCurrentValue(v string) {
	o.CurrentValue = &v
}

// GetNormalizedCurrentValue returns the NormalizedCurrentValue field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetNormalizedCurrentValue() string {
	if o == nil || IsNil(o.NormalizedCurrentValue) {
		var ret string
		return ret
	}
	return *o.NormalizedCurrentValue
}

// GetNormalizedCurrentValueOk returns a tuple with the NormalizedCurrentValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetNormalizedCurrentValueOk() (*string, bool) {
	if o == nil || IsNil(o.NormalizedCurrentValue) {
		return nil, false
	}
	return o.NormalizedCurrentValue, true
}

// HasNormalizedCurrentValue returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasNormalizedCurrentValue() bool {
	if o != nil && !IsNil(o.NormalizedCurrentValue) {
		return true
	}

	return false
}

// SetNormalizedCurrentValue gets a reference to the given string and assigns it to the NormalizedCurrentValue field.
func (o *KeyRiskIndicators) SetNormalizedCurrentValue(v string) {
	o.NormalizedCurrentValue = &v
}

// GetPriorValue returns the PriorValue field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetPriorValue() string {
	if o == nil || IsNil(o.PriorValue) {
		var ret string
		return ret
	}
	return *o.PriorValue
}

// GetPriorValueOk returns a tuple with the PriorValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetPriorValueOk() (*string, bool) {
	if o == nil || IsNil(o.PriorValue) {
		return nil, false
	}
	return o.PriorValue, true
}

// HasPriorValue returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasPriorValue() bool {
	if o != nil && !IsNil(o.PriorValue) {
		return true
	}

	return false
}

// SetPriorValue gets a reference to the given string and assigns it to the PriorValue field.
func (o *KeyRiskIndicators) SetPriorValue(v string) {
	o.PriorValue = &v
}

// GetNormalizedPriorValue returns the NormalizedPriorValue field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetNormalizedPriorValue() string {
	if o == nil || IsNil(o.NormalizedPriorValue) {
		var ret string
		return ret
	}
	return *o.NormalizedPriorValue
}

// GetNormalizedPriorValueOk returns a tuple with the NormalizedPriorValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetNormalizedPriorValueOk() (*string, bool) {
	if o == nil || IsNil(o.NormalizedPriorValue) {
		return nil, false
	}
	return o.NormalizedPriorValue, true
}

// HasNormalizedPriorValue returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasNormalizedPriorValue() bool {
	if o != nil && !IsNil(o.NormalizedPriorValue) {
		return true
	}

	return false
}

// SetNormalizedPriorValue gets a reference to the given string and assigns it to the NormalizedPriorValue field.
func (o *KeyRiskIndicators) SetNormalizedPriorValue(v string) {
	o.NormalizedPriorValue = &v
}

// GetValueLastUpdated returns the ValueLastUpdated field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetValueLastUpdated() string {
	if o == nil || IsNil(o.ValueLastUpdated) {
		var ret string
		return ret
	}
	return *o.ValueLastUpdated
}

// GetValueLastUpdatedOk returns a tuple with the ValueLastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetValueLastUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.ValueLastUpdated) {
		return nil, false
	}
	return o.ValueLastUpdated, true
}

// HasValueLastUpdated returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasValueLastUpdated() bool {
	if o != nil && !IsNil(o.ValueLastUpdated) {
		return true
	}

	return false
}

// SetValueLastUpdated gets a reference to the given string and assigns it to the ValueLastUpdated field.
func (o *KeyRiskIndicators) SetValueLastUpdated(v string) {
	o.ValueLastUpdated = &v
}

// GetKriCustomSelect1OptionId returns the KriCustomSelect1OptionId field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetKriCustomSelect1OptionId() int32 {
	if o == nil || IsNil(o.KriCustomSelect1OptionId) {
		var ret int32
		return ret
	}
	return *o.KriCustomSelect1OptionId
}

// GetKriCustomSelect1OptionIdOk returns a tuple with the KriCustomSelect1OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetKriCustomSelect1OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.KriCustomSelect1OptionId) {
		return nil, false
	}
	return o.KriCustomSelect1OptionId, true
}

// HasKriCustomSelect1OptionId returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasKriCustomSelect1OptionId() bool {
	if o != nil && !IsNil(o.KriCustomSelect1OptionId) {
		return true
	}

	return false
}

// SetKriCustomSelect1OptionId gets a reference to the given int32 and assigns it to the KriCustomSelect1OptionId field.
func (o *KeyRiskIndicators) SetKriCustomSelect1OptionId(v int32) {
	o.KriCustomSelect1OptionId = &v
}

// GetKriCustomSelect2OptionId returns the KriCustomSelect2OptionId field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetKriCustomSelect2OptionId() int32 {
	if o == nil || IsNil(o.KriCustomSelect2OptionId) {
		var ret int32
		return ret
	}
	return *o.KriCustomSelect2OptionId
}

// GetKriCustomSelect2OptionIdOk returns a tuple with the KriCustomSelect2OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetKriCustomSelect2OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.KriCustomSelect2OptionId) {
		return nil, false
	}
	return o.KriCustomSelect2OptionId, true
}

// HasKriCustomSelect2OptionId returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasKriCustomSelect2OptionId() bool {
	if o != nil && !IsNil(o.KriCustomSelect2OptionId) {
		return true
	}

	return false
}

// SetKriCustomSelect2OptionId gets a reference to the given int32 and assigns it to the KriCustomSelect2OptionId field.
func (o *KeyRiskIndicators) SetKriCustomSelect2OptionId(v int32) {
	o.KriCustomSelect2OptionId = &v
}

// GetKriCustomSelect3OptionId returns the KriCustomSelect3OptionId field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetKriCustomSelect3OptionId() int32 {
	if o == nil || IsNil(o.KriCustomSelect3OptionId) {
		var ret int32
		return ret
	}
	return *o.KriCustomSelect3OptionId
}

// GetKriCustomSelect3OptionIdOk returns a tuple with the KriCustomSelect3OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetKriCustomSelect3OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.KriCustomSelect3OptionId) {
		return nil, false
	}
	return o.KriCustomSelect3OptionId, true
}

// HasKriCustomSelect3OptionId returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasKriCustomSelect3OptionId() bool {
	if o != nil && !IsNil(o.KriCustomSelect3OptionId) {
		return true
	}

	return false
}

// SetKriCustomSelect3OptionId gets a reference to the given int32 and assigns it to the KriCustomSelect3OptionId field.
func (o *KeyRiskIndicators) SetKriCustomSelect3OptionId(v int32) {
	o.KriCustomSelect3OptionId = &v
}

// GetKriCustomSelect4OptionId returns the KriCustomSelect4OptionId field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetKriCustomSelect4OptionId() int32 {
	if o == nil || IsNil(o.KriCustomSelect4OptionId) {
		var ret int32
		return ret
	}
	return *o.KriCustomSelect4OptionId
}

// GetKriCustomSelect4OptionIdOk returns a tuple with the KriCustomSelect4OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetKriCustomSelect4OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.KriCustomSelect4OptionId) {
		return nil, false
	}
	return o.KriCustomSelect4OptionId, true
}

// HasKriCustomSelect4OptionId returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasKriCustomSelect4OptionId() bool {
	if o != nil && !IsNil(o.KriCustomSelect4OptionId) {
		return true
	}

	return false
}

// SetKriCustomSelect4OptionId gets a reference to the given int32 and assigns it to the KriCustomSelect4OptionId field.
func (o *KeyRiskIndicators) SetKriCustomSelect4OptionId(v int32) {
	o.KriCustomSelect4OptionId = &v
}

// GetKriCustomSelect5OptionId returns the KriCustomSelect5OptionId field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetKriCustomSelect5OptionId() int32 {
	if o == nil || IsNil(o.KriCustomSelect5OptionId) {
		var ret int32
		return ret
	}
	return *o.KriCustomSelect5OptionId
}

// GetKriCustomSelect5OptionIdOk returns a tuple with the KriCustomSelect5OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetKriCustomSelect5OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.KriCustomSelect5OptionId) {
		return nil, false
	}
	return o.KriCustomSelect5OptionId, true
}

// HasKriCustomSelect5OptionId returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasKriCustomSelect5OptionId() bool {
	if o != nil && !IsNil(o.KriCustomSelect5OptionId) {
		return true
	}

	return false
}

// SetKriCustomSelect5OptionId gets a reference to the given int32 and assigns it to the KriCustomSelect5OptionId field.
func (o *KeyRiskIndicators) SetKriCustomSelect5OptionId(v int32) {
	o.KriCustomSelect5OptionId = &v
}

// GetCustomText1 returns the CustomText1 field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetCustomText1() string {
	if o == nil || IsNil(o.CustomText1) {
		var ret string
		return ret
	}
	return *o.CustomText1
}

// GetCustomText1Ok returns a tuple with the CustomText1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetCustomText1Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText1) {
		return nil, false
	}
	return o.CustomText1, true
}

// HasCustomText1 returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasCustomText1() bool {
	if o != nil && !IsNil(o.CustomText1) {
		return true
	}

	return false
}

// SetCustomText1 gets a reference to the given string and assigns it to the CustomText1 field.
func (o *KeyRiskIndicators) SetCustomText1(v string) {
	o.CustomText1 = &v
}

// GetCustomText2 returns the CustomText2 field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetCustomText2() string {
	if o == nil || IsNil(o.CustomText2) {
		var ret string
		return ret
	}
	return *o.CustomText2
}

// GetCustomText2Ok returns a tuple with the CustomText2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetCustomText2Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText2) {
		return nil, false
	}
	return o.CustomText2, true
}

// HasCustomText2 returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasCustomText2() bool {
	if o != nil && !IsNil(o.CustomText2) {
		return true
	}

	return false
}

// SetCustomText2 gets a reference to the given string and assigns it to the CustomText2 field.
func (o *KeyRiskIndicators) SetCustomText2(v string) {
	o.CustomText2 = &v
}

// GetCustomText3 returns the CustomText3 field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetCustomText3() string {
	if o == nil || IsNil(o.CustomText3) {
		var ret string
		return ret
	}
	return *o.CustomText3
}

// GetCustomText3Ok returns a tuple with the CustomText3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetCustomText3Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText3) {
		return nil, false
	}
	return o.CustomText3, true
}

// HasCustomText3 returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasCustomText3() bool {
	if o != nil && !IsNil(o.CustomText3) {
		return true
	}

	return false
}

// SetCustomText3 gets a reference to the given string and assigns it to the CustomText3 field.
func (o *KeyRiskIndicators) SetCustomText3(v string) {
	o.CustomText3 = &v
}

// GetCustomText4 returns the CustomText4 field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetCustomText4() string {
	if o == nil || IsNil(o.CustomText4) {
		var ret string
		return ret
	}
	return *o.CustomText4
}

// GetCustomText4Ok returns a tuple with the CustomText4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetCustomText4Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText4) {
		return nil, false
	}
	return o.CustomText4, true
}

// HasCustomText4 returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasCustomText4() bool {
	if o != nil && !IsNil(o.CustomText4) {
		return true
	}

	return false
}

// SetCustomText4 gets a reference to the given string and assigns it to the CustomText4 field.
func (o *KeyRiskIndicators) SetCustomText4(v string) {
	o.CustomText4 = &v
}

// GetCustomText5 returns the CustomText5 field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetCustomText5() string {
	if o == nil || IsNil(o.CustomText5) {
		var ret string
		return ret
	}
	return *o.CustomText5
}

// GetCustomText5Ok returns a tuple with the CustomText5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetCustomText5Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText5) {
		return nil, false
	}
	return o.CustomText5, true
}

// HasCustomText5 returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasCustomText5() bool {
	if o != nil && !IsNil(o.CustomText5) {
		return true
	}

	return false
}

// SetCustomText5 gets a reference to the given string and assigns it to the CustomText5 field.
func (o *KeyRiskIndicators) SetCustomText5(v string) {
	o.CustomText5 = &v
}

// GetNeedsUpdate returns the NeedsUpdate field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetNeedsUpdate() bool {
	if o == nil || IsNil(o.NeedsUpdate) {
		var ret bool
		return ret
	}
	return *o.NeedsUpdate
}

// GetNeedsUpdateOk returns a tuple with the NeedsUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetNeedsUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.NeedsUpdate) {
		return nil, false
	}
	return o.NeedsUpdate, true
}

// HasNeedsUpdate returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasNeedsUpdate() bool {
	if o != nil && !IsNil(o.NeedsUpdate) {
		return true
	}

	return false
}

// SetNeedsUpdate gets a reference to the given bool and assigns it to the NeedsUpdate field.
func (o *KeyRiskIndicators) SetNeedsUpdate(v bool) {
	o.NeedsUpdate = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *KeyRiskIndicators) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *KeyRiskIndicators) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *KeyRiskIndicators) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *KeyRiskIndicators) GetPermissions() map[string]interface{} {
	if o == nil || IsNil(o.Permissions) {
		var ret map[string]interface{}
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRiskIndicators) GetPermissionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Permissions) {
		return map[string]interface{}{}, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *KeyRiskIndicators) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given map[string]interface{} and assigns it to the Permissions field.
func (o *KeyRiskIndicators) SetPermissions(v map[string]interface{}) {
	o.Permissions = v
}

func (o KeyRiskIndicators) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyRiskIndicators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomDate1) {
		toSerialize["custom_date1"] = o.CustomDate1
	}
	if !IsNil(o.LinkifyUid) {
		toSerialize["linkify_uid"] = o.LinkifyUid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.PriorStatus) {
		toSerialize["prior_status"] = o.PriorStatus
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.OwnerUserId) {
		toSerialize["owner_user_id"] = o.OwnerUserId
	}
	if !IsNil(o.ExecutiveOwnerUserId) {
		toSerialize["executive_owner_user_id"] = o.ExecutiveOwnerUserId
	}
	if !IsNil(o.CustomUserSelect1UserId) {
		toSerialize["custom_user_select1_user_id"] = o.CustomUserSelect1UserId
	}
	if !IsNil(o.Formula) {
		toSerialize["formula"] = o.Formula
	}
	if !IsNil(o.FormulaData) {
		toSerialize["formula_data"] = o.FormulaData
	}
	if !IsNil(o.Brackets) {
		toSerialize["brackets"] = o.Brackets
	}
	if !IsNil(o.CurrentValue) {
		toSerialize["current_value"] = o.CurrentValue
	}
	if !IsNil(o.NormalizedCurrentValue) {
		toSerialize["normalized_current_value"] = o.NormalizedCurrentValue
	}
	if !IsNil(o.PriorValue) {
		toSerialize["prior_value"] = o.PriorValue
	}
	if !IsNil(o.NormalizedPriorValue) {
		toSerialize["normalized_prior_value"] = o.NormalizedPriorValue
	}
	if !IsNil(o.ValueLastUpdated) {
		toSerialize["value_last_updated"] = o.ValueLastUpdated
	}
	if !IsNil(o.KriCustomSelect1OptionId) {
		toSerialize["kri_custom_select1_option_id"] = o.KriCustomSelect1OptionId
	}
	if !IsNil(o.KriCustomSelect2OptionId) {
		toSerialize["kri_custom_select2_option_id"] = o.KriCustomSelect2OptionId
	}
	if !IsNil(o.KriCustomSelect3OptionId) {
		toSerialize["kri_custom_select3_option_id"] = o.KriCustomSelect3OptionId
	}
	if !IsNil(o.KriCustomSelect4OptionId) {
		toSerialize["kri_custom_select4_option_id"] = o.KriCustomSelect4OptionId
	}
	if !IsNil(o.KriCustomSelect5OptionId) {
		toSerialize["kri_custom_select5_option_id"] = o.KriCustomSelect5OptionId
	}
	if !IsNil(o.CustomText1) {
		toSerialize["custom_text1"] = o.CustomText1
	}
	if !IsNil(o.CustomText2) {
		toSerialize["custom_text2"] = o.CustomText2
	}
	if !IsNil(o.CustomText3) {
		toSerialize["custom_text3"] = o.CustomText3
	}
	if !IsNil(o.CustomText4) {
		toSerialize["custom_text4"] = o.CustomText4
	}
	if !IsNil(o.CustomText5) {
		toSerialize["custom_text5"] = o.CustomText5
	}
	if !IsNil(o.NeedsUpdate) {
		toSerialize["needs_update"] = o.NeedsUpdate
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.Permissions) {
		toSerialize["_permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableKeyRiskIndicators struct {
	value *KeyRiskIndicators
	isSet bool
}

func (v NullableKeyRiskIndicators) Get() *KeyRiskIndicators {
	return v.value
}

func (v *NullableKeyRiskIndicators) Set(val *KeyRiskIndicators) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyRiskIndicators) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyRiskIndicators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyRiskIndicators(val *KeyRiskIndicators) *NullableKeyRiskIndicators {
	return &NullableKeyRiskIndicators{value: val, isSet: true}
}

func (v NullableKeyRiskIndicators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyRiskIndicators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


