/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ProcessesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessesGet200Response{}

// ProcessesGet200Response struct for ProcessesGet200Response
type ProcessesGet200Response struct {
	Processes []Processes `json:"processes,omitempty"`
}

// NewProcessesGet200Response instantiates a new ProcessesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessesGet200Response() *ProcessesGet200Response {
	this := ProcessesGet200Response{}
	return &this
}

// NewProcessesGet200ResponseWithDefaults instantiates a new ProcessesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessesGet200ResponseWithDefaults() *ProcessesGet200Response {
	this := ProcessesGet200Response{}
	return &this
}

// GetProcesses returns the Processes field value if set, zero value otherwise.
func (o *ProcessesGet200Response) GetProcesses() []Processes {
	if o == nil || IsNil(o.Processes) {
		var ret []Processes
		return ret
	}
	return o.Processes
}

// GetProcessesOk returns a tuple with the Processes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessesGet200Response) GetProcessesOk() ([]Processes, bool) {
	if o == nil || IsNil(o.Processes) {
		return nil, false
	}
	return o.Processes, true
}

// HasProcesses returns a boolean if a field has been set.
func (o *ProcessesGet200Response) HasProcesses() bool {
	if o != nil && !IsNil(o.Processes) {
		return true
	}

	return false
}

// SetProcesses gets a reference to the given []Processes and assigns it to the Processes field.
func (o *ProcessesGet200Response) SetProcesses(v []Processes) {
	o.Processes = v
}

func (o ProcessesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Processes) {
		toSerialize["processes"] = o.Processes
	}
	return toSerialize, nil
}

type NullableProcessesGet200Response struct {
	value *ProcessesGet200Response
	isSet bool
}

func (v NullableProcessesGet200Response) Get() *ProcessesGet200Response {
	return v.value
}

func (v *NullableProcessesGet200Response) Set(val *ProcessesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessesGet200Response(val *ProcessesGet200Response) *NullableProcessesGet200Response {
	return &NullableProcessesGet200Response{value: val, isSet: true}
}

func (v NullableProcessesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


