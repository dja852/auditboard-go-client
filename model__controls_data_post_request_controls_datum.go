/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ControlsDataPostRequestControlsDatum type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControlsDataPostRequestControlsDatum{}

// ControlsDataPostRequestControlsDatum struct for ControlsDataPostRequestControlsDatum
type ControlsDataPostRequestControlsDatum struct {
	ControlId *int32 `json:"control_id,omitempty"`
	EntityId *int32 `json:"entity_id,omitempty"`
}

// NewControlsDataPostRequestControlsDatum instantiates a new ControlsDataPostRequestControlsDatum object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControlsDataPostRequestControlsDatum() *ControlsDataPostRequestControlsDatum {
	this := ControlsDataPostRequestControlsDatum{}
	return &this
}

// NewControlsDataPostRequestControlsDatumWithDefaults instantiates a new ControlsDataPostRequestControlsDatum object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlsDataPostRequestControlsDatumWithDefaults() *ControlsDataPostRequestControlsDatum {
	this := ControlsDataPostRequestControlsDatum{}
	return &this
}

// GetControlId returns the ControlId field value if set, zero value otherwise.
func (o *ControlsDataPostRequestControlsDatum) GetControlId() int32 {
	if o == nil || IsNil(o.ControlId) {
		var ret int32
		return ret
	}
	return *o.ControlId
}

// GetControlIdOk returns a tuple with the ControlId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataPostRequestControlsDatum) GetControlIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ControlId) {
		return nil, false
	}
	return o.ControlId, true
}

// HasControlId returns a boolean if a field has been set.
func (o *ControlsDataPostRequestControlsDatum) HasControlId() bool {
	if o != nil && !IsNil(o.ControlId) {
		return true
	}

	return false
}

// SetControlId gets a reference to the given int32 and assigns it to the ControlId field.
func (o *ControlsDataPostRequestControlsDatum) SetControlId(v int32) {
	o.ControlId = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *ControlsDataPostRequestControlsDatum) GetEntityId() int32 {
	if o == nil || IsNil(o.EntityId) {
		var ret int32
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataPostRequestControlsDatum) GetEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *ControlsDataPostRequestControlsDatum) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given int32 and assigns it to the EntityId field.
func (o *ControlsDataPostRequestControlsDatum) SetEntityId(v int32) {
	o.EntityId = &v
}

func (o ControlsDataPostRequestControlsDatum) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControlsDataPostRequestControlsDatum) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ControlId) {
		toSerialize["control_id"] = o.ControlId
	}
	if !IsNil(o.EntityId) {
		toSerialize["entity_id"] = o.EntityId
	}
	return toSerialize, nil
}

type NullableControlsDataPostRequestControlsDatum struct {
	value *ControlsDataPostRequestControlsDatum
	isSet bool
}

func (v NullableControlsDataPostRequestControlsDatum) Get() *ControlsDataPostRequestControlsDatum {
	return v.value
}

func (v *NullableControlsDataPostRequestControlsDatum) Set(val *ControlsDataPostRequestControlsDatum) {
	v.value = val
	v.isSet = true
}

func (v NullableControlsDataPostRequestControlsDatum) IsSet() bool {
	return v.isSet
}

func (v *NullableControlsDataPostRequestControlsDatum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControlsDataPostRequestControlsDatum(val *ControlsDataPostRequestControlsDatum) *NullableControlsDataPostRequestControlsDatum {
	return &NullableControlsDataPostRequestControlsDatum{value: val, isSet: true}
}

func (v NullableControlsDataPostRequestControlsDatum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControlsDataPostRequestControlsDatum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


