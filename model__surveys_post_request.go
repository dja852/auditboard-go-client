/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the SurveysPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SurveysPostRequest{}

// SurveysPostRequest struct for SurveysPostRequest
type SurveysPostRequest struct {
	Survey *Surveys `json:"survey,omitempty"`
}

// NewSurveysPostRequest instantiates a new SurveysPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSurveysPostRequest() *SurveysPostRequest {
	this := SurveysPostRequest{}
	return &this
}

// NewSurveysPostRequestWithDefaults instantiates a new SurveysPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSurveysPostRequestWithDefaults() *SurveysPostRequest {
	this := SurveysPostRequest{}
	return &this
}

// GetSurvey returns the Survey field value if set, zero value otherwise.
func (o *SurveysPostRequest) GetSurvey() Surveys {
	if o == nil || IsNil(o.Survey) {
		var ret Surveys
		return ret
	}
	return *o.Survey
}

// GetSurveyOk returns a tuple with the Survey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SurveysPostRequest) GetSurveyOk() (*Surveys, bool) {
	if o == nil || IsNil(o.Survey) {
		return nil, false
	}
	return o.Survey, true
}

// HasSurvey returns a boolean if a field has been set.
func (o *SurveysPostRequest) HasSurvey() bool {
	if o != nil && !IsNil(o.Survey) {
		return true
	}

	return false
}

// SetSurvey gets a reference to the given Surveys and assigns it to the Survey field.
func (o *SurveysPostRequest) SetSurvey(v Surveys) {
	o.Survey = &v
}

func (o SurveysPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SurveysPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Survey) {
		toSerialize["survey"] = o.Survey
	}
	return toSerialize, nil
}

type NullableSurveysPostRequest struct {
	value *SurveysPostRequest
	isSet bool
}

func (v NullableSurveysPostRequest) Get() *SurveysPostRequest {
	return v.value
}

func (v *NullableSurveysPostRequest) Set(val *SurveysPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSurveysPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSurveysPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSurveysPostRequest(val *SurveysPostRequest) *NullableSurveysPostRequest {
	return &NullableSurveysPostRequest{value: val, isSet: true}
}

func (v NullableSurveysPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSurveysPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


