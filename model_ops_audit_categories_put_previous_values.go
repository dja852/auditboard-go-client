/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the OpsAuditCategoriesPutPreviousValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpsAuditCategoriesPutPreviousValues{}

// OpsAuditCategoriesPutPreviousValues struct for OpsAuditCategoriesPutPreviousValues
type OpsAuditCategoriesPutPreviousValues struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	Name *string `json:"name,omitempty"`
	SortOrder *int32 `json:"sort_order,omitempty"`
	Status *string `json:"status,omitempty"`
	FormTemplates interface{} `json:"form_templates,omitempty"`
	OpsAuditRequiredFields interface{} `json:"ops_audit_required_fields,omitempty"`
	OpsAuditItemRequiredFields interface{} `json:"ops_audit_item_required_fields,omitempty"`
	WorkspaceType *string `json:"workspace_type,omitempty"`
	Reserved *bool `json:"reserved,omitempty"`
}

// NewOpsAuditCategoriesPutPreviousValues instantiates a new OpsAuditCategoriesPutPreviousValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsAuditCategoriesPutPreviousValues() *OpsAuditCategoriesPutPreviousValues {
	this := OpsAuditCategoriesPutPreviousValues{}
	var sortOrder int32 = 0
	this.SortOrder = &sortOrder
	var status string = ""
	this.Status = &status
	var workspaceType string = "OpsAudit"
	this.WorkspaceType = &workspaceType
	var reserved bool = false
	this.Reserved = &reserved
	return &this
}

// NewOpsAuditCategoriesPutPreviousValuesWithDefaults instantiates a new OpsAuditCategoriesPutPreviousValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsAuditCategoriesPutPreviousValuesWithDefaults() *OpsAuditCategoriesPutPreviousValues {
	this := OpsAuditCategoriesPutPreviousValues{}
	var sortOrder int32 = 0
	this.SortOrder = &sortOrder
	var status string = ""
	this.Status = &status
	var workspaceType string = "OpsAudit"
	this.WorkspaceType = &workspaceType
	var reserved bool = false
	this.Reserved = &reserved
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPutPreviousValues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPutPreviousValues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OpsAuditCategoriesPutPreviousValues) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPutPreviousValues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPutPreviousValues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *OpsAuditCategoriesPutPreviousValues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPutPreviousValues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPutPreviousValues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *OpsAuditCategoriesPutPreviousValues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPutPreviousValues) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPutPreviousValues) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *OpsAuditCategoriesPutPreviousValues) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPutPreviousValues) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPutPreviousValues) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpsAuditCategoriesPutPreviousValues) SetName(v string) {
	o.Name = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPutPreviousValues) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPutPreviousValues) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *OpsAuditCategoriesPutPreviousValues) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPutPreviousValues) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPutPreviousValues) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OpsAuditCategoriesPutPreviousValues) SetStatus(v string) {
	o.Status = &v
}

// GetFormTemplates returns the FormTemplates field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAuditCategoriesPutPreviousValues) GetFormTemplates() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FormTemplates
}

// GetFormTemplatesOk returns a tuple with the FormTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAuditCategoriesPutPreviousValues) GetFormTemplatesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FormTemplates) {
		return nil, false
	}
	return &o.FormTemplates, true
}

// HasFormTemplates returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasFormTemplates() bool {
	if o != nil && !IsNil(o.FormTemplates) {
		return true
	}

	return false
}

// SetFormTemplates gets a reference to the given interface{} and assigns it to the FormTemplates field.
func (o *OpsAuditCategoriesPutPreviousValues) SetFormTemplates(v interface{}) {
	o.FormTemplates = v
}

// GetOpsAuditRequiredFields returns the OpsAuditRequiredFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAuditCategoriesPutPreviousValues) GetOpsAuditRequiredFields() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OpsAuditRequiredFields
}

// GetOpsAuditRequiredFieldsOk returns a tuple with the OpsAuditRequiredFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAuditCategoriesPutPreviousValues) GetOpsAuditRequiredFieldsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.OpsAuditRequiredFields) {
		return nil, false
	}
	return &o.OpsAuditRequiredFields, true
}

// HasOpsAuditRequiredFields returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasOpsAuditRequiredFields() bool {
	if o != nil && !IsNil(o.OpsAuditRequiredFields) {
		return true
	}

	return false
}

// SetOpsAuditRequiredFields gets a reference to the given interface{} and assigns it to the OpsAuditRequiredFields field.
func (o *OpsAuditCategoriesPutPreviousValues) SetOpsAuditRequiredFields(v interface{}) {
	o.OpsAuditRequiredFields = v
}

// GetOpsAuditItemRequiredFields returns the OpsAuditItemRequiredFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAuditCategoriesPutPreviousValues) GetOpsAuditItemRequiredFields() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OpsAuditItemRequiredFields
}

// GetOpsAuditItemRequiredFieldsOk returns a tuple with the OpsAuditItemRequiredFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAuditCategoriesPutPreviousValues) GetOpsAuditItemRequiredFieldsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.OpsAuditItemRequiredFields) {
		return nil, false
	}
	return &o.OpsAuditItemRequiredFields, true
}

// HasOpsAuditItemRequiredFields returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasOpsAuditItemRequiredFields() bool {
	if o != nil && !IsNil(o.OpsAuditItemRequiredFields) {
		return true
	}

	return false
}

// SetOpsAuditItemRequiredFields gets a reference to the given interface{} and assigns it to the OpsAuditItemRequiredFields field.
func (o *OpsAuditCategoriesPutPreviousValues) SetOpsAuditItemRequiredFields(v interface{}) {
	o.OpsAuditItemRequiredFields = v
}

// GetWorkspaceType returns the WorkspaceType field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPutPreviousValues) GetWorkspaceType() string {
	if o == nil || IsNil(o.WorkspaceType) {
		var ret string
		return ret
	}
	return *o.WorkspaceType
}

// GetWorkspaceTypeOk returns a tuple with the WorkspaceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPutPreviousValues) GetWorkspaceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceType) {
		return nil, false
	}
	return o.WorkspaceType, true
}

// HasWorkspaceType returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasWorkspaceType() bool {
	if o != nil && !IsNil(o.WorkspaceType) {
		return true
	}

	return false
}

// SetWorkspaceType gets a reference to the given string and assigns it to the WorkspaceType field.
func (o *OpsAuditCategoriesPutPreviousValues) SetWorkspaceType(v string) {
	o.WorkspaceType = &v
}

// GetReserved returns the Reserved field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPutPreviousValues) GetReserved() bool {
	if o == nil || IsNil(o.Reserved) {
		var ret bool
		return ret
	}
	return *o.Reserved
}

// GetReservedOk returns a tuple with the Reserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPutPreviousValues) GetReservedOk() (*bool, bool) {
	if o == nil || IsNil(o.Reserved) {
		return nil, false
	}
	return o.Reserved, true
}

// HasReserved returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPutPreviousValues) HasReserved() bool {
	if o != nil && !IsNil(o.Reserved) {
		return true
	}

	return false
}

// SetReserved gets a reference to the given bool and assigns it to the Reserved field.
func (o *OpsAuditCategoriesPutPreviousValues) SetReserved(v bool) {
	o.Reserved = &v
}

func (o OpsAuditCategoriesPutPreviousValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpsAuditCategoriesPutPreviousValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sort_order"] = o.SortOrder
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.FormTemplates != nil {
		toSerialize["form_templates"] = o.FormTemplates
	}
	if o.OpsAuditRequiredFields != nil {
		toSerialize["ops_audit_required_fields"] = o.OpsAuditRequiredFields
	}
	if o.OpsAuditItemRequiredFields != nil {
		toSerialize["ops_audit_item_required_fields"] = o.OpsAuditItemRequiredFields
	}
	if !IsNil(o.WorkspaceType) {
		toSerialize["workspace_type"] = o.WorkspaceType
	}
	if !IsNil(o.Reserved) {
		toSerialize["reserved"] = o.Reserved
	}
	return toSerialize, nil
}

type NullableOpsAuditCategoriesPutPreviousValues struct {
	value *OpsAuditCategoriesPutPreviousValues
	isSet bool
}

func (v NullableOpsAuditCategoriesPutPreviousValues) Get() *OpsAuditCategoriesPutPreviousValues {
	return v.value
}

func (v *NullableOpsAuditCategoriesPutPreviousValues) Set(val *OpsAuditCategoriesPutPreviousValues) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsAuditCategoriesPutPreviousValues) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsAuditCategoriesPutPreviousValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsAuditCategoriesPutPreviousValues(val *OpsAuditCategoriesPutPreviousValues) *NullableOpsAuditCategoriesPutPreviousValues {
	return &NullableOpsAuditCategoriesPutPreviousValues{value: val, isSet: true}
}

func (v NullableOpsAuditCategoriesPutPreviousValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsAuditCategoriesPutPreviousValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


