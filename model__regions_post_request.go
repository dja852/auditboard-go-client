/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RegionsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegionsPostRequest{}

// RegionsPostRequest struct for RegionsPostRequest
type RegionsPostRequest struct {
	Region *Regions `json:"region,omitempty"`
}

// NewRegionsPostRequest instantiates a new RegionsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionsPostRequest() *RegionsPostRequest {
	this := RegionsPostRequest{}
	return &this
}

// NewRegionsPostRequestWithDefaults instantiates a new RegionsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionsPostRequestWithDefaults() *RegionsPostRequest {
	this := RegionsPostRequest{}
	return &this
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *RegionsPostRequest) GetRegion() Regions {
	if o == nil || IsNil(o.Region) {
		var ret Regions
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPostRequest) GetRegionOk() (*Regions, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *RegionsPostRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given Regions and assigns it to the Region field.
func (o *RegionsPostRequest) SetRegion(v Regions) {
	o.Region = &v
}

func (o RegionsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegionsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableRegionsPostRequest struct {
	value *RegionsPostRequest
	isSet bool
}

func (v NullableRegionsPostRequest) Get() *RegionsPostRequest {
	return v.value
}

func (v *NullableRegionsPostRequest) Set(val *RegionsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionsPostRequest(val *RegionsPostRequest) *NullableRegionsPostRequest {
	return &NullableRegionsPostRequest{value: val, isSet: true}
}

func (v NullableRegionsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


