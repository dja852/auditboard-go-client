/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RegionsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegionsPut{}

// RegionsPut struct for RegionsPut
type RegionsPut struct {
	Region *RegionsPutRegion `json:"region,omitempty"`
	PreviousValues *RegionsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewRegionsPut instantiates a new RegionsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionsPut() *RegionsPut {
	this := RegionsPut{}
	return &this
}

// NewRegionsPutWithDefaults instantiates a new RegionsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionsPutWithDefaults() *RegionsPut {
	this := RegionsPut{}
	return &this
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *RegionsPut) GetRegion() RegionsPutRegion {
	if o == nil || IsNil(o.Region) {
		var ret RegionsPutRegion
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPut) GetRegionOk() (*RegionsPutRegion, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *RegionsPut) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given RegionsPutRegion and assigns it to the Region field.
func (o *RegionsPut) SetRegion(v RegionsPutRegion) {
	o.Region = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *RegionsPut) GetPreviousValues() RegionsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret RegionsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPut) GetPreviousValuesOk() (*RegionsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *RegionsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given RegionsPutPreviousValues and assigns it to the PreviousValues field.
func (o *RegionsPut) SetPreviousValues(v RegionsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o RegionsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegionsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableRegionsPut struct {
	value *RegionsPut
	isSet bool
}

func (v NullableRegionsPut) Get() *RegionsPut {
	return v.value
}

func (v *NullableRegionsPut) Set(val *RegionsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionsPut(val *RegionsPut) *NullableRegionsPut {
	return &NullableRegionsPut{value: val, isSet: true}
}

func (v NullableRegionsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


