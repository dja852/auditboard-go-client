/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ControlsDataRequestZipPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControlsDataRequestZipPostRequest{}

// ControlsDataRequestZipPostRequest struct for ControlsDataRequestZipPostRequest
type ControlsDataRequestZipPostRequest struct {
	TestSectionIds []string `json:"testSectionIds,omitempty"`
	Options *ControlsDataRequestZipPostRequestOptions `json:"options,omitempty"`
	ControlsDataIds []string `json:"controlsDataIds,omitempty"`
}

// NewControlsDataRequestZipPostRequest instantiates a new ControlsDataRequestZipPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControlsDataRequestZipPostRequest() *ControlsDataRequestZipPostRequest {
	this := ControlsDataRequestZipPostRequest{}
	return &this
}

// NewControlsDataRequestZipPostRequestWithDefaults instantiates a new ControlsDataRequestZipPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlsDataRequestZipPostRequestWithDefaults() *ControlsDataRequestZipPostRequest {
	this := ControlsDataRequestZipPostRequest{}
	return &this
}

// GetTestSectionIds returns the TestSectionIds field value if set, zero value otherwise.
func (o *ControlsDataRequestZipPostRequest) GetTestSectionIds() []string {
	if o == nil || IsNil(o.TestSectionIds) {
		var ret []string
		return ret
	}
	return o.TestSectionIds
}

// GetTestSectionIdsOk returns a tuple with the TestSectionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataRequestZipPostRequest) GetTestSectionIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TestSectionIds) {
		return nil, false
	}
	return o.TestSectionIds, true
}

// HasTestSectionIds returns a boolean if a field has been set.
func (o *ControlsDataRequestZipPostRequest) HasTestSectionIds() bool {
	if o != nil && !IsNil(o.TestSectionIds) {
		return true
	}

	return false
}

// SetTestSectionIds gets a reference to the given []string and assigns it to the TestSectionIds field.
func (o *ControlsDataRequestZipPostRequest) SetTestSectionIds(v []string) {
	o.TestSectionIds = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ControlsDataRequestZipPostRequest) GetOptions() ControlsDataRequestZipPostRequestOptions {
	if o == nil || IsNil(o.Options) {
		var ret ControlsDataRequestZipPostRequestOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataRequestZipPostRequest) GetOptionsOk() (*ControlsDataRequestZipPostRequestOptions, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ControlsDataRequestZipPostRequest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given ControlsDataRequestZipPostRequestOptions and assigns it to the Options field.
func (o *ControlsDataRequestZipPostRequest) SetOptions(v ControlsDataRequestZipPostRequestOptions) {
	o.Options = &v
}

// GetControlsDataIds returns the ControlsDataIds field value if set, zero value otherwise.
func (o *ControlsDataRequestZipPostRequest) GetControlsDataIds() []string {
	if o == nil || IsNil(o.ControlsDataIds) {
		var ret []string
		return ret
	}
	return o.ControlsDataIds
}

// GetControlsDataIdsOk returns a tuple with the ControlsDataIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataRequestZipPostRequest) GetControlsDataIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ControlsDataIds) {
		return nil, false
	}
	return o.ControlsDataIds, true
}

// HasControlsDataIds returns a boolean if a field has been set.
func (o *ControlsDataRequestZipPostRequest) HasControlsDataIds() bool {
	if o != nil && !IsNil(o.ControlsDataIds) {
		return true
	}

	return false
}

// SetControlsDataIds gets a reference to the given []string and assigns it to the ControlsDataIds field.
func (o *ControlsDataRequestZipPostRequest) SetControlsDataIds(v []string) {
	o.ControlsDataIds = v
}

func (o ControlsDataRequestZipPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControlsDataRequestZipPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TestSectionIds) {
		toSerialize["testSectionIds"] = o.TestSectionIds
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.ControlsDataIds) {
		toSerialize["controlsDataIds"] = o.ControlsDataIds
	}
	return toSerialize, nil
}

type NullableControlsDataRequestZipPostRequest struct {
	value *ControlsDataRequestZipPostRequest
	isSet bool
}

func (v NullableControlsDataRequestZipPostRequest) Get() *ControlsDataRequestZipPostRequest {
	return v.value
}

func (v *NullableControlsDataRequestZipPostRequest) Set(val *ControlsDataRequestZipPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableControlsDataRequestZipPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableControlsDataRequestZipPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControlsDataRequestZipPostRequest(val *ControlsDataRequestZipPostRequest) *NullableControlsDataRequestZipPostRequest {
	return &NullableControlsDataRequestZipPostRequest{value: val, isSet: true}
}

func (v NullableControlsDataRequestZipPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControlsDataRequestZipPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


