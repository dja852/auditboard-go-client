/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AuditQuestionResponsesPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditQuestionResponsesPut{}

// AuditQuestionResponsesPut struct for AuditQuestionResponsesPut
type AuditQuestionResponsesPut struct {
	AuditQuestionResponse *AuditQuestionResponsesPutAuditQuestionResponse `json:"audit_question_response,omitempty"`
	PreviousValues *AuditQuestionResponsesPutPreviousValues `json:"previous_values,omitempty"`
}

// NewAuditQuestionResponsesPut instantiates a new AuditQuestionResponsesPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditQuestionResponsesPut() *AuditQuestionResponsesPut {
	this := AuditQuestionResponsesPut{}
	return &this
}

// NewAuditQuestionResponsesPutWithDefaults instantiates a new AuditQuestionResponsesPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditQuestionResponsesPutWithDefaults() *AuditQuestionResponsesPut {
	this := AuditQuestionResponsesPut{}
	return &this
}

// GetAuditQuestionResponse returns the AuditQuestionResponse field value if set, zero value otherwise.
func (o *AuditQuestionResponsesPut) GetAuditQuestionResponse() AuditQuestionResponsesPutAuditQuestionResponse {
	if o == nil || IsNil(o.AuditQuestionResponse) {
		var ret AuditQuestionResponsesPutAuditQuestionResponse
		return ret
	}
	return *o.AuditQuestionResponse
}

// GetAuditQuestionResponseOk returns a tuple with the AuditQuestionResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditQuestionResponsesPut) GetAuditQuestionResponseOk() (*AuditQuestionResponsesPutAuditQuestionResponse, bool) {
	if o == nil || IsNil(o.AuditQuestionResponse) {
		return nil, false
	}
	return o.AuditQuestionResponse, true
}

// HasAuditQuestionResponse returns a boolean if a field has been set.
func (o *AuditQuestionResponsesPut) HasAuditQuestionResponse() bool {
	if o != nil && !IsNil(o.AuditQuestionResponse) {
		return true
	}

	return false
}

// SetAuditQuestionResponse gets a reference to the given AuditQuestionResponsesPutAuditQuestionResponse and assigns it to the AuditQuestionResponse field.
func (o *AuditQuestionResponsesPut) SetAuditQuestionResponse(v AuditQuestionResponsesPutAuditQuestionResponse) {
	o.AuditQuestionResponse = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *AuditQuestionResponsesPut) GetPreviousValues() AuditQuestionResponsesPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret AuditQuestionResponsesPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditQuestionResponsesPut) GetPreviousValuesOk() (*AuditQuestionResponsesPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *AuditQuestionResponsesPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given AuditQuestionResponsesPutPreviousValues and assigns it to the PreviousValues field.
func (o *AuditQuestionResponsesPut) SetPreviousValues(v AuditQuestionResponsesPutPreviousValues) {
	o.PreviousValues = &v
}

func (o AuditQuestionResponsesPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditQuestionResponsesPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditQuestionResponse) {
		toSerialize["audit_question_response"] = o.AuditQuestionResponse
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableAuditQuestionResponsesPut struct {
	value *AuditQuestionResponsesPut
	isSet bool
}

func (v NullableAuditQuestionResponsesPut) Get() *AuditQuestionResponsesPut {
	return v.value
}

func (v *NullableAuditQuestionResponsesPut) Set(val *AuditQuestionResponsesPut) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditQuestionResponsesPut) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditQuestionResponsesPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditQuestionResponsesPut(val *AuditQuestionResponsesPut) *NullableAuditQuestionResponsesPut {
	return &NullableAuditQuestionResponsesPut{value: val, isSet: true}
}

func (v NullableAuditQuestionResponsesPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditQuestionResponsesPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


