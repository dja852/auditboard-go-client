/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Users type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Users{}

// Users struct for Users
type Users struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	FirstName string `json:"first_name"`
	LastName string `json:"last_name"`
	Email string `json:"email"`
	Password *string `json:"password,omitempty"`
	Salt *string `json:"salt,omitempty"`
	// Note: This is a Foreign Key to `roles.id`.<fk table='roles' column='id'/>
	RoleId *int32 `json:"role_id,omitempty"`
	AcceptedTerms *bool `json:"accepted_terms,omitempty"`
	LastLogin *string `json:"last_login,omitempty"`
	LastPasswordChange *string `json:"last_password_change,omitempty"`
	LastIpAddress *string `json:"last_ip_address,omitempty"`
	PasswordHistory *string `json:"password_history,omitempty"`
	VerifiedIpHistory *string `json:"verified_ip_history,omitempty"`
	RequiresPasswordChange *bool `json:"requires_password_change,omitempty"`
	IconBgColor *string `json:"icon_bg_color,omitempty"`
	IconFgColor *string `json:"icon_fg_color,omitempty"`
	CompetencyEvaluation *string `json:"competency_evaluation,omitempty"`
	// Note: This is a Foreign Key to `user_stats.id`.<fk table='user_stats' column='id'/>
	UserStatId *int32 `json:"user_stat_id,omitempty"`
	PasswordResetToken *string `json:"password_reset_token,omitempty"`
	PasswordResetTokenExpires *string `json:"password_reset_token_expires,omitempty"`
	AuthType *string `json:"auth_type,omitempty"`
	// Note: This is a Foreign Key to `locations.id`.<fk table='locations' column='id'/>
	LocationId *int32 `json:"location_id,omitempty"`
	// Note: This is a Foreign Key to `departments.id`.<fk table='departments' column='id'/>
	DepartmentId *int32 `json:"department_id,omitempty"`
	JobTitle *string `json:"job_title,omitempty"`
	MfaEnabled bool `json:"mfa_enabled"`
	CellPhone string `json:"cell_phone"`
	AuthyId *int32 `json:"authy_id,omitempty"`
	EmployeeNumber *string `json:"employee_number,omitempty"`
	Username *string `json:"username,omitempty"`
	LoginAttempt int32 `json:"login_attempt"`
	LastLoginFailedAttempt *string `json:"last_login_failed_attempt,omitempty"`
	FirstLogin *string `json:"first_login,omitempty"`
	ChameleonIdentifier *string `json:"chameleon_identifier,omitempty"`
	SlackUserId *string `json:"slack_user_id,omitempty"`
	SentSlackWelcomeNotification *bool `json:"sent_slack_welcome_notification,omitempty"`
	AvatarKey *string `json:"avatar_key,omitempty"`
	ExternalApiToken *string `json:"external_api_token,omitempty"`
	AzureConversationData interface{} `json:"azure_conversation_data,omitempty"`
	ScimUserActive *string `json:"scim_user_active,omitempty"`
	TeamsNotificationsEnabled *bool `json:"teams_notifications_enabled,omitempty"`
	CoreModules interface{} `json:"core_modules"`
	Locale *string `json:"locale,omitempty"`
	AccountExpirationDate *string `json:"account_expiration_date,omitempty"`
}

type _Users Users

// NewUsers instantiates a new Users object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsers(firstName string, lastName string, email string, mfaEnabled bool, cellPhone string, loginAttempt int32, coreModules interface{}) *Users {
	this := Users{}
	this.FirstName = firstName
	this.LastName = lastName
	this.Email = email
	this.MfaEnabled = mfaEnabled
	this.CellPhone = cellPhone
	this.LoginAttempt = loginAttempt
	this.CoreModules = coreModules
	var locale string = "NULL"
	this.Locale = &locale
	return &this
}

// NewUsersWithDefaults instantiates a new Users object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersWithDefaults() *Users {
	this := Users{}
	var mfaEnabled bool = false
	this.MfaEnabled = mfaEnabled
	var cellPhone string = ""
	this.CellPhone = cellPhone
	var loginAttempt int32 = 0
	this.LoginAttempt = loginAttempt
	var locale string = "NULL"
	this.Locale = &locale
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Users) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Users) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Users) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Users) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Users) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Users) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Users) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Users) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *Users) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *Users) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *Users) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *Users) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetFirstName returns the FirstName field value
func (o *Users) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *Users) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *Users) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *Users) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *Users) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *Users) SetLastName(v string) {
	o.LastName = v
}

// GetEmail returns the Email field value
func (o *Users) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *Users) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *Users) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *Users) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *Users) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *Users) SetPassword(v string) {
	o.Password = &v
}

// GetSalt returns the Salt field value if set, zero value otherwise.
func (o *Users) GetSalt() string {
	if o == nil || IsNil(o.Salt) {
		var ret string
		return ret
	}
	return *o.Salt
}

// GetSaltOk returns a tuple with the Salt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetSaltOk() (*string, bool) {
	if o == nil || IsNil(o.Salt) {
		return nil, false
	}
	return o.Salt, true
}

// HasSalt returns a boolean if a field has been set.
func (o *Users) HasSalt() bool {
	if o != nil && !IsNil(o.Salt) {
		return true
	}

	return false
}

// SetSalt gets a reference to the given string and assigns it to the Salt field.
func (o *Users) SetSalt(v string) {
	o.Salt = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *Users) GetRoleId() int32 {
	if o == nil || IsNil(o.RoleId) {
		var ret int32
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetRoleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *Users) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given int32 and assigns it to the RoleId field.
func (o *Users) SetRoleId(v int32) {
	o.RoleId = &v
}

// GetAcceptedTerms returns the AcceptedTerms field value if set, zero value otherwise.
func (o *Users) GetAcceptedTerms() bool {
	if o == nil || IsNil(o.AcceptedTerms) {
		var ret bool
		return ret
	}
	return *o.AcceptedTerms
}

// GetAcceptedTermsOk returns a tuple with the AcceptedTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetAcceptedTermsOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptedTerms) {
		return nil, false
	}
	return o.AcceptedTerms, true
}

// HasAcceptedTerms returns a boolean if a field has been set.
func (o *Users) HasAcceptedTerms() bool {
	if o != nil && !IsNil(o.AcceptedTerms) {
		return true
	}

	return false
}

// SetAcceptedTerms gets a reference to the given bool and assigns it to the AcceptedTerms field.
func (o *Users) SetAcceptedTerms(v bool) {
	o.AcceptedTerms = &v
}

// GetLastLogin returns the LastLogin field value if set, zero value otherwise.
func (o *Users) GetLastLogin() string {
	if o == nil || IsNil(o.LastLogin) {
		var ret string
		return ret
	}
	return *o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetLastLoginOk() (*string, bool) {
	if o == nil || IsNil(o.LastLogin) {
		return nil, false
	}
	return o.LastLogin, true
}

// HasLastLogin returns a boolean if a field has been set.
func (o *Users) HasLastLogin() bool {
	if o != nil && !IsNil(o.LastLogin) {
		return true
	}

	return false
}

// SetLastLogin gets a reference to the given string and assigns it to the LastLogin field.
func (o *Users) SetLastLogin(v string) {
	o.LastLogin = &v
}

// GetLastPasswordChange returns the LastPasswordChange field value if set, zero value otherwise.
func (o *Users) GetLastPasswordChange() string {
	if o == nil || IsNil(o.LastPasswordChange) {
		var ret string
		return ret
	}
	return *o.LastPasswordChange
}

// GetLastPasswordChangeOk returns a tuple with the LastPasswordChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetLastPasswordChangeOk() (*string, bool) {
	if o == nil || IsNil(o.LastPasswordChange) {
		return nil, false
	}
	return o.LastPasswordChange, true
}

// HasLastPasswordChange returns a boolean if a field has been set.
func (o *Users) HasLastPasswordChange() bool {
	if o != nil && !IsNil(o.LastPasswordChange) {
		return true
	}

	return false
}

// SetLastPasswordChange gets a reference to the given string and assigns it to the LastPasswordChange field.
func (o *Users) SetLastPasswordChange(v string) {
	o.LastPasswordChange = &v
}

// GetLastIpAddress returns the LastIpAddress field value if set, zero value otherwise.
func (o *Users) GetLastIpAddress() string {
	if o == nil || IsNil(o.LastIpAddress) {
		var ret string
		return ret
	}
	return *o.LastIpAddress
}

// GetLastIpAddressOk returns a tuple with the LastIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetLastIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LastIpAddress) {
		return nil, false
	}
	return o.LastIpAddress, true
}

// HasLastIpAddress returns a boolean if a field has been set.
func (o *Users) HasLastIpAddress() bool {
	if o != nil && !IsNil(o.LastIpAddress) {
		return true
	}

	return false
}

// SetLastIpAddress gets a reference to the given string and assigns it to the LastIpAddress field.
func (o *Users) SetLastIpAddress(v string) {
	o.LastIpAddress = &v
}

// GetPasswordHistory returns the PasswordHistory field value if set, zero value otherwise.
func (o *Users) GetPasswordHistory() string {
	if o == nil || IsNil(o.PasswordHistory) {
		var ret string
		return ret
	}
	return *o.PasswordHistory
}

// GetPasswordHistoryOk returns a tuple with the PasswordHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetPasswordHistoryOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordHistory) {
		return nil, false
	}
	return o.PasswordHistory, true
}

// HasPasswordHistory returns a boolean if a field has been set.
func (o *Users) HasPasswordHistory() bool {
	if o != nil && !IsNil(o.PasswordHistory) {
		return true
	}

	return false
}

// SetPasswordHistory gets a reference to the given string and assigns it to the PasswordHistory field.
func (o *Users) SetPasswordHistory(v string) {
	o.PasswordHistory = &v
}

// GetVerifiedIpHistory returns the VerifiedIpHistory field value if set, zero value otherwise.
func (o *Users) GetVerifiedIpHistory() string {
	if o == nil || IsNil(o.VerifiedIpHistory) {
		var ret string
		return ret
	}
	return *o.VerifiedIpHistory
}

// GetVerifiedIpHistoryOk returns a tuple with the VerifiedIpHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetVerifiedIpHistoryOk() (*string, bool) {
	if o == nil || IsNil(o.VerifiedIpHistory) {
		return nil, false
	}
	return o.VerifiedIpHistory, true
}

// HasVerifiedIpHistory returns a boolean if a field has been set.
func (o *Users) HasVerifiedIpHistory() bool {
	if o != nil && !IsNil(o.VerifiedIpHistory) {
		return true
	}

	return false
}

// SetVerifiedIpHistory gets a reference to the given string and assigns it to the VerifiedIpHistory field.
func (o *Users) SetVerifiedIpHistory(v string) {
	o.VerifiedIpHistory = &v
}

// GetRequiresPasswordChange returns the RequiresPasswordChange field value if set, zero value otherwise.
func (o *Users) GetRequiresPasswordChange() bool {
	if o == nil || IsNil(o.RequiresPasswordChange) {
		var ret bool
		return ret
	}
	return *o.RequiresPasswordChange
}

// GetRequiresPasswordChangeOk returns a tuple with the RequiresPasswordChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetRequiresPasswordChangeOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresPasswordChange) {
		return nil, false
	}
	return o.RequiresPasswordChange, true
}

// HasRequiresPasswordChange returns a boolean if a field has been set.
func (o *Users) HasRequiresPasswordChange() bool {
	if o != nil && !IsNil(o.RequiresPasswordChange) {
		return true
	}

	return false
}

// SetRequiresPasswordChange gets a reference to the given bool and assigns it to the RequiresPasswordChange field.
func (o *Users) SetRequiresPasswordChange(v bool) {
	o.RequiresPasswordChange = &v
}

// GetIconBgColor returns the IconBgColor field value if set, zero value otherwise.
func (o *Users) GetIconBgColor() string {
	if o == nil || IsNil(o.IconBgColor) {
		var ret string
		return ret
	}
	return *o.IconBgColor
}

// GetIconBgColorOk returns a tuple with the IconBgColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetIconBgColorOk() (*string, bool) {
	if o == nil || IsNil(o.IconBgColor) {
		return nil, false
	}
	return o.IconBgColor, true
}

// HasIconBgColor returns a boolean if a field has been set.
func (o *Users) HasIconBgColor() bool {
	if o != nil && !IsNil(o.IconBgColor) {
		return true
	}

	return false
}

// SetIconBgColor gets a reference to the given string and assigns it to the IconBgColor field.
func (o *Users) SetIconBgColor(v string) {
	o.IconBgColor = &v
}

// GetIconFgColor returns the IconFgColor field value if set, zero value otherwise.
func (o *Users) GetIconFgColor() string {
	if o == nil || IsNil(o.IconFgColor) {
		var ret string
		return ret
	}
	return *o.IconFgColor
}

// GetIconFgColorOk returns a tuple with the IconFgColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetIconFgColorOk() (*string, bool) {
	if o == nil || IsNil(o.IconFgColor) {
		return nil, false
	}
	return o.IconFgColor, true
}

// HasIconFgColor returns a boolean if a field has been set.
func (o *Users) HasIconFgColor() bool {
	if o != nil && !IsNil(o.IconFgColor) {
		return true
	}

	return false
}

// SetIconFgColor gets a reference to the given string and assigns it to the IconFgColor field.
func (o *Users) SetIconFgColor(v string) {
	o.IconFgColor = &v
}

// GetCompetencyEvaluation returns the CompetencyEvaluation field value if set, zero value otherwise.
func (o *Users) GetCompetencyEvaluation() string {
	if o == nil || IsNil(o.CompetencyEvaluation) {
		var ret string
		return ret
	}
	return *o.CompetencyEvaluation
}

// GetCompetencyEvaluationOk returns a tuple with the CompetencyEvaluation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetCompetencyEvaluationOk() (*string, bool) {
	if o == nil || IsNil(o.CompetencyEvaluation) {
		return nil, false
	}
	return o.CompetencyEvaluation, true
}

// HasCompetencyEvaluation returns a boolean if a field has been set.
func (o *Users) HasCompetencyEvaluation() bool {
	if o != nil && !IsNil(o.CompetencyEvaluation) {
		return true
	}

	return false
}

// SetCompetencyEvaluation gets a reference to the given string and assigns it to the CompetencyEvaluation field.
func (o *Users) SetCompetencyEvaluation(v string) {
	o.CompetencyEvaluation = &v
}

// GetUserStatId returns the UserStatId field value if set, zero value otherwise.
func (o *Users) GetUserStatId() int32 {
	if o == nil || IsNil(o.UserStatId) {
		var ret int32
		return ret
	}
	return *o.UserStatId
}

// GetUserStatIdOk returns a tuple with the UserStatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetUserStatIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserStatId) {
		return nil, false
	}
	return o.UserStatId, true
}

// HasUserStatId returns a boolean if a field has been set.
func (o *Users) HasUserStatId() bool {
	if o != nil && !IsNil(o.UserStatId) {
		return true
	}

	return false
}

// SetUserStatId gets a reference to the given int32 and assigns it to the UserStatId field.
func (o *Users) SetUserStatId(v int32) {
	o.UserStatId = &v
}

// GetPasswordResetToken returns the PasswordResetToken field value if set, zero value otherwise.
func (o *Users) GetPasswordResetToken() string {
	if o == nil || IsNil(o.PasswordResetToken) {
		var ret string
		return ret
	}
	return *o.PasswordResetToken
}

// GetPasswordResetTokenOk returns a tuple with the PasswordResetToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetPasswordResetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordResetToken) {
		return nil, false
	}
	return o.PasswordResetToken, true
}

// HasPasswordResetToken returns a boolean if a field has been set.
func (o *Users) HasPasswordResetToken() bool {
	if o != nil && !IsNil(o.PasswordResetToken) {
		return true
	}

	return false
}

// SetPasswordResetToken gets a reference to the given string and assigns it to the PasswordResetToken field.
func (o *Users) SetPasswordResetToken(v string) {
	o.PasswordResetToken = &v
}

// GetPasswordResetTokenExpires returns the PasswordResetTokenExpires field value if set, zero value otherwise.
func (o *Users) GetPasswordResetTokenExpires() string {
	if o == nil || IsNil(o.PasswordResetTokenExpires) {
		var ret string
		return ret
	}
	return *o.PasswordResetTokenExpires
}

// GetPasswordResetTokenExpiresOk returns a tuple with the PasswordResetTokenExpires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetPasswordResetTokenExpiresOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordResetTokenExpires) {
		return nil, false
	}
	return o.PasswordResetTokenExpires, true
}

// HasPasswordResetTokenExpires returns a boolean if a field has been set.
func (o *Users) HasPasswordResetTokenExpires() bool {
	if o != nil && !IsNil(o.PasswordResetTokenExpires) {
		return true
	}

	return false
}

// SetPasswordResetTokenExpires gets a reference to the given string and assigns it to the PasswordResetTokenExpires field.
func (o *Users) SetPasswordResetTokenExpires(v string) {
	o.PasswordResetTokenExpires = &v
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *Users) GetAuthType() string {
	if o == nil || IsNil(o.AuthType) {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetAuthTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthType) {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *Users) HasAuthType() bool {
	if o != nil && !IsNil(o.AuthType) {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *Users) SetAuthType(v string) {
	o.AuthType = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *Users) GetLocationId() int32 {
	if o == nil || IsNil(o.LocationId) {
		var ret int32
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetLocationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LocationId) {
		return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *Users) HasLocationId() bool {
	if o != nil && !IsNil(o.LocationId) {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given int32 and assigns it to the LocationId field.
func (o *Users) SetLocationId(v int32) {
	o.LocationId = &v
}

// GetDepartmentId returns the DepartmentId field value if set, zero value otherwise.
func (o *Users) GetDepartmentId() int32 {
	if o == nil || IsNil(o.DepartmentId) {
		var ret int32
		return ret
	}
	return *o.DepartmentId
}

// GetDepartmentIdOk returns a tuple with the DepartmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetDepartmentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DepartmentId) {
		return nil, false
	}
	return o.DepartmentId, true
}

// HasDepartmentId returns a boolean if a field has been set.
func (o *Users) HasDepartmentId() bool {
	if o != nil && !IsNil(o.DepartmentId) {
		return true
	}

	return false
}

// SetDepartmentId gets a reference to the given int32 and assigns it to the DepartmentId field.
func (o *Users) SetDepartmentId(v int32) {
	o.DepartmentId = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *Users) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *Users) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *Users) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetMfaEnabled returns the MfaEnabled field value
func (o *Users) GetMfaEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MfaEnabled
}

// GetMfaEnabledOk returns a tuple with the MfaEnabled field value
// and a boolean to check if the value has been set.
func (o *Users) GetMfaEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MfaEnabled, true
}

// SetMfaEnabled sets field value
func (o *Users) SetMfaEnabled(v bool) {
	o.MfaEnabled = v
}

// GetCellPhone returns the CellPhone field value
func (o *Users) GetCellPhone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CellPhone
}

// GetCellPhoneOk returns a tuple with the CellPhone field value
// and a boolean to check if the value has been set.
func (o *Users) GetCellPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CellPhone, true
}

// SetCellPhone sets field value
func (o *Users) SetCellPhone(v string) {
	o.CellPhone = v
}

// GetAuthyId returns the AuthyId field value if set, zero value otherwise.
func (o *Users) GetAuthyId() int32 {
	if o == nil || IsNil(o.AuthyId) {
		var ret int32
		return ret
	}
	return *o.AuthyId
}

// GetAuthyIdOk returns a tuple with the AuthyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetAuthyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthyId) {
		return nil, false
	}
	return o.AuthyId, true
}

// HasAuthyId returns a boolean if a field has been set.
func (o *Users) HasAuthyId() bool {
	if o != nil && !IsNil(o.AuthyId) {
		return true
	}

	return false
}

// SetAuthyId gets a reference to the given int32 and assigns it to the AuthyId field.
func (o *Users) SetAuthyId(v int32) {
	o.AuthyId = &v
}

// GetEmployeeNumber returns the EmployeeNumber field value if set, zero value otherwise.
func (o *Users) GetEmployeeNumber() string {
	if o == nil || IsNil(o.EmployeeNumber) {
		var ret string
		return ret
	}
	return *o.EmployeeNumber
}

// GetEmployeeNumberOk returns a tuple with the EmployeeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetEmployeeNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeNumber) {
		return nil, false
	}
	return o.EmployeeNumber, true
}

// HasEmployeeNumber returns a boolean if a field has been set.
func (o *Users) HasEmployeeNumber() bool {
	if o != nil && !IsNil(o.EmployeeNumber) {
		return true
	}

	return false
}

// SetEmployeeNumber gets a reference to the given string and assigns it to the EmployeeNumber field.
func (o *Users) SetEmployeeNumber(v string) {
	o.EmployeeNumber = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *Users) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *Users) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *Users) SetUsername(v string) {
	o.Username = &v
}

// GetLoginAttempt returns the LoginAttempt field value
func (o *Users) GetLoginAttempt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LoginAttempt
}

// GetLoginAttemptOk returns a tuple with the LoginAttempt field value
// and a boolean to check if the value has been set.
func (o *Users) GetLoginAttemptOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginAttempt, true
}

// SetLoginAttempt sets field value
func (o *Users) SetLoginAttempt(v int32) {
	o.LoginAttempt = v
}

// GetLastLoginFailedAttempt returns the LastLoginFailedAttempt field value if set, zero value otherwise.
func (o *Users) GetLastLoginFailedAttempt() string {
	if o == nil || IsNil(o.LastLoginFailedAttempt) {
		var ret string
		return ret
	}
	return *o.LastLoginFailedAttempt
}

// GetLastLoginFailedAttemptOk returns a tuple with the LastLoginFailedAttempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetLastLoginFailedAttemptOk() (*string, bool) {
	if o == nil || IsNil(o.LastLoginFailedAttempt) {
		return nil, false
	}
	return o.LastLoginFailedAttempt, true
}

// HasLastLoginFailedAttempt returns a boolean if a field has been set.
func (o *Users) HasLastLoginFailedAttempt() bool {
	if o != nil && !IsNil(o.LastLoginFailedAttempt) {
		return true
	}

	return false
}

// SetLastLoginFailedAttempt gets a reference to the given string and assigns it to the LastLoginFailedAttempt field.
func (o *Users) SetLastLoginFailedAttempt(v string) {
	o.LastLoginFailedAttempt = &v
}

// GetFirstLogin returns the FirstLogin field value if set, zero value otherwise.
func (o *Users) GetFirstLogin() string {
	if o == nil || IsNil(o.FirstLogin) {
		var ret string
		return ret
	}
	return *o.FirstLogin
}

// GetFirstLoginOk returns a tuple with the FirstLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetFirstLoginOk() (*string, bool) {
	if o == nil || IsNil(o.FirstLogin) {
		return nil, false
	}
	return o.FirstLogin, true
}

// HasFirstLogin returns a boolean if a field has been set.
func (o *Users) HasFirstLogin() bool {
	if o != nil && !IsNil(o.FirstLogin) {
		return true
	}

	return false
}

// SetFirstLogin gets a reference to the given string and assigns it to the FirstLogin field.
func (o *Users) SetFirstLogin(v string) {
	o.FirstLogin = &v
}

// GetChameleonIdentifier returns the ChameleonIdentifier field value if set, zero value otherwise.
func (o *Users) GetChameleonIdentifier() string {
	if o == nil || IsNil(o.ChameleonIdentifier) {
		var ret string
		return ret
	}
	return *o.ChameleonIdentifier
}

// GetChameleonIdentifierOk returns a tuple with the ChameleonIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetChameleonIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ChameleonIdentifier) {
		return nil, false
	}
	return o.ChameleonIdentifier, true
}

// HasChameleonIdentifier returns a boolean if a field has been set.
func (o *Users) HasChameleonIdentifier() bool {
	if o != nil && !IsNil(o.ChameleonIdentifier) {
		return true
	}

	return false
}

// SetChameleonIdentifier gets a reference to the given string and assigns it to the ChameleonIdentifier field.
func (o *Users) SetChameleonIdentifier(v string) {
	o.ChameleonIdentifier = &v
}

// GetSlackUserId returns the SlackUserId field value if set, zero value otherwise.
func (o *Users) GetSlackUserId() string {
	if o == nil || IsNil(o.SlackUserId) {
		var ret string
		return ret
	}
	return *o.SlackUserId
}

// GetSlackUserIdOk returns a tuple with the SlackUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetSlackUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.SlackUserId) {
		return nil, false
	}
	return o.SlackUserId, true
}

// HasSlackUserId returns a boolean if a field has been set.
func (o *Users) HasSlackUserId() bool {
	if o != nil && !IsNil(o.SlackUserId) {
		return true
	}

	return false
}

// SetSlackUserId gets a reference to the given string and assigns it to the SlackUserId field.
func (o *Users) SetSlackUserId(v string) {
	o.SlackUserId = &v
}

// GetSentSlackWelcomeNotification returns the SentSlackWelcomeNotification field value if set, zero value otherwise.
func (o *Users) GetSentSlackWelcomeNotification() bool {
	if o == nil || IsNil(o.SentSlackWelcomeNotification) {
		var ret bool
		return ret
	}
	return *o.SentSlackWelcomeNotification
}

// GetSentSlackWelcomeNotificationOk returns a tuple with the SentSlackWelcomeNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetSentSlackWelcomeNotificationOk() (*bool, bool) {
	if o == nil || IsNil(o.SentSlackWelcomeNotification) {
		return nil, false
	}
	return o.SentSlackWelcomeNotification, true
}

// HasSentSlackWelcomeNotification returns a boolean if a field has been set.
func (o *Users) HasSentSlackWelcomeNotification() bool {
	if o != nil && !IsNil(o.SentSlackWelcomeNotification) {
		return true
	}

	return false
}

// SetSentSlackWelcomeNotification gets a reference to the given bool and assigns it to the SentSlackWelcomeNotification field.
func (o *Users) SetSentSlackWelcomeNotification(v bool) {
	o.SentSlackWelcomeNotification = &v
}

// GetAvatarKey returns the AvatarKey field value if set, zero value otherwise.
func (o *Users) GetAvatarKey() string {
	if o == nil || IsNil(o.AvatarKey) {
		var ret string
		return ret
	}
	return *o.AvatarKey
}

// GetAvatarKeyOk returns a tuple with the AvatarKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetAvatarKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarKey) {
		return nil, false
	}
	return o.AvatarKey, true
}

// HasAvatarKey returns a boolean if a field has been set.
func (o *Users) HasAvatarKey() bool {
	if o != nil && !IsNil(o.AvatarKey) {
		return true
	}

	return false
}

// SetAvatarKey gets a reference to the given string and assigns it to the AvatarKey field.
func (o *Users) SetAvatarKey(v string) {
	o.AvatarKey = &v
}

// GetExternalApiToken returns the ExternalApiToken field value if set, zero value otherwise.
func (o *Users) GetExternalApiToken() string {
	if o == nil || IsNil(o.ExternalApiToken) {
		var ret string
		return ret
	}
	return *o.ExternalApiToken
}

// GetExternalApiTokenOk returns a tuple with the ExternalApiToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetExternalApiTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalApiToken) {
		return nil, false
	}
	return o.ExternalApiToken, true
}

// HasExternalApiToken returns a boolean if a field has been set.
func (o *Users) HasExternalApiToken() bool {
	if o != nil && !IsNil(o.ExternalApiToken) {
		return true
	}

	return false
}

// SetExternalApiToken gets a reference to the given string and assigns it to the ExternalApiToken field.
func (o *Users) SetExternalApiToken(v string) {
	o.ExternalApiToken = &v
}

// GetAzureConversationData returns the AzureConversationData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Users) GetAzureConversationData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AzureConversationData
}

// GetAzureConversationDataOk returns a tuple with the AzureConversationData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Users) GetAzureConversationDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AzureConversationData) {
		return nil, false
	}
	return &o.AzureConversationData, true
}

// HasAzureConversationData returns a boolean if a field has been set.
func (o *Users) HasAzureConversationData() bool {
	if o != nil && !IsNil(o.AzureConversationData) {
		return true
	}

	return false
}

// SetAzureConversationData gets a reference to the given interface{} and assigns it to the AzureConversationData field.
func (o *Users) SetAzureConversationData(v interface{}) {
	o.AzureConversationData = v
}

// GetScimUserActive returns the ScimUserActive field value if set, zero value otherwise.
func (o *Users) GetScimUserActive() string {
	if o == nil || IsNil(o.ScimUserActive) {
		var ret string
		return ret
	}
	return *o.ScimUserActive
}

// GetScimUserActiveOk returns a tuple with the ScimUserActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetScimUserActiveOk() (*string, bool) {
	if o == nil || IsNil(o.ScimUserActive) {
		return nil, false
	}
	return o.ScimUserActive, true
}

// HasScimUserActive returns a boolean if a field has been set.
func (o *Users) HasScimUserActive() bool {
	if o != nil && !IsNil(o.ScimUserActive) {
		return true
	}

	return false
}

// SetScimUserActive gets a reference to the given string and assigns it to the ScimUserActive field.
func (o *Users) SetScimUserActive(v string) {
	o.ScimUserActive = &v
}

// GetTeamsNotificationsEnabled returns the TeamsNotificationsEnabled field value if set, zero value otherwise.
func (o *Users) GetTeamsNotificationsEnabled() bool {
	if o == nil || IsNil(o.TeamsNotificationsEnabled) {
		var ret bool
		return ret
	}
	return *o.TeamsNotificationsEnabled
}

// GetTeamsNotificationsEnabledOk returns a tuple with the TeamsNotificationsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetTeamsNotificationsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TeamsNotificationsEnabled) {
		return nil, false
	}
	return o.TeamsNotificationsEnabled, true
}

// HasTeamsNotificationsEnabled returns a boolean if a field has been set.
func (o *Users) HasTeamsNotificationsEnabled() bool {
	if o != nil && !IsNil(o.TeamsNotificationsEnabled) {
		return true
	}

	return false
}

// SetTeamsNotificationsEnabled gets a reference to the given bool and assigns it to the TeamsNotificationsEnabled field.
func (o *Users) SetTeamsNotificationsEnabled(v bool) {
	o.TeamsNotificationsEnabled = &v
}

// GetCoreModules returns the CoreModules field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *Users) GetCoreModules() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.CoreModules
}

// GetCoreModulesOk returns a tuple with the CoreModules field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Users) GetCoreModulesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CoreModules) {
		return nil, false
	}
	return &o.CoreModules, true
}

// SetCoreModules sets field value
func (o *Users) SetCoreModules(v interface{}) {
	o.CoreModules = v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *Users) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *Users) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *Users) SetLocale(v string) {
	o.Locale = &v
}

// GetAccountExpirationDate returns the AccountExpirationDate field value if set, zero value otherwise.
func (o *Users) GetAccountExpirationDate() string {
	if o == nil || IsNil(o.AccountExpirationDate) {
		var ret string
		return ret
	}
	return *o.AccountExpirationDate
}

// GetAccountExpirationDateOk returns a tuple with the AccountExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Users) GetAccountExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.AccountExpirationDate) {
		return nil, false
	}
	return o.AccountExpirationDate, true
}

// HasAccountExpirationDate returns a boolean if a field has been set.
func (o *Users) HasAccountExpirationDate() bool {
	if o != nil && !IsNil(o.AccountExpirationDate) {
		return true
	}

	return false
}

// SetAccountExpirationDate gets a reference to the given string and assigns it to the AccountExpirationDate field.
func (o *Users) SetAccountExpirationDate(v string) {
	o.AccountExpirationDate = &v
}

func (o Users) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Users) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	toSerialize["first_name"] = o.FirstName
	toSerialize["last_name"] = o.LastName
	toSerialize["email"] = o.Email
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Salt) {
		toSerialize["salt"] = o.Salt
	}
	if !IsNil(o.RoleId) {
		toSerialize["role_id"] = o.RoleId
	}
	if !IsNil(o.AcceptedTerms) {
		toSerialize["accepted_terms"] = o.AcceptedTerms
	}
	if !IsNil(o.LastLogin) {
		toSerialize["last_login"] = o.LastLogin
	}
	if !IsNil(o.LastPasswordChange) {
		toSerialize["last_password_change"] = o.LastPasswordChange
	}
	if !IsNil(o.LastIpAddress) {
		toSerialize["last_ip_address"] = o.LastIpAddress
	}
	if !IsNil(o.PasswordHistory) {
		toSerialize["password_history"] = o.PasswordHistory
	}
	if !IsNil(o.VerifiedIpHistory) {
		toSerialize["verified_ip_history"] = o.VerifiedIpHistory
	}
	if !IsNil(o.RequiresPasswordChange) {
		toSerialize["requires_password_change"] = o.RequiresPasswordChange
	}
	if !IsNil(o.IconBgColor) {
		toSerialize["icon_bg_color"] = o.IconBgColor
	}
	if !IsNil(o.IconFgColor) {
		toSerialize["icon_fg_color"] = o.IconFgColor
	}
	if !IsNil(o.CompetencyEvaluation) {
		toSerialize["competency_evaluation"] = o.CompetencyEvaluation
	}
	if !IsNil(o.UserStatId) {
		toSerialize["user_stat_id"] = o.UserStatId
	}
	if !IsNil(o.PasswordResetToken) {
		toSerialize["password_reset_token"] = o.PasswordResetToken
	}
	if !IsNil(o.PasswordResetTokenExpires) {
		toSerialize["password_reset_token_expires"] = o.PasswordResetTokenExpires
	}
	if !IsNil(o.AuthType) {
		toSerialize["auth_type"] = o.AuthType
	}
	if !IsNil(o.LocationId) {
		toSerialize["location_id"] = o.LocationId
	}
	if !IsNil(o.DepartmentId) {
		toSerialize["department_id"] = o.DepartmentId
	}
	if !IsNil(o.JobTitle) {
		toSerialize["job_title"] = o.JobTitle
	}
	toSerialize["mfa_enabled"] = o.MfaEnabled
	toSerialize["cell_phone"] = o.CellPhone
	if !IsNil(o.AuthyId) {
		toSerialize["authy_id"] = o.AuthyId
	}
	if !IsNil(o.EmployeeNumber) {
		toSerialize["employee_number"] = o.EmployeeNumber
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	toSerialize["login_attempt"] = o.LoginAttempt
	if !IsNil(o.LastLoginFailedAttempt) {
		toSerialize["last_login_failed_attempt"] = o.LastLoginFailedAttempt
	}
	if !IsNil(o.FirstLogin) {
		toSerialize["first_login"] = o.FirstLogin
	}
	if !IsNil(o.ChameleonIdentifier) {
		toSerialize["chameleon_identifier"] = o.ChameleonIdentifier
	}
	if !IsNil(o.SlackUserId) {
		toSerialize["slack_user_id"] = o.SlackUserId
	}
	if !IsNil(o.SentSlackWelcomeNotification) {
		toSerialize["sent_slack_welcome_notification"] = o.SentSlackWelcomeNotification
	}
	if !IsNil(o.AvatarKey) {
		toSerialize["avatar_key"] = o.AvatarKey
	}
	if !IsNil(o.ExternalApiToken) {
		toSerialize["external_api_token"] = o.ExternalApiToken
	}
	if o.AzureConversationData != nil {
		toSerialize["azure_conversation_data"] = o.AzureConversationData
	}
	if !IsNil(o.ScimUserActive) {
		toSerialize["scim_user_active"] = o.ScimUserActive
	}
	if !IsNil(o.TeamsNotificationsEnabled) {
		toSerialize["teams_notifications_enabled"] = o.TeamsNotificationsEnabled
	}
	if o.CoreModules != nil {
		toSerialize["core_modules"] = o.CoreModules
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.AccountExpirationDate) {
		toSerialize["account_expiration_date"] = o.AccountExpirationDate
	}
	return toSerialize, nil
}

type NullableUsers struct {
	value *Users
	isSet bool
}

func (v NullableUsers) Get() *Users {
	return v.value
}

func (v *NullableUsers) Set(val *Users) {
	v.value = val
	v.isSet = true
}

func (v NullableUsers) IsSet() bool {
	return v.isSet
}

func (v *NullableUsers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsers(val *Users) *NullableUsers {
	return &NullableUsers{value: val, isSet: true}
}

func (v NullableUsers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


