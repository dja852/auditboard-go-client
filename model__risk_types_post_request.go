/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RiskTypesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskTypesPostRequest{}

// RiskTypesPostRequest struct for RiskTypesPostRequest
type RiskTypesPostRequest struct {
	RiskType *RiskTypes `json:"risk_type,omitempty"`
}

// NewRiskTypesPostRequest instantiates a new RiskTypesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskTypesPostRequest() *RiskTypesPostRequest {
	this := RiskTypesPostRequest{}
	return &this
}

// NewRiskTypesPostRequestWithDefaults instantiates a new RiskTypesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskTypesPostRequestWithDefaults() *RiskTypesPostRequest {
	this := RiskTypesPostRequest{}
	return &this
}

// GetRiskType returns the RiskType field value if set, zero value otherwise.
func (o *RiskTypesPostRequest) GetRiskType() RiskTypes {
	if o == nil || IsNil(o.RiskType) {
		var ret RiskTypes
		return ret
	}
	return *o.RiskType
}

// GetRiskTypeOk returns a tuple with the RiskType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskTypesPostRequest) GetRiskTypeOk() (*RiskTypes, bool) {
	if o == nil || IsNil(o.RiskType) {
		return nil, false
	}
	return o.RiskType, true
}

// HasRiskType returns a boolean if a field has been set.
func (o *RiskTypesPostRequest) HasRiskType() bool {
	if o != nil && !IsNil(o.RiskType) {
		return true
	}

	return false
}

// SetRiskType gets a reference to the given RiskTypes and assigns it to the RiskType field.
func (o *RiskTypesPostRequest) SetRiskType(v RiskTypes) {
	o.RiskType = &v
}

func (o RiskTypesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskTypesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RiskType) {
		toSerialize["risk_type"] = o.RiskType
	}
	return toSerialize, nil
}

type NullableRiskTypesPostRequest struct {
	value *RiskTypesPostRequest
	isSet bool
}

func (v NullableRiskTypesPostRequest) Get() *RiskTypesPostRequest {
	return v.value
}

func (v *NullableRiskTypesPostRequest) Set(val *RiskTypesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskTypesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskTypesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskTypesPostRequest(val *RiskTypesPostRequest) *NullableRiskTypesPostRequest {
	return &NullableRiskTypesPostRequest{value: val, isSet: true}
}

func (v NullableRiskTypesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskTypesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


