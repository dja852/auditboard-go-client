/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Issues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Issues{}

// Issues struct for Issues
type Issues struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	Status *string `json:"status,omitempty"`
	Title *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
	PotentialRisk *string `json:"potential_risk,omitempty"`
	IndividualsPresent *string `json:"individuals_present,omitempty"`
	// Note: This is a Foreign Key to `deficiency_levels.id`.<fk table='deficiency_levels' column='id'/>
	DeficiencyLevelId *int32 `json:"deficiency_level_id,omitempty"`
	QualitativeFactors *string `json:"qualitative_factors,omitempty"`
	// Note: This is a Foreign Key to `issue_idents.id`.<fk table='issue_idents' column='id'/>
	IssueIdentId *int32 `json:"issue_ident_id,omitempty"`
	GrossExposure *string `json:"gross_exposure,omitempty"`
	// Note: This is a Foreign Key to `magnitudes.id`.<fk table='magnitudes' column='id'/>
	MagnitudeId *int32 `json:"magnitude_id,omitempty"`
	// Note: This is a Foreign Key to `likelihoods.id`.<fk table='likelihoods' column='id'/>
	LikelihoodId *int32 `json:"likelihood_id,omitempty"`
	// Note: This is a Foreign Key to `aggregation_references.id`.<fk table='aggregation_references' column='id'/>
	AggregationReferenceId *int32 `json:"aggregation_reference_id,omitempty"`
	AdjustedExposure *string `json:"adjusted_exposure,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	CreatorUserId *int32 `json:"creator_user_id,omitempty"`
	IdentifiedDate *string `json:"identified_date,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Note: This is a Foreign Key to `controls_data.id`.<fk table='controls_data' column='id'/>
	ControlsDatumId *int32 `json:"controls_datum_id,omitempty"`
	// Note: This is a Foreign Key to `tests.id`.<fk table='tests' column='id'/>
	TestId *int32 `json:"test_id,omitempty"`
	// Note: This is a Foreign Key to `test_sections.id`.<fk table='test_sections' column='id'/>
	TestSectionId *int32 `json:"test_section_id,omitempty"`
	Notes *string `json:"notes,omitempty"`
	// Note: This is a Foreign Key to `issues.id`.<fk table='issues' column='id'/>
	ReferenceIssueId *int32 `json:"reference_issue_id,omitempty"`
	// Note: This is a Foreign Key to `archives.id`.<fk table='archives' column='id'/>
	ArchiveId *int32 `json:"archive_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	TesterUserId *int32 `json:"tester_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ReviewerUserId *int32 `json:"reviewer_user_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audits.id`.<fk table='ops_audits' column='id'/>
	OpsAuditId *int32 `json:"ops_audit_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_items.id`.<fk table='ops_audit_items' column='id'/>
	OpsAuditItemId *int32 `json:"ops_audit_item_id,omitempty"`
	Type string `json:"type"`
	// Note: This is a Foreign Key to `internal_control_components.id`.<fk table='internal_control_components' column='id'/>
	InternalControlComponentId *int32 `json:"internal_control_component_id,omitempty"`
	ExternalPlannedConfirmDate *string `json:"external_planned_confirm_date,omitempty"`
	Disclosure *string `json:"disclosure,omitempty"`
	ExternalConfirmDate *string `json:"external_confirm_date,omitempty"`
	PendingRemediationDate *string `json:"pending_remediation_date,omitempty"`
	ClosedDate *string `json:"closed_date,omitempty"`
	InactiveDate *string `json:"inactive_date,omitempty"`
	ReopenDate *string `json:"reopen_date,omitempty"`
	OpenDate *string `json:"open_date,omitempty"`
	AmendDate *string `json:"amend_date,omitempty"`
	RemediatedDate *string `json:"remediated_date,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	OpenByUserId *int32 `json:"open_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ReopenByUserId *int32 `json:"reopen_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	PendingRemediationByUserId *int32 `json:"pending_remediation_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	RemediatedByUserId *int32 `json:"remediated_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ClosedByUserId *int32 `json:"closed_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	AmendByUserId *int32 `json:"amend_by_user_id,omitempty"`
	Flattened interface{} `json:"flattened,omitempty"`
	// Note: This is a Foreign Key to `issue_ratings.id`.<fk table='issue_ratings' column='id'/>
	IssueRatingId *int32 `json:"issue_rating_id,omitempty"`
	// Note: This is a Foreign Key to `sox_impacts.id`.<fk table='sox_impacts' column='id'/>
	SoxImpactId *int32 `json:"sox_impact_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select1_options.id`.<fk table='issue_custom_select1_options' column='id'/>
	IssueCustomSelect1OptionId *int32 `json:"issue_custom_select1_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select2_options.id`.<fk table='issue_custom_select2_options' column='id'/>
	IssueCustomSelect2OptionId *int32 `json:"issue_custom_select2_option_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	VicePresidentUserId *int32 `json:"vice_president_user_id,omitempty"`
	IsFlattened *bool `json:"is_flattened,omitempty"`
	RemediationOwners interface{} `json:"remediation_owners,omitempty"`
	ReferenceMeta interface{} `json:"reference_meta,omitempty"`
	Totals interface{} `json:"totals,omitempty"`
	IsArchived *bool `json:"is_archived,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select3_options.id`.<fk table='issue_custom_select3_options' column='id'/>
	IssueCustomSelect3OptionId *int32 `json:"issue_custom_select3_option_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	AdditionalAuditorUserId *int32 `json:"additional_auditor_user_id,omitempty"`
	InternalAuditValidationDate *string `json:"internal_audit_validation_date,omitempty"`
	CustomText1 *string `json:"custom_text1,omitempty"`
	CustomText2 *string `json:"custom_text2,omitempty"`
	CustomText3 *string `json:"custom_text3,omitempty"`
	CustomText4 *string `json:"custom_text4,omitempty"`
	CustomText5 *string `json:"custom_text5,omitempty"`
	CustomText6 *string `json:"custom_text6,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select4_options.id`.<fk table='issue_custom_select4_options' column='id'/>
	IssueCustomSelect4OptionId *int32 `json:"issue_custom_select4_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select5_options.id`.<fk table='issue_custom_select5_options' column='id'/>
	IssueCustomSelect5OptionId *int32 `json:"issue_custom_select5_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select6_options.id`.<fk table='issue_custom_select6_options' column='id'/>
	IssueCustomSelect6OptionId *int32 `json:"issue_custom_select6_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select7_options.id`.<fk table='issue_custom_select7_options' column='id'/>
	IssueCustomSelect7OptionId *int32 `json:"issue_custom_select7_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select8_options.id`.<fk table='issue_custom_select8_options' column='id'/>
	IssueCustomSelect8OptionId *int32 `json:"issue_custom_select8_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_categories.id`.<fk table='issue_categories' column='id'/>
	IssueCategoryId int32 `json:"issue_category_id"`
	IssuesourceableId *int32 `json:"issuesourceable_id,omitempty"`
	IssuesourceableType *string `json:"issuesourceable_type,omitempty"`
	FinanceProcessOwners interface{} `json:"finance_process_owners,omitempty"`
	BusinessProcessOwners interface{} `json:"business_process_owners,omitempty"`
	Scopes interface{} `json:"scopes"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ExecutiveUserId *int32 `json:"executive_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	SeniorOwnerUserId *int32 `json:"senior_owner_user_id,omitempty"`
	FirstRemediatedDate *string `json:"first_remediated_date,omitempty"`
	FirstPendingRemediationDate *string `json:"first_pending_remediation_date,omitempty"`
	FirstClosedDate *string `json:"first_closed_date,omitempty"`
	CustomCurrency1 *float32 `json:"custom_currency1,omitempty"`
	CustomCurrency2 *float32 `json:"custom_currency2,omitempty"`
	CustomCurrency3 *float32 `json:"custom_currency3,omitempty"`
	CustomCurrency4 *float32 `json:"custom_currency4,omitempty"`
	CustomDecimal1 *float32 `json:"custom_decimal1,omitempty"`
	CustomDecimal2 *float32 `json:"custom_decimal2,omitempty"`
	CustomDecimal3 *float32 `json:"custom_decimal3,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	FindingOwnerUserId *int32 `json:"finding_owner_user_id,omitempty"`
	CustomDate1 *string `json:"custom_date1,omitempty"`
	CustomDate2 *string `json:"custom_date2,omitempty"`
	CustomDate3 *string `json:"custom_date3,omitempty"`
	CustomDate4 *string `json:"custom_date4,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select9_options.id`.<fk table='issue_custom_select9_options' column='id'/>
	IssueCustomSelect9OptionId *int32 `json:"issue_custom_select9_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select10_options.id`.<fk table='issue_custom_select10_options' column='id'/>
	IssueCustomSelect10OptionId *int32 `json:"issue_custom_select10_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select11_options.id`.<fk table='issue_custom_select11_options' column='id'/>
	IssueCustomSelect11OptionId *int32 `json:"issue_custom_select11_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select12_options.id`.<fk table='issue_custom_select12_options' column='id'/>
	IssueCustomSelect12OptionId *int32 `json:"issue_custom_select12_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select13_options.id`.<fk table='issue_custom_select13_options' column='id'/>
	IssueCustomSelect13OptionId *int32 `json:"issue_custom_select13_option_id,omitempty"`
	// Note: This is a Foreign Key to `issue_custom_select14_options.id`.<fk table='issue_custom_select14_options' column='id'/>
	IssueCustomSelect14OptionId *int32 `json:"issue_custom_select14_option_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	CancelByUserId *int32 `json:"cancel_by_user_id,omitempty"`
	CancelDate *string `json:"cancel_date,omitempty"`
	FirstCancelDate *string `json:"first_cancel_date,omitempty"`
	LastActionPlanDueDate *string `json:"last_action_plan_due_date,omitempty"`
	CancelReason *string `json:"cancel_reason,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	DraftByUserId *int32 `json:"draft_by_user_id,omitempty"`
	DraftDate *string `json:"draft_date,omitempty"`
	FirstDraftDate *string `json:"first_draft_date,omitempty"`
	OpenRevisionCount int32 `json:"open_revision_count"`
	CustomText7 *string `json:"custom_text7,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	CreatedByUserId *int32 `json:"created_by_user_id,omitempty"`
	FieldData interface{} `json:"field_data,omitempty"`
	// Note: This is a Foreign Key to `compliance_assessments.id`.<fk table='compliance_assessments' column='id'/>
	ComplianceAssessmentId *int32 `json:"compliance_assessment_id,omitempty"`
	// Note: This is a Foreign Key to `compliance_assessment_items.id`.<fk table='compliance_assessment_items' column='id'/>
	ComplianceAssessmentItemId *int32 `json:"compliance_assessment_item_id,omitempty"`
	// Note: This is a Foreign Key to `audit_surveys.id`.<fk table='audit_surveys' column='id'/>
	AuditSurveyId *int32 `json:"audit_survey_id,omitempty"`
}

type _Issues Issues

// NewIssues instantiates a new Issues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssues(type_ string, issueCategoryId int32, scopes interface{}, openRevisionCount int32) *Issues {
	this := Issues{}
	this.Type = type_
	var isFlattened bool = false
	this.IsFlattened = &isFlattened
	var isArchived bool = false
	this.IsArchived = &isArchived
	this.IssueCategoryId = issueCategoryId
	this.Scopes = scopes
	this.OpenRevisionCount = openRevisionCount
	return &this
}

// NewIssuesWithDefaults instantiates a new Issues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssuesWithDefaults() *Issues {
	this := Issues{}
	var isFlattened bool = false
	this.IsFlattened = &isFlattened
	var isArchived bool = false
	this.IsArchived = &isArchived
	var openRevisionCount int32 = 0
	this.OpenRevisionCount = openRevisionCount
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Issues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Issues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Issues) SetId(v int32) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Issues) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Issues) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Issues) SetStatus(v string) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Issues) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Issues) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Issues) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Issues) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Issues) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Issues) SetDescription(v string) {
	o.Description = &v
}

// GetPotentialRisk returns the PotentialRisk field value if set, zero value otherwise.
func (o *Issues) GetPotentialRisk() string {
	if o == nil || IsNil(o.PotentialRisk) {
		var ret string
		return ret
	}
	return *o.PotentialRisk
}

// GetPotentialRiskOk returns a tuple with the PotentialRisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetPotentialRiskOk() (*string, bool) {
	if o == nil || IsNil(o.PotentialRisk) {
		return nil, false
	}
	return o.PotentialRisk, true
}

// HasPotentialRisk returns a boolean if a field has been set.
func (o *Issues) HasPotentialRisk() bool {
	if o != nil && !IsNil(o.PotentialRisk) {
		return true
	}

	return false
}

// SetPotentialRisk gets a reference to the given string and assigns it to the PotentialRisk field.
func (o *Issues) SetPotentialRisk(v string) {
	o.PotentialRisk = &v
}

// GetIndividualsPresent returns the IndividualsPresent field value if set, zero value otherwise.
func (o *Issues) GetIndividualsPresent() string {
	if o == nil || IsNil(o.IndividualsPresent) {
		var ret string
		return ret
	}
	return *o.IndividualsPresent
}

// GetIndividualsPresentOk returns a tuple with the IndividualsPresent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIndividualsPresentOk() (*string, bool) {
	if o == nil || IsNil(o.IndividualsPresent) {
		return nil, false
	}
	return o.IndividualsPresent, true
}

// HasIndividualsPresent returns a boolean if a field has been set.
func (o *Issues) HasIndividualsPresent() bool {
	if o != nil && !IsNil(o.IndividualsPresent) {
		return true
	}

	return false
}

// SetIndividualsPresent gets a reference to the given string and assigns it to the IndividualsPresent field.
func (o *Issues) SetIndividualsPresent(v string) {
	o.IndividualsPresent = &v
}

// GetDeficiencyLevelId returns the DeficiencyLevelId field value if set, zero value otherwise.
func (o *Issues) GetDeficiencyLevelId() int32 {
	if o == nil || IsNil(o.DeficiencyLevelId) {
		var ret int32
		return ret
	}
	return *o.DeficiencyLevelId
}

// GetDeficiencyLevelIdOk returns a tuple with the DeficiencyLevelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetDeficiencyLevelIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DeficiencyLevelId) {
		return nil, false
	}
	return o.DeficiencyLevelId, true
}

// HasDeficiencyLevelId returns a boolean if a field has been set.
func (o *Issues) HasDeficiencyLevelId() bool {
	if o != nil && !IsNil(o.DeficiencyLevelId) {
		return true
	}

	return false
}

// SetDeficiencyLevelId gets a reference to the given int32 and assigns it to the DeficiencyLevelId field.
func (o *Issues) SetDeficiencyLevelId(v int32) {
	o.DeficiencyLevelId = &v
}

// GetQualitativeFactors returns the QualitativeFactors field value if set, zero value otherwise.
func (o *Issues) GetQualitativeFactors() string {
	if o == nil || IsNil(o.QualitativeFactors) {
		var ret string
		return ret
	}
	return *o.QualitativeFactors
}

// GetQualitativeFactorsOk returns a tuple with the QualitativeFactors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetQualitativeFactorsOk() (*string, bool) {
	if o == nil || IsNil(o.QualitativeFactors) {
		return nil, false
	}
	return o.QualitativeFactors, true
}

// HasQualitativeFactors returns a boolean if a field has been set.
func (o *Issues) HasQualitativeFactors() bool {
	if o != nil && !IsNil(o.QualitativeFactors) {
		return true
	}

	return false
}

// SetQualitativeFactors gets a reference to the given string and assigns it to the QualitativeFactors field.
func (o *Issues) SetQualitativeFactors(v string) {
	o.QualitativeFactors = &v
}

// GetIssueIdentId returns the IssueIdentId field value if set, zero value otherwise.
func (o *Issues) GetIssueIdentId() int32 {
	if o == nil || IsNil(o.IssueIdentId) {
		var ret int32
		return ret
	}
	return *o.IssueIdentId
}

// GetIssueIdentIdOk returns a tuple with the IssueIdentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueIdentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueIdentId) {
		return nil, false
	}
	return o.IssueIdentId, true
}

// HasIssueIdentId returns a boolean if a field has been set.
func (o *Issues) HasIssueIdentId() bool {
	if o != nil && !IsNil(o.IssueIdentId) {
		return true
	}

	return false
}

// SetIssueIdentId gets a reference to the given int32 and assigns it to the IssueIdentId field.
func (o *Issues) SetIssueIdentId(v int32) {
	o.IssueIdentId = &v
}

// GetGrossExposure returns the GrossExposure field value if set, zero value otherwise.
func (o *Issues) GetGrossExposure() string {
	if o == nil || IsNil(o.GrossExposure) {
		var ret string
		return ret
	}
	return *o.GrossExposure
}

// GetGrossExposureOk returns a tuple with the GrossExposure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetGrossExposureOk() (*string, bool) {
	if o == nil || IsNil(o.GrossExposure) {
		return nil, false
	}
	return o.GrossExposure, true
}

// HasGrossExposure returns a boolean if a field has been set.
func (o *Issues) HasGrossExposure() bool {
	if o != nil && !IsNil(o.GrossExposure) {
		return true
	}

	return false
}

// SetGrossExposure gets a reference to the given string and assigns it to the GrossExposure field.
func (o *Issues) SetGrossExposure(v string) {
	o.GrossExposure = &v
}

// GetMagnitudeId returns the MagnitudeId field value if set, zero value otherwise.
func (o *Issues) GetMagnitudeId() int32 {
	if o == nil || IsNil(o.MagnitudeId) {
		var ret int32
		return ret
	}
	return *o.MagnitudeId
}

// GetMagnitudeIdOk returns a tuple with the MagnitudeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetMagnitudeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MagnitudeId) {
		return nil, false
	}
	return o.MagnitudeId, true
}

// HasMagnitudeId returns a boolean if a field has been set.
func (o *Issues) HasMagnitudeId() bool {
	if o != nil && !IsNil(o.MagnitudeId) {
		return true
	}

	return false
}

// SetMagnitudeId gets a reference to the given int32 and assigns it to the MagnitudeId field.
func (o *Issues) SetMagnitudeId(v int32) {
	o.MagnitudeId = &v
}

// GetLikelihoodId returns the LikelihoodId field value if set, zero value otherwise.
func (o *Issues) GetLikelihoodId() int32 {
	if o == nil || IsNil(o.LikelihoodId) {
		var ret int32
		return ret
	}
	return *o.LikelihoodId
}

// GetLikelihoodIdOk returns a tuple with the LikelihoodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetLikelihoodIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LikelihoodId) {
		return nil, false
	}
	return o.LikelihoodId, true
}

// HasLikelihoodId returns a boolean if a field has been set.
func (o *Issues) HasLikelihoodId() bool {
	if o != nil && !IsNil(o.LikelihoodId) {
		return true
	}

	return false
}

// SetLikelihoodId gets a reference to the given int32 and assigns it to the LikelihoodId field.
func (o *Issues) SetLikelihoodId(v int32) {
	o.LikelihoodId = &v
}

// GetAggregationReferenceId returns the AggregationReferenceId field value if set, zero value otherwise.
func (o *Issues) GetAggregationReferenceId() int32 {
	if o == nil || IsNil(o.AggregationReferenceId) {
		var ret int32
		return ret
	}
	return *o.AggregationReferenceId
}

// GetAggregationReferenceIdOk returns a tuple with the AggregationReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetAggregationReferenceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AggregationReferenceId) {
		return nil, false
	}
	return o.AggregationReferenceId, true
}

// HasAggregationReferenceId returns a boolean if a field has been set.
func (o *Issues) HasAggregationReferenceId() bool {
	if o != nil && !IsNil(o.AggregationReferenceId) {
		return true
	}

	return false
}

// SetAggregationReferenceId gets a reference to the given int32 and assigns it to the AggregationReferenceId field.
func (o *Issues) SetAggregationReferenceId(v int32) {
	o.AggregationReferenceId = &v
}

// GetAdjustedExposure returns the AdjustedExposure field value if set, zero value otherwise.
func (o *Issues) GetAdjustedExposure() string {
	if o == nil || IsNil(o.AdjustedExposure) {
		var ret string
		return ret
	}
	return *o.AdjustedExposure
}

// GetAdjustedExposureOk returns a tuple with the AdjustedExposure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetAdjustedExposureOk() (*string, bool) {
	if o == nil || IsNil(o.AdjustedExposure) {
		return nil, false
	}
	return o.AdjustedExposure, true
}

// HasAdjustedExposure returns a boolean if a field has been set.
func (o *Issues) HasAdjustedExposure() bool {
	if o != nil && !IsNil(o.AdjustedExposure) {
		return true
	}

	return false
}

// SetAdjustedExposure gets a reference to the given string and assigns it to the AdjustedExposure field.
func (o *Issues) SetAdjustedExposure(v string) {
	o.AdjustedExposure = &v
}

// GetCreatorUserId returns the CreatorUserId field value if set, zero value otherwise.
func (o *Issues) GetCreatorUserId() int32 {
	if o == nil || IsNil(o.CreatorUserId) {
		var ret int32
		return ret
	}
	return *o.CreatorUserId
}

// GetCreatorUserIdOk returns a tuple with the CreatorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCreatorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatorUserId) {
		return nil, false
	}
	return o.CreatorUserId, true
}

// HasCreatorUserId returns a boolean if a field has been set.
func (o *Issues) HasCreatorUserId() bool {
	if o != nil && !IsNil(o.CreatorUserId) {
		return true
	}

	return false
}

// SetCreatorUserId gets a reference to the given int32 and assigns it to the CreatorUserId field.
func (o *Issues) SetCreatorUserId(v int32) {
	o.CreatorUserId = &v
}

// GetIdentifiedDate returns the IdentifiedDate field value if set, zero value otherwise.
func (o *Issues) GetIdentifiedDate() string {
	if o == nil || IsNil(o.IdentifiedDate) {
		var ret string
		return ret
	}
	return *o.IdentifiedDate
}

// GetIdentifiedDateOk returns a tuple with the IdentifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIdentifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.IdentifiedDate) {
		return nil, false
	}
	return o.IdentifiedDate, true
}

// HasIdentifiedDate returns a boolean if a field has been set.
func (o *Issues) HasIdentifiedDate() bool {
	if o != nil && !IsNil(o.IdentifiedDate) {
		return true
	}

	return false
}

// SetIdentifiedDate gets a reference to the given string and assigns it to the IdentifiedDate field.
func (o *Issues) SetIdentifiedDate(v string) {
	o.IdentifiedDate = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *Issues) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *Issues) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *Issues) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Issues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Issues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Issues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Issues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Issues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *Issues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetControlsDatumId returns the ControlsDatumId field value if set, zero value otherwise.
func (o *Issues) GetControlsDatumId() int32 {
	if o == nil || IsNil(o.ControlsDatumId) {
		var ret int32
		return ret
	}
	return *o.ControlsDatumId
}

// GetControlsDatumIdOk returns a tuple with the ControlsDatumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetControlsDatumIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ControlsDatumId) {
		return nil, false
	}
	return o.ControlsDatumId, true
}

// HasControlsDatumId returns a boolean if a field has been set.
func (o *Issues) HasControlsDatumId() bool {
	if o != nil && !IsNil(o.ControlsDatumId) {
		return true
	}

	return false
}

// SetControlsDatumId gets a reference to the given int32 and assigns it to the ControlsDatumId field.
func (o *Issues) SetControlsDatumId(v int32) {
	o.ControlsDatumId = &v
}

// GetTestId returns the TestId field value if set, zero value otherwise.
func (o *Issues) GetTestId() int32 {
	if o == nil || IsNil(o.TestId) {
		var ret int32
		return ret
	}
	return *o.TestId
}

// GetTestIdOk returns a tuple with the TestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetTestIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestId) {
		return nil, false
	}
	return o.TestId, true
}

// HasTestId returns a boolean if a field has been set.
func (o *Issues) HasTestId() bool {
	if o != nil && !IsNil(o.TestId) {
		return true
	}

	return false
}

// SetTestId gets a reference to the given int32 and assigns it to the TestId field.
func (o *Issues) SetTestId(v int32) {
	o.TestId = &v
}

// GetTestSectionId returns the TestSectionId field value if set, zero value otherwise.
func (o *Issues) GetTestSectionId() int32 {
	if o == nil || IsNil(o.TestSectionId) {
		var ret int32
		return ret
	}
	return *o.TestSectionId
}

// GetTestSectionIdOk returns a tuple with the TestSectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetTestSectionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestSectionId) {
		return nil, false
	}
	return o.TestSectionId, true
}

// HasTestSectionId returns a boolean if a field has been set.
func (o *Issues) HasTestSectionId() bool {
	if o != nil && !IsNil(o.TestSectionId) {
		return true
	}

	return false
}

// SetTestSectionId gets a reference to the given int32 and assigns it to the TestSectionId field.
func (o *Issues) SetTestSectionId(v int32) {
	o.TestSectionId = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *Issues) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *Issues) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *Issues) SetNotes(v string) {
	o.Notes = &v
}

// GetReferenceIssueId returns the ReferenceIssueId field value if set, zero value otherwise.
func (o *Issues) GetReferenceIssueId() int32 {
	if o == nil || IsNil(o.ReferenceIssueId) {
		var ret int32
		return ret
	}
	return *o.ReferenceIssueId
}

// GetReferenceIssueIdOk returns a tuple with the ReferenceIssueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetReferenceIssueIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReferenceIssueId) {
		return nil, false
	}
	return o.ReferenceIssueId, true
}

// HasReferenceIssueId returns a boolean if a field has been set.
func (o *Issues) HasReferenceIssueId() bool {
	if o != nil && !IsNil(o.ReferenceIssueId) {
		return true
	}

	return false
}

// SetReferenceIssueId gets a reference to the given int32 and assigns it to the ReferenceIssueId field.
func (o *Issues) SetReferenceIssueId(v int32) {
	o.ReferenceIssueId = &v
}

// GetArchiveId returns the ArchiveId field value if set, zero value otherwise.
func (o *Issues) GetArchiveId() int32 {
	if o == nil || IsNil(o.ArchiveId) {
		var ret int32
		return ret
	}
	return *o.ArchiveId
}

// GetArchiveIdOk returns a tuple with the ArchiveId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetArchiveIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ArchiveId) {
		return nil, false
	}
	return o.ArchiveId, true
}

// HasArchiveId returns a boolean if a field has been set.
func (o *Issues) HasArchiveId() bool {
	if o != nil && !IsNil(o.ArchiveId) {
		return true
	}

	return false
}

// SetArchiveId gets a reference to the given int32 and assigns it to the ArchiveId field.
func (o *Issues) SetArchiveId(v int32) {
	o.ArchiveId = &v
}

// GetTesterUserId returns the TesterUserId field value if set, zero value otherwise.
func (o *Issues) GetTesterUserId() int32 {
	if o == nil || IsNil(o.TesterUserId) {
		var ret int32
		return ret
	}
	return *o.TesterUserId
}

// GetTesterUserIdOk returns a tuple with the TesterUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetTesterUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TesterUserId) {
		return nil, false
	}
	return o.TesterUserId, true
}

// HasTesterUserId returns a boolean if a field has been set.
func (o *Issues) HasTesterUserId() bool {
	if o != nil && !IsNil(o.TesterUserId) {
		return true
	}

	return false
}

// SetTesterUserId gets a reference to the given int32 and assigns it to the TesterUserId field.
func (o *Issues) SetTesterUserId(v int32) {
	o.TesterUserId = &v
}

// GetReviewerUserId returns the ReviewerUserId field value if set, zero value otherwise.
func (o *Issues) GetReviewerUserId() int32 {
	if o == nil || IsNil(o.ReviewerUserId) {
		var ret int32
		return ret
	}
	return *o.ReviewerUserId
}

// GetReviewerUserIdOk returns a tuple with the ReviewerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetReviewerUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReviewerUserId) {
		return nil, false
	}
	return o.ReviewerUserId, true
}

// HasReviewerUserId returns a boolean if a field has been set.
func (o *Issues) HasReviewerUserId() bool {
	if o != nil && !IsNil(o.ReviewerUserId) {
		return true
	}

	return false
}

// SetReviewerUserId gets a reference to the given int32 and assigns it to the ReviewerUserId field.
func (o *Issues) SetReviewerUserId(v int32) {
	o.ReviewerUserId = &v
}

// GetOpsAuditId returns the OpsAuditId field value if set, zero value otherwise.
func (o *Issues) GetOpsAuditId() int32 {
	if o == nil || IsNil(o.OpsAuditId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditId
}

// GetOpsAuditIdOk returns a tuple with the OpsAuditId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetOpsAuditIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditId) {
		return nil, false
	}
	return o.OpsAuditId, true
}

// HasOpsAuditId returns a boolean if a field has been set.
func (o *Issues) HasOpsAuditId() bool {
	if o != nil && !IsNil(o.OpsAuditId) {
		return true
	}

	return false
}

// SetOpsAuditId gets a reference to the given int32 and assigns it to the OpsAuditId field.
func (o *Issues) SetOpsAuditId(v int32) {
	o.OpsAuditId = &v
}

// GetOpsAuditItemId returns the OpsAuditItemId field value if set, zero value otherwise.
func (o *Issues) GetOpsAuditItemId() int32 {
	if o == nil || IsNil(o.OpsAuditItemId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditItemId
}

// GetOpsAuditItemIdOk returns a tuple with the OpsAuditItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetOpsAuditItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditItemId) {
		return nil, false
	}
	return o.OpsAuditItemId, true
}

// HasOpsAuditItemId returns a boolean if a field has been set.
func (o *Issues) HasOpsAuditItemId() bool {
	if o != nil && !IsNil(o.OpsAuditItemId) {
		return true
	}

	return false
}

// SetOpsAuditItemId gets a reference to the given int32 and assigns it to the OpsAuditItemId field.
func (o *Issues) SetOpsAuditItemId(v int32) {
	o.OpsAuditItemId = &v
}

// GetType returns the Type field value
func (o *Issues) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Issues) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Issues) SetType(v string) {
	o.Type = v
}

// GetInternalControlComponentId returns the InternalControlComponentId field value if set, zero value otherwise.
func (o *Issues) GetInternalControlComponentId() int32 {
	if o == nil || IsNil(o.InternalControlComponentId) {
		var ret int32
		return ret
	}
	return *o.InternalControlComponentId
}

// GetInternalControlComponentIdOk returns a tuple with the InternalControlComponentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetInternalControlComponentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InternalControlComponentId) {
		return nil, false
	}
	return o.InternalControlComponentId, true
}

// HasInternalControlComponentId returns a boolean if a field has been set.
func (o *Issues) HasInternalControlComponentId() bool {
	if o != nil && !IsNil(o.InternalControlComponentId) {
		return true
	}

	return false
}

// SetInternalControlComponentId gets a reference to the given int32 and assigns it to the InternalControlComponentId field.
func (o *Issues) SetInternalControlComponentId(v int32) {
	o.InternalControlComponentId = &v
}

// GetExternalPlannedConfirmDate returns the ExternalPlannedConfirmDate field value if set, zero value otherwise.
func (o *Issues) GetExternalPlannedConfirmDate() string {
	if o == nil || IsNil(o.ExternalPlannedConfirmDate) {
		var ret string
		return ret
	}
	return *o.ExternalPlannedConfirmDate
}

// GetExternalPlannedConfirmDateOk returns a tuple with the ExternalPlannedConfirmDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetExternalPlannedConfirmDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPlannedConfirmDate) {
		return nil, false
	}
	return o.ExternalPlannedConfirmDate, true
}

// HasExternalPlannedConfirmDate returns a boolean if a field has been set.
func (o *Issues) HasExternalPlannedConfirmDate() bool {
	if o != nil && !IsNil(o.ExternalPlannedConfirmDate) {
		return true
	}

	return false
}

// SetExternalPlannedConfirmDate gets a reference to the given string and assigns it to the ExternalPlannedConfirmDate field.
func (o *Issues) SetExternalPlannedConfirmDate(v string) {
	o.ExternalPlannedConfirmDate = &v
}

// GetDisclosure returns the Disclosure field value if set, zero value otherwise.
func (o *Issues) GetDisclosure() string {
	if o == nil || IsNil(o.Disclosure) {
		var ret string
		return ret
	}
	return *o.Disclosure
}

// GetDisclosureOk returns a tuple with the Disclosure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetDisclosureOk() (*string, bool) {
	if o == nil || IsNil(o.Disclosure) {
		return nil, false
	}
	return o.Disclosure, true
}

// HasDisclosure returns a boolean if a field has been set.
func (o *Issues) HasDisclosure() bool {
	if o != nil && !IsNil(o.Disclosure) {
		return true
	}

	return false
}

// SetDisclosure gets a reference to the given string and assigns it to the Disclosure field.
func (o *Issues) SetDisclosure(v string) {
	o.Disclosure = &v
}

// GetExternalConfirmDate returns the ExternalConfirmDate field value if set, zero value otherwise.
func (o *Issues) GetExternalConfirmDate() string {
	if o == nil || IsNil(o.ExternalConfirmDate) {
		var ret string
		return ret
	}
	return *o.ExternalConfirmDate
}

// GetExternalConfirmDateOk returns a tuple with the ExternalConfirmDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetExternalConfirmDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalConfirmDate) {
		return nil, false
	}
	return o.ExternalConfirmDate, true
}

// HasExternalConfirmDate returns a boolean if a field has been set.
func (o *Issues) HasExternalConfirmDate() bool {
	if o != nil && !IsNil(o.ExternalConfirmDate) {
		return true
	}

	return false
}

// SetExternalConfirmDate gets a reference to the given string and assigns it to the ExternalConfirmDate field.
func (o *Issues) SetExternalConfirmDate(v string) {
	o.ExternalConfirmDate = &v
}

// GetPendingRemediationDate returns the PendingRemediationDate field value if set, zero value otherwise.
func (o *Issues) GetPendingRemediationDate() string {
	if o == nil || IsNil(o.PendingRemediationDate) {
		var ret string
		return ret
	}
	return *o.PendingRemediationDate
}

// GetPendingRemediationDateOk returns a tuple with the PendingRemediationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetPendingRemediationDateOk() (*string, bool) {
	if o == nil || IsNil(o.PendingRemediationDate) {
		return nil, false
	}
	return o.PendingRemediationDate, true
}

// HasPendingRemediationDate returns a boolean if a field has been set.
func (o *Issues) HasPendingRemediationDate() bool {
	if o != nil && !IsNil(o.PendingRemediationDate) {
		return true
	}

	return false
}

// SetPendingRemediationDate gets a reference to the given string and assigns it to the PendingRemediationDate field.
func (o *Issues) SetPendingRemediationDate(v string) {
	o.PendingRemediationDate = &v
}

// GetClosedDate returns the ClosedDate field value if set, zero value otherwise.
func (o *Issues) GetClosedDate() string {
	if o == nil || IsNil(o.ClosedDate) {
		var ret string
		return ret
	}
	return *o.ClosedDate
}

// GetClosedDateOk returns a tuple with the ClosedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetClosedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ClosedDate) {
		return nil, false
	}
	return o.ClosedDate, true
}

// HasClosedDate returns a boolean if a field has been set.
func (o *Issues) HasClosedDate() bool {
	if o != nil && !IsNil(o.ClosedDate) {
		return true
	}

	return false
}

// SetClosedDate gets a reference to the given string and assigns it to the ClosedDate field.
func (o *Issues) SetClosedDate(v string) {
	o.ClosedDate = &v
}

// GetInactiveDate returns the InactiveDate field value if set, zero value otherwise.
func (o *Issues) GetInactiveDate() string {
	if o == nil || IsNil(o.InactiveDate) {
		var ret string
		return ret
	}
	return *o.InactiveDate
}

// GetInactiveDateOk returns a tuple with the InactiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetInactiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.InactiveDate) {
		return nil, false
	}
	return o.InactiveDate, true
}

// HasInactiveDate returns a boolean if a field has been set.
func (o *Issues) HasInactiveDate() bool {
	if o != nil && !IsNil(o.InactiveDate) {
		return true
	}

	return false
}

// SetInactiveDate gets a reference to the given string and assigns it to the InactiveDate field.
func (o *Issues) SetInactiveDate(v string) {
	o.InactiveDate = &v
}

// GetReopenDate returns the ReopenDate field value if set, zero value otherwise.
func (o *Issues) GetReopenDate() string {
	if o == nil || IsNil(o.ReopenDate) {
		var ret string
		return ret
	}
	return *o.ReopenDate
}

// GetReopenDateOk returns a tuple with the ReopenDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetReopenDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReopenDate) {
		return nil, false
	}
	return o.ReopenDate, true
}

// HasReopenDate returns a boolean if a field has been set.
func (o *Issues) HasReopenDate() bool {
	if o != nil && !IsNil(o.ReopenDate) {
		return true
	}

	return false
}

// SetReopenDate gets a reference to the given string and assigns it to the ReopenDate field.
func (o *Issues) SetReopenDate(v string) {
	o.ReopenDate = &v
}

// GetOpenDate returns the OpenDate field value if set, zero value otherwise.
func (o *Issues) GetOpenDate() string {
	if o == nil || IsNil(o.OpenDate) {
		var ret string
		return ret
	}
	return *o.OpenDate
}

// GetOpenDateOk returns a tuple with the OpenDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetOpenDateOk() (*string, bool) {
	if o == nil || IsNil(o.OpenDate) {
		return nil, false
	}
	return o.OpenDate, true
}

// HasOpenDate returns a boolean if a field has been set.
func (o *Issues) HasOpenDate() bool {
	if o != nil && !IsNil(o.OpenDate) {
		return true
	}

	return false
}

// SetOpenDate gets a reference to the given string and assigns it to the OpenDate field.
func (o *Issues) SetOpenDate(v string) {
	o.OpenDate = &v
}

// GetAmendDate returns the AmendDate field value if set, zero value otherwise.
func (o *Issues) GetAmendDate() string {
	if o == nil || IsNil(o.AmendDate) {
		var ret string
		return ret
	}
	return *o.AmendDate
}

// GetAmendDateOk returns a tuple with the AmendDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetAmendDateOk() (*string, bool) {
	if o == nil || IsNil(o.AmendDate) {
		return nil, false
	}
	return o.AmendDate, true
}

// HasAmendDate returns a boolean if a field has been set.
func (o *Issues) HasAmendDate() bool {
	if o != nil && !IsNil(o.AmendDate) {
		return true
	}

	return false
}

// SetAmendDate gets a reference to the given string and assigns it to the AmendDate field.
func (o *Issues) SetAmendDate(v string) {
	o.AmendDate = &v
}

// GetRemediatedDate returns the RemediatedDate field value if set, zero value otherwise.
func (o *Issues) GetRemediatedDate() string {
	if o == nil || IsNil(o.RemediatedDate) {
		var ret string
		return ret
	}
	return *o.RemediatedDate
}

// GetRemediatedDateOk returns a tuple with the RemediatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetRemediatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.RemediatedDate) {
		return nil, false
	}
	return o.RemediatedDate, true
}

// HasRemediatedDate returns a boolean if a field has been set.
func (o *Issues) HasRemediatedDate() bool {
	if o != nil && !IsNil(o.RemediatedDate) {
		return true
	}

	return false
}

// SetRemediatedDate gets a reference to the given string and assigns it to the RemediatedDate field.
func (o *Issues) SetRemediatedDate(v string) {
	o.RemediatedDate = &v
}

// GetOpenByUserId returns the OpenByUserId field value if set, zero value otherwise.
func (o *Issues) GetOpenByUserId() int32 {
	if o == nil || IsNil(o.OpenByUserId) {
		var ret int32
		return ret
	}
	return *o.OpenByUserId
}

// GetOpenByUserIdOk returns a tuple with the OpenByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetOpenByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpenByUserId) {
		return nil, false
	}
	return o.OpenByUserId, true
}

// HasOpenByUserId returns a boolean if a field has been set.
func (o *Issues) HasOpenByUserId() bool {
	if o != nil && !IsNil(o.OpenByUserId) {
		return true
	}

	return false
}

// SetOpenByUserId gets a reference to the given int32 and assigns it to the OpenByUserId field.
func (o *Issues) SetOpenByUserId(v int32) {
	o.OpenByUserId = &v
}

// GetReopenByUserId returns the ReopenByUserId field value if set, zero value otherwise.
func (o *Issues) GetReopenByUserId() int32 {
	if o == nil || IsNil(o.ReopenByUserId) {
		var ret int32
		return ret
	}
	return *o.ReopenByUserId
}

// GetReopenByUserIdOk returns a tuple with the ReopenByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetReopenByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReopenByUserId) {
		return nil, false
	}
	return o.ReopenByUserId, true
}

// HasReopenByUserId returns a boolean if a field has been set.
func (o *Issues) HasReopenByUserId() bool {
	if o != nil && !IsNil(o.ReopenByUserId) {
		return true
	}

	return false
}

// SetReopenByUserId gets a reference to the given int32 and assigns it to the ReopenByUserId field.
func (o *Issues) SetReopenByUserId(v int32) {
	o.ReopenByUserId = &v
}

// GetPendingRemediationByUserId returns the PendingRemediationByUserId field value if set, zero value otherwise.
func (o *Issues) GetPendingRemediationByUserId() int32 {
	if o == nil || IsNil(o.PendingRemediationByUserId) {
		var ret int32
		return ret
	}
	return *o.PendingRemediationByUserId
}

// GetPendingRemediationByUserIdOk returns a tuple with the PendingRemediationByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetPendingRemediationByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PendingRemediationByUserId) {
		return nil, false
	}
	return o.PendingRemediationByUserId, true
}

// HasPendingRemediationByUserId returns a boolean if a field has been set.
func (o *Issues) HasPendingRemediationByUserId() bool {
	if o != nil && !IsNil(o.PendingRemediationByUserId) {
		return true
	}

	return false
}

// SetPendingRemediationByUserId gets a reference to the given int32 and assigns it to the PendingRemediationByUserId field.
func (o *Issues) SetPendingRemediationByUserId(v int32) {
	o.PendingRemediationByUserId = &v
}

// GetRemediatedByUserId returns the RemediatedByUserId field value if set, zero value otherwise.
func (o *Issues) GetRemediatedByUserId() int32 {
	if o == nil || IsNil(o.RemediatedByUserId) {
		var ret int32
		return ret
	}
	return *o.RemediatedByUserId
}

// GetRemediatedByUserIdOk returns a tuple with the RemediatedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetRemediatedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RemediatedByUserId) {
		return nil, false
	}
	return o.RemediatedByUserId, true
}

// HasRemediatedByUserId returns a boolean if a field has been set.
func (o *Issues) HasRemediatedByUserId() bool {
	if o != nil && !IsNil(o.RemediatedByUserId) {
		return true
	}

	return false
}

// SetRemediatedByUserId gets a reference to the given int32 and assigns it to the RemediatedByUserId field.
func (o *Issues) SetRemediatedByUserId(v int32) {
	o.RemediatedByUserId = &v
}

// GetClosedByUserId returns the ClosedByUserId field value if set, zero value otherwise.
func (o *Issues) GetClosedByUserId() int32 {
	if o == nil || IsNil(o.ClosedByUserId) {
		var ret int32
		return ret
	}
	return *o.ClosedByUserId
}

// GetClosedByUserIdOk returns a tuple with the ClosedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetClosedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ClosedByUserId) {
		return nil, false
	}
	return o.ClosedByUserId, true
}

// HasClosedByUserId returns a boolean if a field has been set.
func (o *Issues) HasClosedByUserId() bool {
	if o != nil && !IsNil(o.ClosedByUserId) {
		return true
	}

	return false
}

// SetClosedByUserId gets a reference to the given int32 and assigns it to the ClosedByUserId field.
func (o *Issues) SetClosedByUserId(v int32) {
	o.ClosedByUserId = &v
}

// GetAmendByUserId returns the AmendByUserId field value if set, zero value otherwise.
func (o *Issues) GetAmendByUserId() int32 {
	if o == nil || IsNil(o.AmendByUserId) {
		var ret int32
		return ret
	}
	return *o.AmendByUserId
}

// GetAmendByUserIdOk returns a tuple with the AmendByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetAmendByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AmendByUserId) {
		return nil, false
	}
	return o.AmendByUserId, true
}

// HasAmendByUserId returns a boolean if a field has been set.
func (o *Issues) HasAmendByUserId() bool {
	if o != nil && !IsNil(o.AmendByUserId) {
		return true
	}

	return false
}

// SetAmendByUserId gets a reference to the given int32 and assigns it to the AmendByUserId field.
func (o *Issues) SetAmendByUserId(v int32) {
	o.AmendByUserId = &v
}

// GetFlattened returns the Flattened field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Issues) GetFlattened() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Flattened
}

// GetFlattenedOk returns a tuple with the Flattened field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Issues) GetFlattenedOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Flattened) {
		return nil, false
	}
	return &o.Flattened, true
}

// HasFlattened returns a boolean if a field has been set.
func (o *Issues) HasFlattened() bool {
	if o != nil && !IsNil(o.Flattened) {
		return true
	}

	return false
}

// SetFlattened gets a reference to the given interface{} and assigns it to the Flattened field.
func (o *Issues) SetFlattened(v interface{}) {
	o.Flattened = v
}

// GetIssueRatingId returns the IssueRatingId field value if set, zero value otherwise.
func (o *Issues) GetIssueRatingId() int32 {
	if o == nil || IsNil(o.IssueRatingId) {
		var ret int32
		return ret
	}
	return *o.IssueRatingId
}

// GetIssueRatingIdOk returns a tuple with the IssueRatingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueRatingIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueRatingId) {
		return nil, false
	}
	return o.IssueRatingId, true
}

// HasIssueRatingId returns a boolean if a field has been set.
func (o *Issues) HasIssueRatingId() bool {
	if o != nil && !IsNil(o.IssueRatingId) {
		return true
	}

	return false
}

// SetIssueRatingId gets a reference to the given int32 and assigns it to the IssueRatingId field.
func (o *Issues) SetIssueRatingId(v int32) {
	o.IssueRatingId = &v
}

// GetSoxImpactId returns the SoxImpactId field value if set, zero value otherwise.
func (o *Issues) GetSoxImpactId() int32 {
	if o == nil || IsNil(o.SoxImpactId) {
		var ret int32
		return ret
	}
	return *o.SoxImpactId
}

// GetSoxImpactIdOk returns a tuple with the SoxImpactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetSoxImpactIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SoxImpactId) {
		return nil, false
	}
	return o.SoxImpactId, true
}

// HasSoxImpactId returns a boolean if a field has been set.
func (o *Issues) HasSoxImpactId() bool {
	if o != nil && !IsNil(o.SoxImpactId) {
		return true
	}

	return false
}

// SetSoxImpactId gets a reference to the given int32 and assigns it to the SoxImpactId field.
func (o *Issues) SetSoxImpactId(v int32) {
	o.SoxImpactId = &v
}

// GetIssueCustomSelect1OptionId returns the IssueCustomSelect1OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect1OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect1OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect1OptionId
}

// GetIssueCustomSelect1OptionIdOk returns a tuple with the IssueCustomSelect1OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect1OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect1OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect1OptionId, true
}

// HasIssueCustomSelect1OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect1OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect1OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect1OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect1OptionId field.
func (o *Issues) SetIssueCustomSelect1OptionId(v int32) {
	o.IssueCustomSelect1OptionId = &v
}

// GetIssueCustomSelect2OptionId returns the IssueCustomSelect2OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect2OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect2OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect2OptionId
}

// GetIssueCustomSelect2OptionIdOk returns a tuple with the IssueCustomSelect2OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect2OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect2OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect2OptionId, true
}

// HasIssueCustomSelect2OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect2OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect2OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect2OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect2OptionId field.
func (o *Issues) SetIssueCustomSelect2OptionId(v int32) {
	o.IssueCustomSelect2OptionId = &v
}

// GetVicePresidentUserId returns the VicePresidentUserId field value if set, zero value otherwise.
func (o *Issues) GetVicePresidentUserId() int32 {
	if o == nil || IsNil(o.VicePresidentUserId) {
		var ret int32
		return ret
	}
	return *o.VicePresidentUserId
}

// GetVicePresidentUserIdOk returns a tuple with the VicePresidentUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetVicePresidentUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VicePresidentUserId) {
		return nil, false
	}
	return o.VicePresidentUserId, true
}

// HasVicePresidentUserId returns a boolean if a field has been set.
func (o *Issues) HasVicePresidentUserId() bool {
	if o != nil && !IsNil(o.VicePresidentUserId) {
		return true
	}

	return false
}

// SetVicePresidentUserId gets a reference to the given int32 and assigns it to the VicePresidentUserId field.
func (o *Issues) SetVicePresidentUserId(v int32) {
	o.VicePresidentUserId = &v
}

// GetIsFlattened returns the IsFlattened field value if set, zero value otherwise.
func (o *Issues) GetIsFlattened() bool {
	if o == nil || IsNil(o.IsFlattened) {
		var ret bool
		return ret
	}
	return *o.IsFlattened
}

// GetIsFlattenedOk returns a tuple with the IsFlattened field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIsFlattenedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFlattened) {
		return nil, false
	}
	return o.IsFlattened, true
}

// HasIsFlattened returns a boolean if a field has been set.
func (o *Issues) HasIsFlattened() bool {
	if o != nil && !IsNil(o.IsFlattened) {
		return true
	}

	return false
}

// SetIsFlattened gets a reference to the given bool and assigns it to the IsFlattened field.
func (o *Issues) SetIsFlattened(v bool) {
	o.IsFlattened = &v
}

// GetRemediationOwners returns the RemediationOwners field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Issues) GetRemediationOwners() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RemediationOwners
}

// GetRemediationOwnersOk returns a tuple with the RemediationOwners field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Issues) GetRemediationOwnersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RemediationOwners) {
		return nil, false
	}
	return &o.RemediationOwners, true
}

// HasRemediationOwners returns a boolean if a field has been set.
func (o *Issues) HasRemediationOwners() bool {
	if o != nil && !IsNil(o.RemediationOwners) {
		return true
	}

	return false
}

// SetRemediationOwners gets a reference to the given interface{} and assigns it to the RemediationOwners field.
func (o *Issues) SetRemediationOwners(v interface{}) {
	o.RemediationOwners = v
}

// GetReferenceMeta returns the ReferenceMeta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Issues) GetReferenceMeta() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceMeta
}

// GetReferenceMetaOk returns a tuple with the ReferenceMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Issues) GetReferenceMetaOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceMeta) {
		return nil, false
	}
	return &o.ReferenceMeta, true
}

// HasReferenceMeta returns a boolean if a field has been set.
func (o *Issues) HasReferenceMeta() bool {
	if o != nil && !IsNil(o.ReferenceMeta) {
		return true
	}

	return false
}

// SetReferenceMeta gets a reference to the given interface{} and assigns it to the ReferenceMeta field.
func (o *Issues) SetReferenceMeta(v interface{}) {
	o.ReferenceMeta = v
}

// GetTotals returns the Totals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Issues) GetTotals() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Totals
}

// GetTotalsOk returns a tuple with the Totals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Issues) GetTotalsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Totals) {
		return nil, false
	}
	return &o.Totals, true
}

// HasTotals returns a boolean if a field has been set.
func (o *Issues) HasTotals() bool {
	if o != nil && !IsNil(o.Totals) {
		return true
	}

	return false
}

// SetTotals gets a reference to the given interface{} and assigns it to the Totals field.
func (o *Issues) SetTotals(v interface{}) {
	o.Totals = v
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise.
func (o *Issues) GetIsArchived() bool {
	if o == nil || IsNil(o.IsArchived) {
		var ret bool
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIsArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsArchived) {
		return nil, false
	}
	return o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *Issues) HasIsArchived() bool {
	if o != nil && !IsNil(o.IsArchived) {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given bool and assigns it to the IsArchived field.
func (o *Issues) SetIsArchived(v bool) {
	o.IsArchived = &v
}

// GetIssueCustomSelect3OptionId returns the IssueCustomSelect3OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect3OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect3OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect3OptionId
}

// GetIssueCustomSelect3OptionIdOk returns a tuple with the IssueCustomSelect3OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect3OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect3OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect3OptionId, true
}

// HasIssueCustomSelect3OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect3OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect3OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect3OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect3OptionId field.
func (o *Issues) SetIssueCustomSelect3OptionId(v int32) {
	o.IssueCustomSelect3OptionId = &v
}

// GetAdditionalAuditorUserId returns the AdditionalAuditorUserId field value if set, zero value otherwise.
func (o *Issues) GetAdditionalAuditorUserId() int32 {
	if o == nil || IsNil(o.AdditionalAuditorUserId) {
		var ret int32
		return ret
	}
	return *o.AdditionalAuditorUserId
}

// GetAdditionalAuditorUserIdOk returns a tuple with the AdditionalAuditorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetAdditionalAuditorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AdditionalAuditorUserId) {
		return nil, false
	}
	return o.AdditionalAuditorUserId, true
}

// HasAdditionalAuditorUserId returns a boolean if a field has been set.
func (o *Issues) HasAdditionalAuditorUserId() bool {
	if o != nil && !IsNil(o.AdditionalAuditorUserId) {
		return true
	}

	return false
}

// SetAdditionalAuditorUserId gets a reference to the given int32 and assigns it to the AdditionalAuditorUserId field.
func (o *Issues) SetAdditionalAuditorUserId(v int32) {
	o.AdditionalAuditorUserId = &v
}

// GetInternalAuditValidationDate returns the InternalAuditValidationDate field value if set, zero value otherwise.
func (o *Issues) GetInternalAuditValidationDate() string {
	if o == nil || IsNil(o.InternalAuditValidationDate) {
		var ret string
		return ret
	}
	return *o.InternalAuditValidationDate
}

// GetInternalAuditValidationDateOk returns a tuple with the InternalAuditValidationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetInternalAuditValidationDateOk() (*string, bool) {
	if o == nil || IsNil(o.InternalAuditValidationDate) {
		return nil, false
	}
	return o.InternalAuditValidationDate, true
}

// HasInternalAuditValidationDate returns a boolean if a field has been set.
func (o *Issues) HasInternalAuditValidationDate() bool {
	if o != nil && !IsNil(o.InternalAuditValidationDate) {
		return true
	}

	return false
}

// SetInternalAuditValidationDate gets a reference to the given string and assigns it to the InternalAuditValidationDate field.
func (o *Issues) SetInternalAuditValidationDate(v string) {
	o.InternalAuditValidationDate = &v
}

// GetCustomText1 returns the CustomText1 field value if set, zero value otherwise.
func (o *Issues) GetCustomText1() string {
	if o == nil || IsNil(o.CustomText1) {
		var ret string
		return ret
	}
	return *o.CustomText1
}

// GetCustomText1Ok returns a tuple with the CustomText1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomText1Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText1) {
		return nil, false
	}
	return o.CustomText1, true
}

// HasCustomText1 returns a boolean if a field has been set.
func (o *Issues) HasCustomText1() bool {
	if o != nil && !IsNil(o.CustomText1) {
		return true
	}

	return false
}

// SetCustomText1 gets a reference to the given string and assigns it to the CustomText1 field.
func (o *Issues) SetCustomText1(v string) {
	o.CustomText1 = &v
}

// GetCustomText2 returns the CustomText2 field value if set, zero value otherwise.
func (o *Issues) GetCustomText2() string {
	if o == nil || IsNil(o.CustomText2) {
		var ret string
		return ret
	}
	return *o.CustomText2
}

// GetCustomText2Ok returns a tuple with the CustomText2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomText2Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText2) {
		return nil, false
	}
	return o.CustomText2, true
}

// HasCustomText2 returns a boolean if a field has been set.
func (o *Issues) HasCustomText2() bool {
	if o != nil && !IsNil(o.CustomText2) {
		return true
	}

	return false
}

// SetCustomText2 gets a reference to the given string and assigns it to the CustomText2 field.
func (o *Issues) SetCustomText2(v string) {
	o.CustomText2 = &v
}

// GetCustomText3 returns the CustomText3 field value if set, zero value otherwise.
func (o *Issues) GetCustomText3() string {
	if o == nil || IsNil(o.CustomText3) {
		var ret string
		return ret
	}
	return *o.CustomText3
}

// GetCustomText3Ok returns a tuple with the CustomText3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomText3Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText3) {
		return nil, false
	}
	return o.CustomText3, true
}

// HasCustomText3 returns a boolean if a field has been set.
func (o *Issues) HasCustomText3() bool {
	if o != nil && !IsNil(o.CustomText3) {
		return true
	}

	return false
}

// SetCustomText3 gets a reference to the given string and assigns it to the CustomText3 field.
func (o *Issues) SetCustomText3(v string) {
	o.CustomText3 = &v
}

// GetCustomText4 returns the CustomText4 field value if set, zero value otherwise.
func (o *Issues) GetCustomText4() string {
	if o == nil || IsNil(o.CustomText4) {
		var ret string
		return ret
	}
	return *o.CustomText4
}

// GetCustomText4Ok returns a tuple with the CustomText4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomText4Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText4) {
		return nil, false
	}
	return o.CustomText4, true
}

// HasCustomText4 returns a boolean if a field has been set.
func (o *Issues) HasCustomText4() bool {
	if o != nil && !IsNil(o.CustomText4) {
		return true
	}

	return false
}

// SetCustomText4 gets a reference to the given string and assigns it to the CustomText4 field.
func (o *Issues) SetCustomText4(v string) {
	o.CustomText4 = &v
}

// GetCustomText5 returns the CustomText5 field value if set, zero value otherwise.
func (o *Issues) GetCustomText5() string {
	if o == nil || IsNil(o.CustomText5) {
		var ret string
		return ret
	}
	return *o.CustomText5
}

// GetCustomText5Ok returns a tuple with the CustomText5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomText5Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText5) {
		return nil, false
	}
	return o.CustomText5, true
}

// HasCustomText5 returns a boolean if a field has been set.
func (o *Issues) HasCustomText5() bool {
	if o != nil && !IsNil(o.CustomText5) {
		return true
	}

	return false
}

// SetCustomText5 gets a reference to the given string and assigns it to the CustomText5 field.
func (o *Issues) SetCustomText5(v string) {
	o.CustomText5 = &v
}

// GetCustomText6 returns the CustomText6 field value if set, zero value otherwise.
func (o *Issues) GetCustomText6() string {
	if o == nil || IsNil(o.CustomText6) {
		var ret string
		return ret
	}
	return *o.CustomText6
}

// GetCustomText6Ok returns a tuple with the CustomText6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomText6Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText6) {
		return nil, false
	}
	return o.CustomText6, true
}

// HasCustomText6 returns a boolean if a field has been set.
func (o *Issues) HasCustomText6() bool {
	if o != nil && !IsNil(o.CustomText6) {
		return true
	}

	return false
}

// SetCustomText6 gets a reference to the given string and assigns it to the CustomText6 field.
func (o *Issues) SetCustomText6(v string) {
	o.CustomText6 = &v
}

// GetIssueCustomSelect4OptionId returns the IssueCustomSelect4OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect4OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect4OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect4OptionId
}

// GetIssueCustomSelect4OptionIdOk returns a tuple with the IssueCustomSelect4OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect4OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect4OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect4OptionId, true
}

// HasIssueCustomSelect4OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect4OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect4OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect4OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect4OptionId field.
func (o *Issues) SetIssueCustomSelect4OptionId(v int32) {
	o.IssueCustomSelect4OptionId = &v
}

// GetIssueCustomSelect5OptionId returns the IssueCustomSelect5OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect5OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect5OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect5OptionId
}

// GetIssueCustomSelect5OptionIdOk returns a tuple with the IssueCustomSelect5OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect5OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect5OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect5OptionId, true
}

// HasIssueCustomSelect5OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect5OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect5OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect5OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect5OptionId field.
func (o *Issues) SetIssueCustomSelect5OptionId(v int32) {
	o.IssueCustomSelect5OptionId = &v
}

// GetIssueCustomSelect6OptionId returns the IssueCustomSelect6OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect6OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect6OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect6OptionId
}

// GetIssueCustomSelect6OptionIdOk returns a tuple with the IssueCustomSelect6OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect6OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect6OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect6OptionId, true
}

// HasIssueCustomSelect6OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect6OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect6OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect6OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect6OptionId field.
func (o *Issues) SetIssueCustomSelect6OptionId(v int32) {
	o.IssueCustomSelect6OptionId = &v
}

// GetIssueCustomSelect7OptionId returns the IssueCustomSelect7OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect7OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect7OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect7OptionId
}

// GetIssueCustomSelect7OptionIdOk returns a tuple with the IssueCustomSelect7OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect7OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect7OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect7OptionId, true
}

// HasIssueCustomSelect7OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect7OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect7OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect7OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect7OptionId field.
func (o *Issues) SetIssueCustomSelect7OptionId(v int32) {
	o.IssueCustomSelect7OptionId = &v
}

// GetIssueCustomSelect8OptionId returns the IssueCustomSelect8OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect8OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect8OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect8OptionId
}

// GetIssueCustomSelect8OptionIdOk returns a tuple with the IssueCustomSelect8OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect8OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect8OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect8OptionId, true
}

// HasIssueCustomSelect8OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect8OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect8OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect8OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect8OptionId field.
func (o *Issues) SetIssueCustomSelect8OptionId(v int32) {
	o.IssueCustomSelect8OptionId = &v
}

// GetIssueCategoryId returns the IssueCategoryId field value
func (o *Issues) GetIssueCategoryId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IssueCategoryId
}

// GetIssueCategoryIdOk returns a tuple with the IssueCategoryId field value
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCategoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssueCategoryId, true
}

// SetIssueCategoryId sets field value
func (o *Issues) SetIssueCategoryId(v int32) {
	o.IssueCategoryId = v
}

// GetIssuesourceableId returns the IssuesourceableId field value if set, zero value otherwise.
func (o *Issues) GetIssuesourceableId() int32 {
	if o == nil || IsNil(o.IssuesourceableId) {
		var ret int32
		return ret
	}
	return *o.IssuesourceableId
}

// GetIssuesourceableIdOk returns a tuple with the IssuesourceableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssuesourceableIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssuesourceableId) {
		return nil, false
	}
	return o.IssuesourceableId, true
}

// HasIssuesourceableId returns a boolean if a field has been set.
func (o *Issues) HasIssuesourceableId() bool {
	if o != nil && !IsNil(o.IssuesourceableId) {
		return true
	}

	return false
}

// SetIssuesourceableId gets a reference to the given int32 and assigns it to the IssuesourceableId field.
func (o *Issues) SetIssuesourceableId(v int32) {
	o.IssuesourceableId = &v
}

// GetIssuesourceableType returns the IssuesourceableType field value if set, zero value otherwise.
func (o *Issues) GetIssuesourceableType() string {
	if o == nil || IsNil(o.IssuesourceableType) {
		var ret string
		return ret
	}
	return *o.IssuesourceableType
}

// GetIssuesourceableTypeOk returns a tuple with the IssuesourceableType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssuesourceableTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IssuesourceableType) {
		return nil, false
	}
	return o.IssuesourceableType, true
}

// HasIssuesourceableType returns a boolean if a field has been set.
func (o *Issues) HasIssuesourceableType() bool {
	if o != nil && !IsNil(o.IssuesourceableType) {
		return true
	}

	return false
}

// SetIssuesourceableType gets a reference to the given string and assigns it to the IssuesourceableType field.
func (o *Issues) SetIssuesourceableType(v string) {
	o.IssuesourceableType = &v
}

// GetFinanceProcessOwners returns the FinanceProcessOwners field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Issues) GetFinanceProcessOwners() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FinanceProcessOwners
}

// GetFinanceProcessOwnersOk returns a tuple with the FinanceProcessOwners field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Issues) GetFinanceProcessOwnersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FinanceProcessOwners) {
		return nil, false
	}
	return &o.FinanceProcessOwners, true
}

// HasFinanceProcessOwners returns a boolean if a field has been set.
func (o *Issues) HasFinanceProcessOwners() bool {
	if o != nil && !IsNil(o.FinanceProcessOwners) {
		return true
	}

	return false
}

// SetFinanceProcessOwners gets a reference to the given interface{} and assigns it to the FinanceProcessOwners field.
func (o *Issues) SetFinanceProcessOwners(v interface{}) {
	o.FinanceProcessOwners = v
}

// GetBusinessProcessOwners returns the BusinessProcessOwners field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Issues) GetBusinessProcessOwners() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.BusinessProcessOwners
}

// GetBusinessProcessOwnersOk returns a tuple with the BusinessProcessOwners field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Issues) GetBusinessProcessOwnersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.BusinessProcessOwners) {
		return nil, false
	}
	return &o.BusinessProcessOwners, true
}

// HasBusinessProcessOwners returns a boolean if a field has been set.
func (o *Issues) HasBusinessProcessOwners() bool {
	if o != nil && !IsNil(o.BusinessProcessOwners) {
		return true
	}

	return false
}

// SetBusinessProcessOwners gets a reference to the given interface{} and assigns it to the BusinessProcessOwners field.
func (o *Issues) SetBusinessProcessOwners(v interface{}) {
	o.BusinessProcessOwners = v
}

// GetScopes returns the Scopes field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *Issues) GetScopes() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Issues) GetScopesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return &o.Scopes, true
}

// SetScopes sets field value
func (o *Issues) SetScopes(v interface{}) {
	o.Scopes = v
}

// GetExecutiveUserId returns the ExecutiveUserId field value if set, zero value otherwise.
func (o *Issues) GetExecutiveUserId() int32 {
	if o == nil || IsNil(o.ExecutiveUserId) {
		var ret int32
		return ret
	}
	return *o.ExecutiveUserId
}

// GetExecutiveUserIdOk returns a tuple with the ExecutiveUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetExecutiveUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ExecutiveUserId) {
		return nil, false
	}
	return o.ExecutiveUserId, true
}

// HasExecutiveUserId returns a boolean if a field has been set.
func (o *Issues) HasExecutiveUserId() bool {
	if o != nil && !IsNil(o.ExecutiveUserId) {
		return true
	}

	return false
}

// SetExecutiveUserId gets a reference to the given int32 and assigns it to the ExecutiveUserId field.
func (o *Issues) SetExecutiveUserId(v int32) {
	o.ExecutiveUserId = &v
}

// GetSeniorOwnerUserId returns the SeniorOwnerUserId field value if set, zero value otherwise.
func (o *Issues) GetSeniorOwnerUserId() int32 {
	if o == nil || IsNil(o.SeniorOwnerUserId) {
		var ret int32
		return ret
	}
	return *o.SeniorOwnerUserId
}

// GetSeniorOwnerUserIdOk returns a tuple with the SeniorOwnerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetSeniorOwnerUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SeniorOwnerUserId) {
		return nil, false
	}
	return o.SeniorOwnerUserId, true
}

// HasSeniorOwnerUserId returns a boolean if a field has been set.
func (o *Issues) HasSeniorOwnerUserId() bool {
	if o != nil && !IsNil(o.SeniorOwnerUserId) {
		return true
	}

	return false
}

// SetSeniorOwnerUserId gets a reference to the given int32 and assigns it to the SeniorOwnerUserId field.
func (o *Issues) SetSeniorOwnerUserId(v int32) {
	o.SeniorOwnerUserId = &v
}

// GetFirstRemediatedDate returns the FirstRemediatedDate field value if set, zero value otherwise.
func (o *Issues) GetFirstRemediatedDate() string {
	if o == nil || IsNil(o.FirstRemediatedDate) {
		var ret string
		return ret
	}
	return *o.FirstRemediatedDate
}

// GetFirstRemediatedDateOk returns a tuple with the FirstRemediatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetFirstRemediatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstRemediatedDate) {
		return nil, false
	}
	return o.FirstRemediatedDate, true
}

// HasFirstRemediatedDate returns a boolean if a field has been set.
func (o *Issues) HasFirstRemediatedDate() bool {
	if o != nil && !IsNil(o.FirstRemediatedDate) {
		return true
	}

	return false
}

// SetFirstRemediatedDate gets a reference to the given string and assigns it to the FirstRemediatedDate field.
func (o *Issues) SetFirstRemediatedDate(v string) {
	o.FirstRemediatedDate = &v
}

// GetFirstPendingRemediationDate returns the FirstPendingRemediationDate field value if set, zero value otherwise.
func (o *Issues) GetFirstPendingRemediationDate() string {
	if o == nil || IsNil(o.FirstPendingRemediationDate) {
		var ret string
		return ret
	}
	return *o.FirstPendingRemediationDate
}

// GetFirstPendingRemediationDateOk returns a tuple with the FirstPendingRemediationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetFirstPendingRemediationDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstPendingRemediationDate) {
		return nil, false
	}
	return o.FirstPendingRemediationDate, true
}

// HasFirstPendingRemediationDate returns a boolean if a field has been set.
func (o *Issues) HasFirstPendingRemediationDate() bool {
	if o != nil && !IsNil(o.FirstPendingRemediationDate) {
		return true
	}

	return false
}

// SetFirstPendingRemediationDate gets a reference to the given string and assigns it to the FirstPendingRemediationDate field.
func (o *Issues) SetFirstPendingRemediationDate(v string) {
	o.FirstPendingRemediationDate = &v
}

// GetFirstClosedDate returns the FirstClosedDate field value if set, zero value otherwise.
func (o *Issues) GetFirstClosedDate() string {
	if o == nil || IsNil(o.FirstClosedDate) {
		var ret string
		return ret
	}
	return *o.FirstClosedDate
}

// GetFirstClosedDateOk returns a tuple with the FirstClosedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetFirstClosedDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstClosedDate) {
		return nil, false
	}
	return o.FirstClosedDate, true
}

// HasFirstClosedDate returns a boolean if a field has been set.
func (o *Issues) HasFirstClosedDate() bool {
	if o != nil && !IsNil(o.FirstClosedDate) {
		return true
	}

	return false
}

// SetFirstClosedDate gets a reference to the given string and assigns it to the FirstClosedDate field.
func (o *Issues) SetFirstClosedDate(v string) {
	o.FirstClosedDate = &v
}

// GetCustomCurrency1 returns the CustomCurrency1 field value if set, zero value otherwise.
func (o *Issues) GetCustomCurrency1() float32 {
	if o == nil || IsNil(o.CustomCurrency1) {
		var ret float32
		return ret
	}
	return *o.CustomCurrency1
}

// GetCustomCurrency1Ok returns a tuple with the CustomCurrency1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomCurrency1Ok() (*float32, bool) {
	if o == nil || IsNil(o.CustomCurrency1) {
		return nil, false
	}
	return o.CustomCurrency1, true
}

// HasCustomCurrency1 returns a boolean if a field has been set.
func (o *Issues) HasCustomCurrency1() bool {
	if o != nil && !IsNil(o.CustomCurrency1) {
		return true
	}

	return false
}

// SetCustomCurrency1 gets a reference to the given float32 and assigns it to the CustomCurrency1 field.
func (o *Issues) SetCustomCurrency1(v float32) {
	o.CustomCurrency1 = &v
}

// GetCustomCurrency2 returns the CustomCurrency2 field value if set, zero value otherwise.
func (o *Issues) GetCustomCurrency2() float32 {
	if o == nil || IsNil(o.CustomCurrency2) {
		var ret float32
		return ret
	}
	return *o.CustomCurrency2
}

// GetCustomCurrency2Ok returns a tuple with the CustomCurrency2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomCurrency2Ok() (*float32, bool) {
	if o == nil || IsNil(o.CustomCurrency2) {
		return nil, false
	}
	return o.CustomCurrency2, true
}

// HasCustomCurrency2 returns a boolean if a field has been set.
func (o *Issues) HasCustomCurrency2() bool {
	if o != nil && !IsNil(o.CustomCurrency2) {
		return true
	}

	return false
}

// SetCustomCurrency2 gets a reference to the given float32 and assigns it to the CustomCurrency2 field.
func (o *Issues) SetCustomCurrency2(v float32) {
	o.CustomCurrency2 = &v
}

// GetCustomCurrency3 returns the CustomCurrency3 field value if set, zero value otherwise.
func (o *Issues) GetCustomCurrency3() float32 {
	if o == nil || IsNil(o.CustomCurrency3) {
		var ret float32
		return ret
	}
	return *o.CustomCurrency3
}

// GetCustomCurrency3Ok returns a tuple with the CustomCurrency3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomCurrency3Ok() (*float32, bool) {
	if o == nil || IsNil(o.CustomCurrency3) {
		return nil, false
	}
	return o.CustomCurrency3, true
}

// HasCustomCurrency3 returns a boolean if a field has been set.
func (o *Issues) HasCustomCurrency3() bool {
	if o != nil && !IsNil(o.CustomCurrency3) {
		return true
	}

	return false
}

// SetCustomCurrency3 gets a reference to the given float32 and assigns it to the CustomCurrency3 field.
func (o *Issues) SetCustomCurrency3(v float32) {
	o.CustomCurrency3 = &v
}

// GetCustomCurrency4 returns the CustomCurrency4 field value if set, zero value otherwise.
func (o *Issues) GetCustomCurrency4() float32 {
	if o == nil || IsNil(o.CustomCurrency4) {
		var ret float32
		return ret
	}
	return *o.CustomCurrency4
}

// GetCustomCurrency4Ok returns a tuple with the CustomCurrency4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomCurrency4Ok() (*float32, bool) {
	if o == nil || IsNil(o.CustomCurrency4) {
		return nil, false
	}
	return o.CustomCurrency4, true
}

// HasCustomCurrency4 returns a boolean if a field has been set.
func (o *Issues) HasCustomCurrency4() bool {
	if o != nil && !IsNil(o.CustomCurrency4) {
		return true
	}

	return false
}

// SetCustomCurrency4 gets a reference to the given float32 and assigns it to the CustomCurrency4 field.
func (o *Issues) SetCustomCurrency4(v float32) {
	o.CustomCurrency4 = &v
}

// GetCustomDecimal1 returns the CustomDecimal1 field value if set, zero value otherwise.
func (o *Issues) GetCustomDecimal1() float32 {
	if o == nil || IsNil(o.CustomDecimal1) {
		var ret float32
		return ret
	}
	return *o.CustomDecimal1
}

// GetCustomDecimal1Ok returns a tuple with the CustomDecimal1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomDecimal1Ok() (*float32, bool) {
	if o == nil || IsNil(o.CustomDecimal1) {
		return nil, false
	}
	return o.CustomDecimal1, true
}

// HasCustomDecimal1 returns a boolean if a field has been set.
func (o *Issues) HasCustomDecimal1() bool {
	if o != nil && !IsNil(o.CustomDecimal1) {
		return true
	}

	return false
}

// SetCustomDecimal1 gets a reference to the given float32 and assigns it to the CustomDecimal1 field.
func (o *Issues) SetCustomDecimal1(v float32) {
	o.CustomDecimal1 = &v
}

// GetCustomDecimal2 returns the CustomDecimal2 field value if set, zero value otherwise.
func (o *Issues) GetCustomDecimal2() float32 {
	if o == nil || IsNil(o.CustomDecimal2) {
		var ret float32
		return ret
	}
	return *o.CustomDecimal2
}

// GetCustomDecimal2Ok returns a tuple with the CustomDecimal2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomDecimal2Ok() (*float32, bool) {
	if o == nil || IsNil(o.CustomDecimal2) {
		return nil, false
	}
	return o.CustomDecimal2, true
}

// HasCustomDecimal2 returns a boolean if a field has been set.
func (o *Issues) HasCustomDecimal2() bool {
	if o != nil && !IsNil(o.CustomDecimal2) {
		return true
	}

	return false
}

// SetCustomDecimal2 gets a reference to the given float32 and assigns it to the CustomDecimal2 field.
func (o *Issues) SetCustomDecimal2(v float32) {
	o.CustomDecimal2 = &v
}

// GetCustomDecimal3 returns the CustomDecimal3 field value if set, zero value otherwise.
func (o *Issues) GetCustomDecimal3() float32 {
	if o == nil || IsNil(o.CustomDecimal3) {
		var ret float32
		return ret
	}
	return *o.CustomDecimal3
}

// GetCustomDecimal3Ok returns a tuple with the CustomDecimal3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomDecimal3Ok() (*float32, bool) {
	if o == nil || IsNil(o.CustomDecimal3) {
		return nil, false
	}
	return o.CustomDecimal3, true
}

// HasCustomDecimal3 returns a boolean if a field has been set.
func (o *Issues) HasCustomDecimal3() bool {
	if o != nil && !IsNil(o.CustomDecimal3) {
		return true
	}

	return false
}

// SetCustomDecimal3 gets a reference to the given float32 and assigns it to the CustomDecimal3 field.
func (o *Issues) SetCustomDecimal3(v float32) {
	o.CustomDecimal3 = &v
}

// GetFindingOwnerUserId returns the FindingOwnerUserId field value if set, zero value otherwise.
func (o *Issues) GetFindingOwnerUserId() int32 {
	if o == nil || IsNil(o.FindingOwnerUserId) {
		var ret int32
		return ret
	}
	return *o.FindingOwnerUserId
}

// GetFindingOwnerUserIdOk returns a tuple with the FindingOwnerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetFindingOwnerUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FindingOwnerUserId) {
		return nil, false
	}
	return o.FindingOwnerUserId, true
}

// HasFindingOwnerUserId returns a boolean if a field has been set.
func (o *Issues) HasFindingOwnerUserId() bool {
	if o != nil && !IsNil(o.FindingOwnerUserId) {
		return true
	}

	return false
}

// SetFindingOwnerUserId gets a reference to the given int32 and assigns it to the FindingOwnerUserId field.
func (o *Issues) SetFindingOwnerUserId(v int32) {
	o.FindingOwnerUserId = &v
}

// GetCustomDate1 returns the CustomDate1 field value if set, zero value otherwise.
func (o *Issues) GetCustomDate1() string {
	if o == nil || IsNil(o.CustomDate1) {
		var ret string
		return ret
	}
	return *o.CustomDate1
}

// GetCustomDate1Ok returns a tuple with the CustomDate1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomDate1Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomDate1) {
		return nil, false
	}
	return o.CustomDate1, true
}

// HasCustomDate1 returns a boolean if a field has been set.
func (o *Issues) HasCustomDate1() bool {
	if o != nil && !IsNil(o.CustomDate1) {
		return true
	}

	return false
}

// SetCustomDate1 gets a reference to the given string and assigns it to the CustomDate1 field.
func (o *Issues) SetCustomDate1(v string) {
	o.CustomDate1 = &v
}

// GetCustomDate2 returns the CustomDate2 field value if set, zero value otherwise.
func (o *Issues) GetCustomDate2() string {
	if o == nil || IsNil(o.CustomDate2) {
		var ret string
		return ret
	}
	return *o.CustomDate2
}

// GetCustomDate2Ok returns a tuple with the CustomDate2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomDate2Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomDate2) {
		return nil, false
	}
	return o.CustomDate2, true
}

// HasCustomDate2 returns a boolean if a field has been set.
func (o *Issues) HasCustomDate2() bool {
	if o != nil && !IsNil(o.CustomDate2) {
		return true
	}

	return false
}

// SetCustomDate2 gets a reference to the given string and assigns it to the CustomDate2 field.
func (o *Issues) SetCustomDate2(v string) {
	o.CustomDate2 = &v
}

// GetCustomDate3 returns the CustomDate3 field value if set, zero value otherwise.
func (o *Issues) GetCustomDate3() string {
	if o == nil || IsNil(o.CustomDate3) {
		var ret string
		return ret
	}
	return *o.CustomDate3
}

// GetCustomDate3Ok returns a tuple with the CustomDate3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomDate3Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomDate3) {
		return nil, false
	}
	return o.CustomDate3, true
}

// HasCustomDate3 returns a boolean if a field has been set.
func (o *Issues) HasCustomDate3() bool {
	if o != nil && !IsNil(o.CustomDate3) {
		return true
	}

	return false
}

// SetCustomDate3 gets a reference to the given string and assigns it to the CustomDate3 field.
func (o *Issues) SetCustomDate3(v string) {
	o.CustomDate3 = &v
}

// GetCustomDate4 returns the CustomDate4 field value if set, zero value otherwise.
func (o *Issues) GetCustomDate4() string {
	if o == nil || IsNil(o.CustomDate4) {
		var ret string
		return ret
	}
	return *o.CustomDate4
}

// GetCustomDate4Ok returns a tuple with the CustomDate4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomDate4Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomDate4) {
		return nil, false
	}
	return o.CustomDate4, true
}

// HasCustomDate4 returns a boolean if a field has been set.
func (o *Issues) HasCustomDate4() bool {
	if o != nil && !IsNil(o.CustomDate4) {
		return true
	}

	return false
}

// SetCustomDate4 gets a reference to the given string and assigns it to the CustomDate4 field.
func (o *Issues) SetCustomDate4(v string) {
	o.CustomDate4 = &v
}

// GetIssueCustomSelect9OptionId returns the IssueCustomSelect9OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect9OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect9OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect9OptionId
}

// GetIssueCustomSelect9OptionIdOk returns a tuple with the IssueCustomSelect9OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect9OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect9OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect9OptionId, true
}

// HasIssueCustomSelect9OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect9OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect9OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect9OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect9OptionId field.
func (o *Issues) SetIssueCustomSelect9OptionId(v int32) {
	o.IssueCustomSelect9OptionId = &v
}

// GetIssueCustomSelect10OptionId returns the IssueCustomSelect10OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect10OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect10OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect10OptionId
}

// GetIssueCustomSelect10OptionIdOk returns a tuple with the IssueCustomSelect10OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect10OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect10OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect10OptionId, true
}

// HasIssueCustomSelect10OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect10OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect10OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect10OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect10OptionId field.
func (o *Issues) SetIssueCustomSelect10OptionId(v int32) {
	o.IssueCustomSelect10OptionId = &v
}

// GetIssueCustomSelect11OptionId returns the IssueCustomSelect11OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect11OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect11OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect11OptionId
}

// GetIssueCustomSelect11OptionIdOk returns a tuple with the IssueCustomSelect11OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect11OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect11OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect11OptionId, true
}

// HasIssueCustomSelect11OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect11OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect11OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect11OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect11OptionId field.
func (o *Issues) SetIssueCustomSelect11OptionId(v int32) {
	o.IssueCustomSelect11OptionId = &v
}

// GetIssueCustomSelect12OptionId returns the IssueCustomSelect12OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect12OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect12OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect12OptionId
}

// GetIssueCustomSelect12OptionIdOk returns a tuple with the IssueCustomSelect12OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect12OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect12OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect12OptionId, true
}

// HasIssueCustomSelect12OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect12OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect12OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect12OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect12OptionId field.
func (o *Issues) SetIssueCustomSelect12OptionId(v int32) {
	o.IssueCustomSelect12OptionId = &v
}

// GetIssueCustomSelect13OptionId returns the IssueCustomSelect13OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect13OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect13OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect13OptionId
}

// GetIssueCustomSelect13OptionIdOk returns a tuple with the IssueCustomSelect13OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect13OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect13OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect13OptionId, true
}

// HasIssueCustomSelect13OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect13OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect13OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect13OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect13OptionId field.
func (o *Issues) SetIssueCustomSelect13OptionId(v int32) {
	o.IssueCustomSelect13OptionId = &v
}

// GetIssueCustomSelect14OptionId returns the IssueCustomSelect14OptionId field value if set, zero value otherwise.
func (o *Issues) GetIssueCustomSelect14OptionId() int32 {
	if o == nil || IsNil(o.IssueCustomSelect14OptionId) {
		var ret int32
		return ret
	}
	return *o.IssueCustomSelect14OptionId
}

// GetIssueCustomSelect14OptionIdOk returns a tuple with the IssueCustomSelect14OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetIssueCustomSelect14OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCustomSelect14OptionId) {
		return nil, false
	}
	return o.IssueCustomSelect14OptionId, true
}

// HasIssueCustomSelect14OptionId returns a boolean if a field has been set.
func (o *Issues) HasIssueCustomSelect14OptionId() bool {
	if o != nil && !IsNil(o.IssueCustomSelect14OptionId) {
		return true
	}

	return false
}

// SetIssueCustomSelect14OptionId gets a reference to the given int32 and assigns it to the IssueCustomSelect14OptionId field.
func (o *Issues) SetIssueCustomSelect14OptionId(v int32) {
	o.IssueCustomSelect14OptionId = &v
}

// GetCancelByUserId returns the CancelByUserId field value if set, zero value otherwise.
func (o *Issues) GetCancelByUserId() int32 {
	if o == nil || IsNil(o.CancelByUserId) {
		var ret int32
		return ret
	}
	return *o.CancelByUserId
}

// GetCancelByUserIdOk returns a tuple with the CancelByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCancelByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CancelByUserId) {
		return nil, false
	}
	return o.CancelByUserId, true
}

// HasCancelByUserId returns a boolean if a field has been set.
func (o *Issues) HasCancelByUserId() bool {
	if o != nil && !IsNil(o.CancelByUserId) {
		return true
	}

	return false
}

// SetCancelByUserId gets a reference to the given int32 and assigns it to the CancelByUserId field.
func (o *Issues) SetCancelByUserId(v int32) {
	o.CancelByUserId = &v
}

// GetCancelDate returns the CancelDate field value if set, zero value otherwise.
func (o *Issues) GetCancelDate() string {
	if o == nil || IsNil(o.CancelDate) {
		var ret string
		return ret
	}
	return *o.CancelDate
}

// GetCancelDateOk returns a tuple with the CancelDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCancelDateOk() (*string, bool) {
	if o == nil || IsNil(o.CancelDate) {
		return nil, false
	}
	return o.CancelDate, true
}

// HasCancelDate returns a boolean if a field has been set.
func (o *Issues) HasCancelDate() bool {
	if o != nil && !IsNil(o.CancelDate) {
		return true
	}

	return false
}

// SetCancelDate gets a reference to the given string and assigns it to the CancelDate field.
func (o *Issues) SetCancelDate(v string) {
	o.CancelDate = &v
}

// GetFirstCancelDate returns the FirstCancelDate field value if set, zero value otherwise.
func (o *Issues) GetFirstCancelDate() string {
	if o == nil || IsNil(o.FirstCancelDate) {
		var ret string
		return ret
	}
	return *o.FirstCancelDate
}

// GetFirstCancelDateOk returns a tuple with the FirstCancelDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetFirstCancelDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstCancelDate) {
		return nil, false
	}
	return o.FirstCancelDate, true
}

// HasFirstCancelDate returns a boolean if a field has been set.
func (o *Issues) HasFirstCancelDate() bool {
	if o != nil && !IsNil(o.FirstCancelDate) {
		return true
	}

	return false
}

// SetFirstCancelDate gets a reference to the given string and assigns it to the FirstCancelDate field.
func (o *Issues) SetFirstCancelDate(v string) {
	o.FirstCancelDate = &v
}

// GetLastActionPlanDueDate returns the LastActionPlanDueDate field value if set, zero value otherwise.
func (o *Issues) GetLastActionPlanDueDate() string {
	if o == nil || IsNil(o.LastActionPlanDueDate) {
		var ret string
		return ret
	}
	return *o.LastActionPlanDueDate
}

// GetLastActionPlanDueDateOk returns a tuple with the LastActionPlanDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetLastActionPlanDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastActionPlanDueDate) {
		return nil, false
	}
	return o.LastActionPlanDueDate, true
}

// HasLastActionPlanDueDate returns a boolean if a field has been set.
func (o *Issues) HasLastActionPlanDueDate() bool {
	if o != nil && !IsNil(o.LastActionPlanDueDate) {
		return true
	}

	return false
}

// SetLastActionPlanDueDate gets a reference to the given string and assigns it to the LastActionPlanDueDate field.
func (o *Issues) SetLastActionPlanDueDate(v string) {
	o.LastActionPlanDueDate = &v
}

// GetCancelReason returns the CancelReason field value if set, zero value otherwise.
func (o *Issues) GetCancelReason() string {
	if o == nil || IsNil(o.CancelReason) {
		var ret string
		return ret
	}
	return *o.CancelReason
}

// GetCancelReasonOk returns a tuple with the CancelReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCancelReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CancelReason) {
		return nil, false
	}
	return o.CancelReason, true
}

// HasCancelReason returns a boolean if a field has been set.
func (o *Issues) HasCancelReason() bool {
	if o != nil && !IsNil(o.CancelReason) {
		return true
	}

	return false
}

// SetCancelReason gets a reference to the given string and assigns it to the CancelReason field.
func (o *Issues) SetCancelReason(v string) {
	o.CancelReason = &v
}

// GetDraftByUserId returns the DraftByUserId field value if set, zero value otherwise.
func (o *Issues) GetDraftByUserId() int32 {
	if o == nil || IsNil(o.DraftByUserId) {
		var ret int32
		return ret
	}
	return *o.DraftByUserId
}

// GetDraftByUserIdOk returns a tuple with the DraftByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetDraftByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DraftByUserId) {
		return nil, false
	}
	return o.DraftByUserId, true
}

// HasDraftByUserId returns a boolean if a field has been set.
func (o *Issues) HasDraftByUserId() bool {
	if o != nil && !IsNil(o.DraftByUserId) {
		return true
	}

	return false
}

// SetDraftByUserId gets a reference to the given int32 and assigns it to the DraftByUserId field.
func (o *Issues) SetDraftByUserId(v int32) {
	o.DraftByUserId = &v
}

// GetDraftDate returns the DraftDate field value if set, zero value otherwise.
func (o *Issues) GetDraftDate() string {
	if o == nil || IsNil(o.DraftDate) {
		var ret string
		return ret
	}
	return *o.DraftDate
}

// GetDraftDateOk returns a tuple with the DraftDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetDraftDateOk() (*string, bool) {
	if o == nil || IsNil(o.DraftDate) {
		return nil, false
	}
	return o.DraftDate, true
}

// HasDraftDate returns a boolean if a field has been set.
func (o *Issues) HasDraftDate() bool {
	if o != nil && !IsNil(o.DraftDate) {
		return true
	}

	return false
}

// SetDraftDate gets a reference to the given string and assigns it to the DraftDate field.
func (o *Issues) SetDraftDate(v string) {
	o.DraftDate = &v
}

// GetFirstDraftDate returns the FirstDraftDate field value if set, zero value otherwise.
func (o *Issues) GetFirstDraftDate() string {
	if o == nil || IsNil(o.FirstDraftDate) {
		var ret string
		return ret
	}
	return *o.FirstDraftDate
}

// GetFirstDraftDateOk returns a tuple with the FirstDraftDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetFirstDraftDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstDraftDate) {
		return nil, false
	}
	return o.FirstDraftDate, true
}

// HasFirstDraftDate returns a boolean if a field has been set.
func (o *Issues) HasFirstDraftDate() bool {
	if o != nil && !IsNil(o.FirstDraftDate) {
		return true
	}

	return false
}

// SetFirstDraftDate gets a reference to the given string and assigns it to the FirstDraftDate field.
func (o *Issues) SetFirstDraftDate(v string) {
	o.FirstDraftDate = &v
}

// GetOpenRevisionCount returns the OpenRevisionCount field value
func (o *Issues) GetOpenRevisionCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OpenRevisionCount
}

// GetOpenRevisionCountOk returns a tuple with the OpenRevisionCount field value
// and a boolean to check if the value has been set.
func (o *Issues) GetOpenRevisionCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenRevisionCount, true
}

// SetOpenRevisionCount sets field value
func (o *Issues) SetOpenRevisionCount(v int32) {
	o.OpenRevisionCount = v
}

// GetCustomText7 returns the CustomText7 field value if set, zero value otherwise.
func (o *Issues) GetCustomText7() string {
	if o == nil || IsNil(o.CustomText7) {
		var ret string
		return ret
	}
	return *o.CustomText7
}

// GetCustomText7Ok returns a tuple with the CustomText7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCustomText7Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText7) {
		return nil, false
	}
	return o.CustomText7, true
}

// HasCustomText7 returns a boolean if a field has been set.
func (o *Issues) HasCustomText7() bool {
	if o != nil && !IsNil(o.CustomText7) {
		return true
	}

	return false
}

// SetCustomText7 gets a reference to the given string and assigns it to the CustomText7 field.
func (o *Issues) SetCustomText7(v string) {
	o.CustomText7 = &v
}

// GetCreatedByUserId returns the CreatedByUserId field value if set, zero value otherwise.
func (o *Issues) GetCreatedByUserId() int32 {
	if o == nil || IsNil(o.CreatedByUserId) {
		var ret int32
		return ret
	}
	return *o.CreatedByUserId
}

// GetCreatedByUserIdOk returns a tuple with the CreatedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetCreatedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedByUserId) {
		return nil, false
	}
	return o.CreatedByUserId, true
}

// HasCreatedByUserId returns a boolean if a field has been set.
func (o *Issues) HasCreatedByUserId() bool {
	if o != nil && !IsNil(o.CreatedByUserId) {
		return true
	}

	return false
}

// SetCreatedByUserId gets a reference to the given int32 and assigns it to the CreatedByUserId field.
func (o *Issues) SetCreatedByUserId(v int32) {
	o.CreatedByUserId = &v
}

// GetFieldData returns the FieldData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Issues) GetFieldData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FieldData
}

// GetFieldDataOk returns a tuple with the FieldData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Issues) GetFieldDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FieldData) {
		return nil, false
	}
	return &o.FieldData, true
}

// HasFieldData returns a boolean if a field has been set.
func (o *Issues) HasFieldData() bool {
	if o != nil && !IsNil(o.FieldData) {
		return true
	}

	return false
}

// SetFieldData gets a reference to the given interface{} and assigns it to the FieldData field.
func (o *Issues) SetFieldData(v interface{}) {
	o.FieldData = v
}

// GetComplianceAssessmentId returns the ComplianceAssessmentId field value if set, zero value otherwise.
func (o *Issues) GetComplianceAssessmentId() int32 {
	if o == nil || IsNil(o.ComplianceAssessmentId) {
		var ret int32
		return ret
	}
	return *o.ComplianceAssessmentId
}

// GetComplianceAssessmentIdOk returns a tuple with the ComplianceAssessmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetComplianceAssessmentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ComplianceAssessmentId) {
		return nil, false
	}
	return o.ComplianceAssessmentId, true
}

// HasComplianceAssessmentId returns a boolean if a field has been set.
func (o *Issues) HasComplianceAssessmentId() bool {
	if o != nil && !IsNil(o.ComplianceAssessmentId) {
		return true
	}

	return false
}

// SetComplianceAssessmentId gets a reference to the given int32 and assigns it to the ComplianceAssessmentId field.
func (o *Issues) SetComplianceAssessmentId(v int32) {
	o.ComplianceAssessmentId = &v
}

// GetComplianceAssessmentItemId returns the ComplianceAssessmentItemId field value if set, zero value otherwise.
func (o *Issues) GetComplianceAssessmentItemId() int32 {
	if o == nil || IsNil(o.ComplianceAssessmentItemId) {
		var ret int32
		return ret
	}
	return *o.ComplianceAssessmentItemId
}

// GetComplianceAssessmentItemIdOk returns a tuple with the ComplianceAssessmentItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetComplianceAssessmentItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ComplianceAssessmentItemId) {
		return nil, false
	}
	return o.ComplianceAssessmentItemId, true
}

// HasComplianceAssessmentItemId returns a boolean if a field has been set.
func (o *Issues) HasComplianceAssessmentItemId() bool {
	if o != nil && !IsNil(o.ComplianceAssessmentItemId) {
		return true
	}

	return false
}

// SetComplianceAssessmentItemId gets a reference to the given int32 and assigns it to the ComplianceAssessmentItemId field.
func (o *Issues) SetComplianceAssessmentItemId(v int32) {
	o.ComplianceAssessmentItemId = &v
}

// GetAuditSurveyId returns the AuditSurveyId field value if set, zero value otherwise.
func (o *Issues) GetAuditSurveyId() int32 {
	if o == nil || IsNil(o.AuditSurveyId) {
		var ret int32
		return ret
	}
	return *o.AuditSurveyId
}

// GetAuditSurveyIdOk returns a tuple with the AuditSurveyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Issues) GetAuditSurveyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuditSurveyId) {
		return nil, false
	}
	return o.AuditSurveyId, true
}

// HasAuditSurveyId returns a boolean if a field has been set.
func (o *Issues) HasAuditSurveyId() bool {
	if o != nil && !IsNil(o.AuditSurveyId) {
		return true
	}

	return false
}

// SetAuditSurveyId gets a reference to the given int32 and assigns it to the AuditSurveyId field.
func (o *Issues) SetAuditSurveyId(v int32) {
	o.AuditSurveyId = &v
}

func (o Issues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Issues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.PotentialRisk) {
		toSerialize["potential_risk"] = o.PotentialRisk
	}
	if !IsNil(o.IndividualsPresent) {
		toSerialize["individuals_present"] = o.IndividualsPresent
	}
	if !IsNil(o.DeficiencyLevelId) {
		toSerialize["deficiency_level_id"] = o.DeficiencyLevelId
	}
	if !IsNil(o.QualitativeFactors) {
		toSerialize["qualitative_factors"] = o.QualitativeFactors
	}
	if !IsNil(o.IssueIdentId) {
		toSerialize["issue_ident_id"] = o.IssueIdentId
	}
	if !IsNil(o.GrossExposure) {
		toSerialize["gross_exposure"] = o.GrossExposure
	}
	if !IsNil(o.MagnitudeId) {
		toSerialize["magnitude_id"] = o.MagnitudeId
	}
	if !IsNil(o.LikelihoodId) {
		toSerialize["likelihood_id"] = o.LikelihoodId
	}
	if !IsNil(o.AggregationReferenceId) {
		toSerialize["aggregation_reference_id"] = o.AggregationReferenceId
	}
	if !IsNil(o.AdjustedExposure) {
		toSerialize["adjusted_exposure"] = o.AdjustedExposure
	}
	if !IsNil(o.CreatorUserId) {
		toSerialize["creator_user_id"] = o.CreatorUserId
	}
	if !IsNil(o.IdentifiedDate) {
		toSerialize["identified_date"] = o.IdentifiedDate
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.ControlsDatumId) {
		toSerialize["controls_datum_id"] = o.ControlsDatumId
	}
	if !IsNil(o.TestId) {
		toSerialize["test_id"] = o.TestId
	}
	if !IsNil(o.TestSectionId) {
		toSerialize["test_section_id"] = o.TestSectionId
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.ReferenceIssueId) {
		toSerialize["reference_issue_id"] = o.ReferenceIssueId
	}
	if !IsNil(o.ArchiveId) {
		toSerialize["archive_id"] = o.ArchiveId
	}
	if !IsNil(o.TesterUserId) {
		toSerialize["tester_user_id"] = o.TesterUserId
	}
	if !IsNil(o.ReviewerUserId) {
		toSerialize["reviewer_user_id"] = o.ReviewerUserId
	}
	if !IsNil(o.OpsAuditId) {
		toSerialize["ops_audit_id"] = o.OpsAuditId
	}
	if !IsNil(o.OpsAuditItemId) {
		toSerialize["ops_audit_item_id"] = o.OpsAuditItemId
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.InternalControlComponentId) {
		toSerialize["internal_control_component_id"] = o.InternalControlComponentId
	}
	if !IsNil(o.ExternalPlannedConfirmDate) {
		toSerialize["external_planned_confirm_date"] = o.ExternalPlannedConfirmDate
	}
	if !IsNil(o.Disclosure) {
		toSerialize["disclosure"] = o.Disclosure
	}
	if !IsNil(o.ExternalConfirmDate) {
		toSerialize["external_confirm_date"] = o.ExternalConfirmDate
	}
	if !IsNil(o.PendingRemediationDate) {
		toSerialize["pending_remediation_date"] = o.PendingRemediationDate
	}
	if !IsNil(o.ClosedDate) {
		toSerialize["closed_date"] = o.ClosedDate
	}
	if !IsNil(o.InactiveDate) {
		toSerialize["inactive_date"] = o.InactiveDate
	}
	if !IsNil(o.ReopenDate) {
		toSerialize["reopen_date"] = o.ReopenDate
	}
	if !IsNil(o.OpenDate) {
		toSerialize["open_date"] = o.OpenDate
	}
	if !IsNil(o.AmendDate) {
		toSerialize["amend_date"] = o.AmendDate
	}
	if !IsNil(o.RemediatedDate) {
		toSerialize["remediated_date"] = o.RemediatedDate
	}
	if !IsNil(o.OpenByUserId) {
		toSerialize["open_by_user_id"] = o.OpenByUserId
	}
	if !IsNil(o.ReopenByUserId) {
		toSerialize["reopen_by_user_id"] = o.ReopenByUserId
	}
	if !IsNil(o.PendingRemediationByUserId) {
		toSerialize["pending_remediation_by_user_id"] = o.PendingRemediationByUserId
	}
	if !IsNil(o.RemediatedByUserId) {
		toSerialize["remediated_by_user_id"] = o.RemediatedByUserId
	}
	if !IsNil(o.ClosedByUserId) {
		toSerialize["closed_by_user_id"] = o.ClosedByUserId
	}
	if !IsNil(o.AmendByUserId) {
		toSerialize["amend_by_user_id"] = o.AmendByUserId
	}
	if o.Flattened != nil {
		toSerialize["flattened"] = o.Flattened
	}
	if !IsNil(o.IssueRatingId) {
		toSerialize["issue_rating_id"] = o.IssueRatingId
	}
	if !IsNil(o.SoxImpactId) {
		toSerialize["sox_impact_id"] = o.SoxImpactId
	}
	if !IsNil(o.IssueCustomSelect1OptionId) {
		toSerialize["issue_custom_select1_option_id"] = o.IssueCustomSelect1OptionId
	}
	if !IsNil(o.IssueCustomSelect2OptionId) {
		toSerialize["issue_custom_select2_option_id"] = o.IssueCustomSelect2OptionId
	}
	if !IsNil(o.VicePresidentUserId) {
		toSerialize["vice_president_user_id"] = o.VicePresidentUserId
	}
	if !IsNil(o.IsFlattened) {
		toSerialize["is_flattened"] = o.IsFlattened
	}
	if o.RemediationOwners != nil {
		toSerialize["remediation_owners"] = o.RemediationOwners
	}
	if o.ReferenceMeta != nil {
		toSerialize["reference_meta"] = o.ReferenceMeta
	}
	if o.Totals != nil {
		toSerialize["totals"] = o.Totals
	}
	if !IsNil(o.IsArchived) {
		toSerialize["is_archived"] = o.IsArchived
	}
	if !IsNil(o.IssueCustomSelect3OptionId) {
		toSerialize["issue_custom_select3_option_id"] = o.IssueCustomSelect3OptionId
	}
	if !IsNil(o.AdditionalAuditorUserId) {
		toSerialize["additional_auditor_user_id"] = o.AdditionalAuditorUserId
	}
	if !IsNil(o.InternalAuditValidationDate) {
		toSerialize["internal_audit_validation_date"] = o.InternalAuditValidationDate
	}
	if !IsNil(o.CustomText1) {
		toSerialize["custom_text1"] = o.CustomText1
	}
	if !IsNil(o.CustomText2) {
		toSerialize["custom_text2"] = o.CustomText2
	}
	if !IsNil(o.CustomText3) {
		toSerialize["custom_text3"] = o.CustomText3
	}
	if !IsNil(o.CustomText4) {
		toSerialize["custom_text4"] = o.CustomText4
	}
	if !IsNil(o.CustomText5) {
		toSerialize["custom_text5"] = o.CustomText5
	}
	if !IsNil(o.CustomText6) {
		toSerialize["custom_text6"] = o.CustomText6
	}
	if !IsNil(o.IssueCustomSelect4OptionId) {
		toSerialize["issue_custom_select4_option_id"] = o.IssueCustomSelect4OptionId
	}
	if !IsNil(o.IssueCustomSelect5OptionId) {
		toSerialize["issue_custom_select5_option_id"] = o.IssueCustomSelect5OptionId
	}
	if !IsNil(o.IssueCustomSelect6OptionId) {
		toSerialize["issue_custom_select6_option_id"] = o.IssueCustomSelect6OptionId
	}
	if !IsNil(o.IssueCustomSelect7OptionId) {
		toSerialize["issue_custom_select7_option_id"] = o.IssueCustomSelect7OptionId
	}
	if !IsNil(o.IssueCustomSelect8OptionId) {
		toSerialize["issue_custom_select8_option_id"] = o.IssueCustomSelect8OptionId
	}
	toSerialize["issue_category_id"] = o.IssueCategoryId
	if !IsNil(o.IssuesourceableId) {
		toSerialize["issuesourceable_id"] = o.IssuesourceableId
	}
	if !IsNil(o.IssuesourceableType) {
		toSerialize["issuesourceable_type"] = o.IssuesourceableType
	}
	if o.FinanceProcessOwners != nil {
		toSerialize["finance_process_owners"] = o.FinanceProcessOwners
	}
	if o.BusinessProcessOwners != nil {
		toSerialize["business_process_owners"] = o.BusinessProcessOwners
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.ExecutiveUserId) {
		toSerialize["executive_user_id"] = o.ExecutiveUserId
	}
	if !IsNil(o.SeniorOwnerUserId) {
		toSerialize["senior_owner_user_id"] = o.SeniorOwnerUserId
	}
	if !IsNil(o.FirstRemediatedDate) {
		toSerialize["first_remediated_date"] = o.FirstRemediatedDate
	}
	if !IsNil(o.FirstPendingRemediationDate) {
		toSerialize["first_pending_remediation_date"] = o.FirstPendingRemediationDate
	}
	if !IsNil(o.FirstClosedDate) {
		toSerialize["first_closed_date"] = o.FirstClosedDate
	}
	if !IsNil(o.CustomCurrency1) {
		toSerialize["custom_currency1"] = o.CustomCurrency1
	}
	if !IsNil(o.CustomCurrency2) {
		toSerialize["custom_currency2"] = o.CustomCurrency2
	}
	if !IsNil(o.CustomCurrency3) {
		toSerialize["custom_currency3"] = o.CustomCurrency3
	}
	if !IsNil(o.CustomCurrency4) {
		toSerialize["custom_currency4"] = o.CustomCurrency4
	}
	if !IsNil(o.CustomDecimal1) {
		toSerialize["custom_decimal1"] = o.CustomDecimal1
	}
	if !IsNil(o.CustomDecimal2) {
		toSerialize["custom_decimal2"] = o.CustomDecimal2
	}
	if !IsNil(o.CustomDecimal3) {
		toSerialize["custom_decimal3"] = o.CustomDecimal3
	}
	if !IsNil(o.FindingOwnerUserId) {
		toSerialize["finding_owner_user_id"] = o.FindingOwnerUserId
	}
	if !IsNil(o.CustomDate1) {
		toSerialize["custom_date1"] = o.CustomDate1
	}
	if !IsNil(o.CustomDate2) {
		toSerialize["custom_date2"] = o.CustomDate2
	}
	if !IsNil(o.CustomDate3) {
		toSerialize["custom_date3"] = o.CustomDate3
	}
	if !IsNil(o.CustomDate4) {
		toSerialize["custom_date4"] = o.CustomDate4
	}
	if !IsNil(o.IssueCustomSelect9OptionId) {
		toSerialize["issue_custom_select9_option_id"] = o.IssueCustomSelect9OptionId
	}
	if !IsNil(o.IssueCustomSelect10OptionId) {
		toSerialize["issue_custom_select10_option_id"] = o.IssueCustomSelect10OptionId
	}
	if !IsNil(o.IssueCustomSelect11OptionId) {
		toSerialize["issue_custom_select11_option_id"] = o.IssueCustomSelect11OptionId
	}
	if !IsNil(o.IssueCustomSelect12OptionId) {
		toSerialize["issue_custom_select12_option_id"] = o.IssueCustomSelect12OptionId
	}
	if !IsNil(o.IssueCustomSelect13OptionId) {
		toSerialize["issue_custom_select13_option_id"] = o.IssueCustomSelect13OptionId
	}
	if !IsNil(o.IssueCustomSelect14OptionId) {
		toSerialize["issue_custom_select14_option_id"] = o.IssueCustomSelect14OptionId
	}
	if !IsNil(o.CancelByUserId) {
		toSerialize["cancel_by_user_id"] = o.CancelByUserId
	}
	if !IsNil(o.CancelDate) {
		toSerialize["cancel_date"] = o.CancelDate
	}
	if !IsNil(o.FirstCancelDate) {
		toSerialize["first_cancel_date"] = o.FirstCancelDate
	}
	if !IsNil(o.LastActionPlanDueDate) {
		toSerialize["last_action_plan_due_date"] = o.LastActionPlanDueDate
	}
	if !IsNil(o.CancelReason) {
		toSerialize["cancel_reason"] = o.CancelReason
	}
	if !IsNil(o.DraftByUserId) {
		toSerialize["draft_by_user_id"] = o.DraftByUserId
	}
	if !IsNil(o.DraftDate) {
		toSerialize["draft_date"] = o.DraftDate
	}
	if !IsNil(o.FirstDraftDate) {
		toSerialize["first_draft_date"] = o.FirstDraftDate
	}
	toSerialize["open_revision_count"] = o.OpenRevisionCount
	if !IsNil(o.CustomText7) {
		toSerialize["custom_text7"] = o.CustomText7
	}
	if !IsNil(o.CreatedByUserId) {
		toSerialize["created_by_user_id"] = o.CreatedByUserId
	}
	if o.FieldData != nil {
		toSerialize["field_data"] = o.FieldData
	}
	if !IsNil(o.ComplianceAssessmentId) {
		toSerialize["compliance_assessment_id"] = o.ComplianceAssessmentId
	}
	if !IsNil(o.ComplianceAssessmentItemId) {
		toSerialize["compliance_assessment_item_id"] = o.ComplianceAssessmentItemId
	}
	if !IsNil(o.AuditSurveyId) {
		toSerialize["audit_survey_id"] = o.AuditSurveyId
	}
	return toSerialize, nil
}

func (o *Issues) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"issue_category_id",
		"scopes",
		"open_revision_count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIssues := _Issues{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIssues)

	if err != nil {
		return err
	}

	*o = Issues(varIssues)

	return err
}

type NullableIssues struct {
	value *Issues
	isSet bool
}

func (v NullableIssues) Get() *Issues {
	return v.value
}

func (v *NullableIssues) Set(val *Issues) {
	v.value = val
	v.isSet = true
}

func (v NullableIssues) IsSet() bool {
	return v.isSet
}

func (v *NullableIssues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssues(val *Issues) *NullableIssues {
	return &NullableIssues{value: val, isSet: true}
}

func (v NullableIssues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


