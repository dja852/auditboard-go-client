/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TimesheetEntries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimesheetEntries{}

// TimesheetEntries struct for TimesheetEntries
type TimesheetEntries struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	Date string `json:"date"`
	Hours float32 `json:"hours"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	UserId int32 `json:"user_id"`
	TimesheetableType string `json:"timesheetable_type"`
	TimesheetableId int32 `json:"timesheetable_id"`
	TimesheetableMeta *string `json:"timesheetable_meta,omitempty"`
	// Note: This is a Foreign Key to `timesheet_projects.id`.<fk table='timesheet_projects' column='id'/>
	TimesheetProjectId int32 `json:"timesheet_project_id"`
	Comment *string `json:"comment,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

type _TimesheetEntries TimesheetEntries

// NewTimesheetEntries instantiates a new TimesheetEntries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimesheetEntries(date string, hours float32, userId int32, timesheetableType string, timesheetableId int32, timesheetProjectId int32) *TimesheetEntries {
	this := TimesheetEntries{}
	this.Date = date
	this.Hours = hours
	this.UserId = userId
	this.TimesheetableType = timesheetableType
	this.TimesheetableId = timesheetableId
	this.TimesheetProjectId = timesheetProjectId
	return &this
}

// NewTimesheetEntriesWithDefaults instantiates a new TimesheetEntries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimesheetEntriesWithDefaults() *TimesheetEntries {
	this := TimesheetEntries{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TimesheetEntries) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TimesheetEntries) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TimesheetEntries) SetId(v int32) {
	o.Id = &v
}

// GetDate returns the Date field value
func (o *TimesheetEntries) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *TimesheetEntries) SetDate(v string) {
	o.Date = v
}

// GetHours returns the Hours field value
func (o *TimesheetEntries) GetHours() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Hours
}

// GetHoursOk returns a tuple with the Hours field value
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetHoursOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hours, true
}

// SetHours sets field value
func (o *TimesheetEntries) SetHours(v float32) {
	o.Hours = v
}

// GetUserId returns the UserId field value
func (o *TimesheetEntries) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *TimesheetEntries) SetUserId(v int32) {
	o.UserId = v
}

// GetTimesheetableType returns the TimesheetableType field value
func (o *TimesheetEntries) GetTimesheetableType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimesheetableType
}

// GetTimesheetableTypeOk returns a tuple with the TimesheetableType field value
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetTimesheetableTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimesheetableType, true
}

// SetTimesheetableType sets field value
func (o *TimesheetEntries) SetTimesheetableType(v string) {
	o.TimesheetableType = v
}

// GetTimesheetableId returns the TimesheetableId field value
func (o *TimesheetEntries) GetTimesheetableId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TimesheetableId
}

// GetTimesheetableIdOk returns a tuple with the TimesheetableId field value
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetTimesheetableIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimesheetableId, true
}

// SetTimesheetableId sets field value
func (o *TimesheetEntries) SetTimesheetableId(v int32) {
	o.TimesheetableId = v
}

// GetTimesheetableMeta returns the TimesheetableMeta field value if set, zero value otherwise.
func (o *TimesheetEntries) GetTimesheetableMeta() string {
	if o == nil || IsNil(o.TimesheetableMeta) {
		var ret string
		return ret
	}
	return *o.TimesheetableMeta
}

// GetTimesheetableMetaOk returns a tuple with the TimesheetableMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetTimesheetableMetaOk() (*string, bool) {
	if o == nil || IsNil(o.TimesheetableMeta) {
		return nil, false
	}
	return o.TimesheetableMeta, true
}

// HasTimesheetableMeta returns a boolean if a field has been set.
func (o *TimesheetEntries) HasTimesheetableMeta() bool {
	if o != nil && !IsNil(o.TimesheetableMeta) {
		return true
	}

	return false
}

// SetTimesheetableMeta gets a reference to the given string and assigns it to the TimesheetableMeta field.
func (o *TimesheetEntries) SetTimesheetableMeta(v string) {
	o.TimesheetableMeta = &v
}

// GetTimesheetProjectId returns the TimesheetProjectId field value
func (o *TimesheetEntries) GetTimesheetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TimesheetProjectId
}

// GetTimesheetProjectIdOk returns a tuple with the TimesheetProjectId field value
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetTimesheetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimesheetProjectId, true
}

// SetTimesheetProjectId sets field value
func (o *TimesheetEntries) SetTimesheetProjectId(v int32) {
	o.TimesheetProjectId = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *TimesheetEntries) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *TimesheetEntries) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *TimesheetEntries) SetComment(v string) {
	o.Comment = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *TimesheetEntries) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *TimesheetEntries) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *TimesheetEntries) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TimesheetEntries) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TimesheetEntries) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *TimesheetEntries) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TimesheetEntries) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntries) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TimesheetEntries) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *TimesheetEntries) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o TimesheetEntries) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimesheetEntries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["date"] = o.Date
	toSerialize["hours"] = o.Hours
	toSerialize["user_id"] = o.UserId
	toSerialize["timesheetable_type"] = o.TimesheetableType
	toSerialize["timesheetable_id"] = o.TimesheetableId
	if !IsNil(o.TimesheetableMeta) {
		toSerialize["timesheetable_meta"] = o.TimesheetableMeta
	}
	toSerialize["timesheet_project_id"] = o.TimesheetProjectId
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableTimesheetEntries struct {
	value *TimesheetEntries
	isSet bool
}

func (v NullableTimesheetEntries) Get() *TimesheetEntries {
	return v.value
}

func (v *NullableTimesheetEntries) Set(val *TimesheetEntries) {
	v.value = val
	v.isSet = true
}

func (v NullableTimesheetEntries) IsSet() bool {
	return v.isSet
}

func (v *NullableTimesheetEntries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimesheetEntries(val *TimesheetEntries) *NullableTimesheetEntries {
	return &NullableTimesheetEntries{value: val, isSet: true}
}

func (v NullableTimesheetEntries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimesheetEntries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


