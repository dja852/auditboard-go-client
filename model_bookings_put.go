/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the BookingsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookingsPut{}

// BookingsPut struct for BookingsPut
type BookingsPut struct {
	Booking *BookingsPutBooking `json:"booking,omitempty"`
	PreviousValues *BookingsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewBookingsPut instantiates a new BookingsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookingsPut() *BookingsPut {
	this := BookingsPut{}
	return &this
}

// NewBookingsPutWithDefaults instantiates a new BookingsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookingsPutWithDefaults() *BookingsPut {
	this := BookingsPut{}
	return &this
}

// GetBooking returns the Booking field value if set, zero value otherwise.
func (o *BookingsPut) GetBooking() BookingsPutBooking {
	if o == nil || IsNil(o.Booking) {
		var ret BookingsPutBooking
		return ret
	}
	return *o.Booking
}

// GetBookingOk returns a tuple with the Booking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingsPut) GetBookingOk() (*BookingsPutBooking, bool) {
	if o == nil || IsNil(o.Booking) {
		return nil, false
	}
	return o.Booking, true
}

// HasBooking returns a boolean if a field has been set.
func (o *BookingsPut) HasBooking() bool {
	if o != nil && !IsNil(o.Booking) {
		return true
	}

	return false
}

// SetBooking gets a reference to the given BookingsPutBooking and assigns it to the Booking field.
func (o *BookingsPut) SetBooking(v BookingsPutBooking) {
	o.Booking = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *BookingsPut) GetPreviousValues() BookingsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret BookingsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingsPut) GetPreviousValuesOk() (*BookingsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *BookingsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given BookingsPutPreviousValues and assigns it to the PreviousValues field.
func (o *BookingsPut) SetPreviousValues(v BookingsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o BookingsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookingsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Booking) {
		toSerialize["booking"] = o.Booking
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableBookingsPut struct {
	value *BookingsPut
	isSet bool
}

func (v NullableBookingsPut) Get() *BookingsPut {
	return v.value
}

func (v *NullableBookingsPut) Set(val *BookingsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableBookingsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableBookingsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookingsPut(val *BookingsPut) *NullableBookingsPut {
	return &NullableBookingsPut{value: val, isSet: true}
}

func (v NullableBookingsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookingsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


