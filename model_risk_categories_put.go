/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RiskCategoriesPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskCategoriesPut{}

// RiskCategoriesPut struct for RiskCategoriesPut
type RiskCategoriesPut struct {
	RiskCategory *RiskCategoriesPutRiskCategory `json:"risk_category,omitempty"`
	PreviousValues *RiskCategoriesPutPreviousValues `json:"previous_values,omitempty"`
}

// NewRiskCategoriesPut instantiates a new RiskCategoriesPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskCategoriesPut() *RiskCategoriesPut {
	this := RiskCategoriesPut{}
	return &this
}

// NewRiskCategoriesPutWithDefaults instantiates a new RiskCategoriesPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskCategoriesPutWithDefaults() *RiskCategoriesPut {
	this := RiskCategoriesPut{}
	return &this
}

// GetRiskCategory returns the RiskCategory field value if set, zero value otherwise.
func (o *RiskCategoriesPut) GetRiskCategory() RiskCategoriesPutRiskCategory {
	if o == nil || IsNil(o.RiskCategory) {
		var ret RiskCategoriesPutRiskCategory
		return ret
	}
	return *o.RiskCategory
}

// GetRiskCategoryOk returns a tuple with the RiskCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskCategoriesPut) GetRiskCategoryOk() (*RiskCategoriesPutRiskCategory, bool) {
	if o == nil || IsNil(o.RiskCategory) {
		return nil, false
	}
	return o.RiskCategory, true
}

// HasRiskCategory returns a boolean if a field has been set.
func (o *RiskCategoriesPut) HasRiskCategory() bool {
	if o != nil && !IsNil(o.RiskCategory) {
		return true
	}

	return false
}

// SetRiskCategory gets a reference to the given RiskCategoriesPutRiskCategory and assigns it to the RiskCategory field.
func (o *RiskCategoriesPut) SetRiskCategory(v RiskCategoriesPutRiskCategory) {
	o.RiskCategory = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *RiskCategoriesPut) GetPreviousValues() RiskCategoriesPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret RiskCategoriesPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskCategoriesPut) GetPreviousValuesOk() (*RiskCategoriesPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *RiskCategoriesPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given RiskCategoriesPutPreviousValues and assigns it to the PreviousValues field.
func (o *RiskCategoriesPut) SetPreviousValues(v RiskCategoriesPutPreviousValues) {
	o.PreviousValues = &v
}

func (o RiskCategoriesPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskCategoriesPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RiskCategory) {
		toSerialize["risk_category"] = o.RiskCategory
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableRiskCategoriesPut struct {
	value *RiskCategoriesPut
	isSet bool
}

func (v NullableRiskCategoriesPut) Get() *RiskCategoriesPut {
	return v.value
}

func (v *NullableRiskCategoriesPut) Set(val *RiskCategoriesPut) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskCategoriesPut) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskCategoriesPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskCategoriesPut(val *RiskCategoriesPut) *NullableRiskCategoriesPut {
	return &NullableRiskCategoriesPut{value: val, isSet: true}
}

func (v NullableRiskCategoriesPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskCategoriesPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


