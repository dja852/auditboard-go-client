/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the WorkspacesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspacesPostRequest{}

// WorkspacesPostRequest struct for WorkspacesPostRequest
type WorkspacesPostRequest struct {
	Workspace *Workspaces `json:"workspace,omitempty"`
}

// NewWorkspacesPostRequest instantiates a new WorkspacesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspacesPostRequest() *WorkspacesPostRequest {
	this := WorkspacesPostRequest{}
	return &this
}

// NewWorkspacesPostRequestWithDefaults instantiates a new WorkspacesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspacesPostRequestWithDefaults() *WorkspacesPostRequest {
	this := WorkspacesPostRequest{}
	return &this
}

// GetWorkspace returns the Workspace field value if set, zero value otherwise.
func (o *WorkspacesPostRequest) GetWorkspace() Workspaces {
	if o == nil || IsNil(o.Workspace) {
		var ret Workspaces
		return ret
	}
	return *o.Workspace
}

// GetWorkspaceOk returns a tuple with the Workspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspacesPostRequest) GetWorkspaceOk() (*Workspaces, bool) {
	if o == nil || IsNil(o.Workspace) {
		return nil, false
	}
	return o.Workspace, true
}

// HasWorkspace returns a boolean if a field has been set.
func (o *WorkspacesPostRequest) HasWorkspace() bool {
	if o != nil && !IsNil(o.Workspace) {
		return true
	}

	return false
}

// SetWorkspace gets a reference to the given Workspaces and assigns it to the Workspace field.
func (o *WorkspacesPostRequest) SetWorkspace(v Workspaces) {
	o.Workspace = &v
}

func (o WorkspacesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspacesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Workspace) {
		toSerialize["workspace"] = o.Workspace
	}
	return toSerialize, nil
}

type NullableWorkspacesPostRequest struct {
	value *WorkspacesPostRequest
	isSet bool
}

func (v NullableWorkspacesPostRequest) Get() *WorkspacesPostRequest {
	return v.value
}

func (v *NullableWorkspacesPostRequest) Set(val *WorkspacesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspacesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspacesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspacesPostRequest(val *WorkspacesPostRequest) *NullableWorkspacesPostRequest {
	return &NullableWorkspacesPostRequest{value: val, isSet: true}
}

func (v NullableWorkspacesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspacesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


