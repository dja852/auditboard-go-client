/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ActionPlansPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionPlansPostRequest{}

// ActionPlansPostRequest struct for ActionPlansPostRequest
type ActionPlansPostRequest struct {
	ActionPlan *ActionPlans `json:"action_plan,omitempty"`
}

// NewActionPlansPostRequest instantiates a new ActionPlansPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionPlansPostRequest() *ActionPlansPostRequest {
	this := ActionPlansPostRequest{}
	return &this
}

// NewActionPlansPostRequestWithDefaults instantiates a new ActionPlansPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionPlansPostRequestWithDefaults() *ActionPlansPostRequest {
	this := ActionPlansPostRequest{}
	return &this
}

// GetActionPlan returns the ActionPlan field value if set, zero value otherwise.
func (o *ActionPlansPostRequest) GetActionPlan() ActionPlans {
	if o == nil || IsNil(o.ActionPlan) {
		var ret ActionPlans
		return ret
	}
	return *o.ActionPlan
}

// GetActionPlanOk returns a tuple with the ActionPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansPostRequest) GetActionPlanOk() (*ActionPlans, bool) {
	if o == nil || IsNil(o.ActionPlan) {
		return nil, false
	}
	return o.ActionPlan, true
}

// HasActionPlan returns a boolean if a field has been set.
func (o *ActionPlansPostRequest) HasActionPlan() bool {
	if o != nil && !IsNil(o.ActionPlan) {
		return true
	}

	return false
}

// SetActionPlan gets a reference to the given ActionPlans and assigns it to the ActionPlan field.
func (o *ActionPlansPostRequest) SetActionPlan(v ActionPlans) {
	o.ActionPlan = &v
}

func (o ActionPlansPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionPlansPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionPlan) {
		toSerialize["action_plan"] = o.ActionPlan
	}
	return toSerialize, nil
}

type NullableActionPlansPostRequest struct {
	value *ActionPlansPostRequest
	isSet bool
}

func (v NullableActionPlansPostRequest) Get() *ActionPlansPostRequest {
	return v.value
}

func (v *NullableActionPlansPostRequest) Set(val *ActionPlansPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableActionPlansPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableActionPlansPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionPlansPostRequest(val *ActionPlansPostRequest) *NullableActionPlansPostRequest {
	return &NullableActionPlansPostRequest{value: val, isSet: true}
}

func (v NullableActionPlansPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionPlansPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


