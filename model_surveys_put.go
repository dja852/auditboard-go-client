/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the SurveysPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SurveysPut{}

// SurveysPut struct for SurveysPut
type SurveysPut struct {
	Survey *SurveysPutSurvey `json:"survey,omitempty"`
	PreviousValues *SurveysPutPreviousValues `json:"previous_values,omitempty"`
}

// NewSurveysPut instantiates a new SurveysPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSurveysPut() *SurveysPut {
	this := SurveysPut{}
	return &this
}

// NewSurveysPutWithDefaults instantiates a new SurveysPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSurveysPutWithDefaults() *SurveysPut {
	this := SurveysPut{}
	return &this
}

// GetSurvey returns the Survey field value if set, zero value otherwise.
func (o *SurveysPut) GetSurvey() SurveysPutSurvey {
	if o == nil || IsNil(o.Survey) {
		var ret SurveysPutSurvey
		return ret
	}
	return *o.Survey
}

// GetSurveyOk returns a tuple with the Survey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SurveysPut) GetSurveyOk() (*SurveysPutSurvey, bool) {
	if o == nil || IsNil(o.Survey) {
		return nil, false
	}
	return o.Survey, true
}

// HasSurvey returns a boolean if a field has been set.
func (o *SurveysPut) HasSurvey() bool {
	if o != nil && !IsNil(o.Survey) {
		return true
	}

	return false
}

// SetSurvey gets a reference to the given SurveysPutSurvey and assigns it to the Survey field.
func (o *SurveysPut) SetSurvey(v SurveysPutSurvey) {
	o.Survey = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *SurveysPut) GetPreviousValues() SurveysPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret SurveysPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SurveysPut) GetPreviousValuesOk() (*SurveysPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *SurveysPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given SurveysPutPreviousValues and assigns it to the PreviousValues field.
func (o *SurveysPut) SetPreviousValues(v SurveysPutPreviousValues) {
	o.PreviousValues = &v
}

func (o SurveysPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SurveysPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Survey) {
		toSerialize["survey"] = o.Survey
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableSurveysPut struct {
	value *SurveysPut
	isSet bool
}

func (v NullableSurveysPut) Get() *SurveysPut {
	return v.value
}

func (v *NullableSurveysPut) Set(val *SurveysPut) {
	v.value = val
	v.isSet = true
}

func (v NullableSurveysPut) IsSet() bool {
	return v.isSet
}

func (v *NullableSurveysPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSurveysPut(val *SurveysPut) *NullableSurveysPut {
	return &NullableSurveysPut{value: val, isSet: true}
}

func (v NullableSurveysPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSurveysPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


