/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the LibraryControlClassificationsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LibraryControlClassificationsPostRequest{}

// LibraryControlClassificationsPostRequest struct for LibraryControlClassificationsPostRequest
type LibraryControlClassificationsPostRequest struct {
	LibraryControlClassification *LibraryControlClassifications `json:"library_control _classification,omitempty"`
}

// NewLibraryControlClassificationsPostRequest instantiates a new LibraryControlClassificationsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLibraryControlClassificationsPostRequest() *LibraryControlClassificationsPostRequest {
	this := LibraryControlClassificationsPostRequest{}
	return &this
}

// NewLibraryControlClassificationsPostRequestWithDefaults instantiates a new LibraryControlClassificationsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLibraryControlClassificationsPostRequestWithDefaults() *LibraryControlClassificationsPostRequest {
	this := LibraryControlClassificationsPostRequest{}
	return &this
}

// GetLibraryControlClassification returns the LibraryControlClassification field value if set, zero value otherwise.
func (o *LibraryControlClassificationsPostRequest) GetLibraryControlClassification() LibraryControlClassifications {
	if o == nil || IsNil(o.LibraryControlClassification) {
		var ret LibraryControlClassifications
		return ret
	}
	return *o.LibraryControlClassification
}

// GetLibraryControlClassificationOk returns a tuple with the LibraryControlClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LibraryControlClassificationsPostRequest) GetLibraryControlClassificationOk() (*LibraryControlClassifications, bool) {
	if o == nil || IsNil(o.LibraryControlClassification) {
		return nil, false
	}
	return o.LibraryControlClassification, true
}

// HasLibraryControlClassification returns a boolean if a field has been set.
func (o *LibraryControlClassificationsPostRequest) HasLibraryControlClassification() bool {
	if o != nil && !IsNil(o.LibraryControlClassification) {
		return true
	}

	return false
}

// SetLibraryControlClassification gets a reference to the given LibraryControlClassifications and assigns it to the LibraryControlClassification field.
func (o *LibraryControlClassificationsPostRequest) SetLibraryControlClassification(v LibraryControlClassifications) {
	o.LibraryControlClassification = &v
}

func (o LibraryControlClassificationsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LibraryControlClassificationsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LibraryControlClassification) {
		toSerialize["library_control _classification"] = o.LibraryControlClassification
	}
	return toSerialize, nil
}

type NullableLibraryControlClassificationsPostRequest struct {
	value *LibraryControlClassificationsPostRequest
	isSet bool
}

func (v NullableLibraryControlClassificationsPostRequest) Get() *LibraryControlClassificationsPostRequest {
	return v.value
}

func (v *NullableLibraryControlClassificationsPostRequest) Set(val *LibraryControlClassificationsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLibraryControlClassificationsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLibraryControlClassificationsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLibraryControlClassificationsPostRequest(val *LibraryControlClassificationsPostRequest) *NullableLibraryControlClassificationsPostRequest {
	return &NullableLibraryControlClassificationsPostRequest{value: val, isSet: true}
}

func (v NullableLibraryControlClassificationsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLibraryControlClassificationsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


