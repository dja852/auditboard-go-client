/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the OpsAuditCategoriesPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpsAuditCategoriesPut{}

// OpsAuditCategoriesPut struct for OpsAuditCategoriesPut
type OpsAuditCategoriesPut struct {
	OpsAuditCategory *OpsAuditCategoriesPutOpsAuditCategory `json:"ops_audit_category,omitempty"`
	PreviousValues *OpsAuditCategoriesPutPreviousValues `json:"previous_values,omitempty"`
}

// NewOpsAuditCategoriesPut instantiates a new OpsAuditCategoriesPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsAuditCategoriesPut() *OpsAuditCategoriesPut {
	this := OpsAuditCategoriesPut{}
	return &this
}

// NewOpsAuditCategoriesPutWithDefaults instantiates a new OpsAuditCategoriesPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsAuditCategoriesPutWithDefaults() *OpsAuditCategoriesPut {
	this := OpsAuditCategoriesPut{}
	return &this
}

// GetOpsAuditCategory returns the OpsAuditCategory field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPut) GetOpsAuditCategory() OpsAuditCategoriesPutOpsAuditCategory {
	if o == nil || IsNil(o.OpsAuditCategory) {
		var ret OpsAuditCategoriesPutOpsAuditCategory
		return ret
	}
	return *o.OpsAuditCategory
}

// GetOpsAuditCategoryOk returns a tuple with the OpsAuditCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPut) GetOpsAuditCategoryOk() (*OpsAuditCategoriesPutOpsAuditCategory, bool) {
	if o == nil || IsNil(o.OpsAuditCategory) {
		return nil, false
	}
	return o.OpsAuditCategory, true
}

// HasOpsAuditCategory returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPut) HasOpsAuditCategory() bool {
	if o != nil && !IsNil(o.OpsAuditCategory) {
		return true
	}

	return false
}

// SetOpsAuditCategory gets a reference to the given OpsAuditCategoriesPutOpsAuditCategory and assigns it to the OpsAuditCategory field.
func (o *OpsAuditCategoriesPut) SetOpsAuditCategory(v OpsAuditCategoriesPutOpsAuditCategory) {
	o.OpsAuditCategory = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *OpsAuditCategoriesPut) GetPreviousValues() OpsAuditCategoriesPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret OpsAuditCategoriesPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditCategoriesPut) GetPreviousValuesOk() (*OpsAuditCategoriesPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *OpsAuditCategoriesPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given OpsAuditCategoriesPutPreviousValues and assigns it to the PreviousValues field.
func (o *OpsAuditCategoriesPut) SetPreviousValues(v OpsAuditCategoriesPutPreviousValues) {
	o.PreviousValues = &v
}

func (o OpsAuditCategoriesPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpsAuditCategoriesPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpsAuditCategory) {
		toSerialize["ops_audit_category"] = o.OpsAuditCategory
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableOpsAuditCategoriesPut struct {
	value *OpsAuditCategoriesPut
	isSet bool
}

func (v NullableOpsAuditCategoriesPut) Get() *OpsAuditCategoriesPut {
	return v.value
}

func (v *NullableOpsAuditCategoriesPut) Set(val *OpsAuditCategoriesPut) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsAuditCategoriesPut) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsAuditCategoriesPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsAuditCategoriesPut(val *OpsAuditCategoriesPut) *NullableOpsAuditCategoriesPut {
	return &NullableOpsAuditCategoriesPut{value: val, isSet: true}
}

func (v NullableOpsAuditCategoriesPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsAuditCategoriesPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


