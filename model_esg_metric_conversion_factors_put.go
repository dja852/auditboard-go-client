/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the EsgMetricConversionFactorsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EsgMetricConversionFactorsPut{}

// EsgMetricConversionFactorsPut struct for EsgMetricConversionFactorsPut
type EsgMetricConversionFactorsPut struct {
	EsgMetricConversionFactor *EsgMetricConversionFactorsPutEsgMetricConversionFactor `json:"esg_metric_conversion_factor,omitempty"`
	PreviousValues *EsgMetricConversionFactorsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewEsgMetricConversionFactorsPut instantiates a new EsgMetricConversionFactorsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsgMetricConversionFactorsPut() *EsgMetricConversionFactorsPut {
	this := EsgMetricConversionFactorsPut{}
	return &this
}

// NewEsgMetricConversionFactorsPutWithDefaults instantiates a new EsgMetricConversionFactorsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsgMetricConversionFactorsPutWithDefaults() *EsgMetricConversionFactorsPut {
	this := EsgMetricConversionFactorsPut{}
	return &this
}

// GetEsgMetricConversionFactor returns the EsgMetricConversionFactor field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPut) GetEsgMetricConversionFactor() EsgMetricConversionFactorsPutEsgMetricConversionFactor {
	if o == nil || IsNil(o.EsgMetricConversionFactor) {
		var ret EsgMetricConversionFactorsPutEsgMetricConversionFactor
		return ret
	}
	return *o.EsgMetricConversionFactor
}

// GetEsgMetricConversionFactorOk returns a tuple with the EsgMetricConversionFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPut) GetEsgMetricConversionFactorOk() (*EsgMetricConversionFactorsPutEsgMetricConversionFactor, bool) {
	if o == nil || IsNil(o.EsgMetricConversionFactor) {
		return nil, false
	}
	return o.EsgMetricConversionFactor, true
}

// HasEsgMetricConversionFactor returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPut) HasEsgMetricConversionFactor() bool {
	if o != nil && !IsNil(o.EsgMetricConversionFactor) {
		return true
	}

	return false
}

// SetEsgMetricConversionFactor gets a reference to the given EsgMetricConversionFactorsPutEsgMetricConversionFactor and assigns it to the EsgMetricConversionFactor field.
func (o *EsgMetricConversionFactorsPut) SetEsgMetricConversionFactor(v EsgMetricConversionFactorsPutEsgMetricConversionFactor) {
	o.EsgMetricConversionFactor = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPut) GetPreviousValues() EsgMetricConversionFactorsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret EsgMetricConversionFactorsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPut) GetPreviousValuesOk() (*EsgMetricConversionFactorsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given EsgMetricConversionFactorsPutPreviousValues and assigns it to the PreviousValues field.
func (o *EsgMetricConversionFactorsPut) SetPreviousValues(v EsgMetricConversionFactorsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o EsgMetricConversionFactorsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EsgMetricConversionFactorsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EsgMetricConversionFactor) {
		toSerialize["esg_metric_conversion_factor"] = o.EsgMetricConversionFactor
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableEsgMetricConversionFactorsPut struct {
	value *EsgMetricConversionFactorsPut
	isSet bool
}

func (v NullableEsgMetricConversionFactorsPut) Get() *EsgMetricConversionFactorsPut {
	return v.value
}

func (v *NullableEsgMetricConversionFactorsPut) Set(val *EsgMetricConversionFactorsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableEsgMetricConversionFactorsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableEsgMetricConversionFactorsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsgMetricConversionFactorsPut(val *EsgMetricConversionFactorsPut) *NullableEsgMetricConversionFactorsPut {
	return &NullableEsgMetricConversionFactorsPut{value: val, isSet: true}
}

func (v NullableEsgMetricConversionFactorsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsgMetricConversionFactorsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


