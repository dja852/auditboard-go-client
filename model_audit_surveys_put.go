/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AuditSurveysPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditSurveysPut{}

// AuditSurveysPut struct for AuditSurveysPut
type AuditSurveysPut struct {
	AuditSurvey *AuditSurveysPutAuditSurvey `json:"audit_survey,omitempty"`
	PreviousValues *AuditSurveysPutPreviousValues `json:"previous_values,omitempty"`
}

// NewAuditSurveysPut instantiates a new AuditSurveysPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditSurveysPut() *AuditSurveysPut {
	this := AuditSurveysPut{}
	return &this
}

// NewAuditSurveysPutWithDefaults instantiates a new AuditSurveysPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditSurveysPutWithDefaults() *AuditSurveysPut {
	this := AuditSurveysPut{}
	return &this
}

// GetAuditSurvey returns the AuditSurvey field value if set, zero value otherwise.
func (o *AuditSurveysPut) GetAuditSurvey() AuditSurveysPutAuditSurvey {
	if o == nil || IsNil(o.AuditSurvey) {
		var ret AuditSurveysPutAuditSurvey
		return ret
	}
	return *o.AuditSurvey
}

// GetAuditSurveyOk returns a tuple with the AuditSurvey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditSurveysPut) GetAuditSurveyOk() (*AuditSurveysPutAuditSurvey, bool) {
	if o == nil || IsNil(o.AuditSurvey) {
		return nil, false
	}
	return o.AuditSurvey, true
}

// HasAuditSurvey returns a boolean if a field has been set.
func (o *AuditSurveysPut) HasAuditSurvey() bool {
	if o != nil && !IsNil(o.AuditSurvey) {
		return true
	}

	return false
}

// SetAuditSurvey gets a reference to the given AuditSurveysPutAuditSurvey and assigns it to the AuditSurvey field.
func (o *AuditSurveysPut) SetAuditSurvey(v AuditSurveysPutAuditSurvey) {
	o.AuditSurvey = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *AuditSurveysPut) GetPreviousValues() AuditSurveysPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret AuditSurveysPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditSurveysPut) GetPreviousValuesOk() (*AuditSurveysPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *AuditSurveysPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given AuditSurveysPutPreviousValues and assigns it to the PreviousValues field.
func (o *AuditSurveysPut) SetPreviousValues(v AuditSurveysPutPreviousValues) {
	o.PreviousValues = &v
}

func (o AuditSurveysPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditSurveysPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditSurvey) {
		toSerialize["audit_survey"] = o.AuditSurvey
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableAuditSurveysPut struct {
	value *AuditSurveysPut
	isSet bool
}

func (v NullableAuditSurveysPut) Get() *AuditSurveysPut {
	return v.value
}

func (v *NullableAuditSurveysPut) Set(val *AuditSurveysPut) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditSurveysPut) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditSurveysPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditSurveysPut(val *AuditSurveysPut) *NullableAuditSurveysPut {
	return &NullableAuditSurveysPut{value: val, isSet: true}
}

func (v NullableAuditSurveysPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditSurveysPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


