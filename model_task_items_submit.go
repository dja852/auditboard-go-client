/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TaskItemsSubmit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskItemsSubmit{}

// TaskItemsSubmit struct for TaskItemsSubmit
type TaskItemsSubmit struct {
	TaskItems []TaskItems `json:"task_items,omitempty"`
	TaskGroups []TaskGroups `json:"task_groups,omitempty"`
	GlobalAudits []GlobalAudits `json:"global_audits,omitempty"`
}

// NewTaskItemsSubmit instantiates a new TaskItemsSubmit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskItemsSubmit() *TaskItemsSubmit {
	this := TaskItemsSubmit{}
	return &this
}

// NewTaskItemsSubmitWithDefaults instantiates a new TaskItemsSubmit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskItemsSubmitWithDefaults() *TaskItemsSubmit {
	this := TaskItemsSubmit{}
	return &this
}

// GetTaskItems returns the TaskItems field value if set, zero value otherwise.
func (o *TaskItemsSubmit) GetTaskItems() []TaskItems {
	if o == nil || IsNil(o.TaskItems) {
		var ret []TaskItems
		return ret
	}
	return o.TaskItems
}

// GetTaskItemsOk returns a tuple with the TaskItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsSubmit) GetTaskItemsOk() ([]TaskItems, bool) {
	if o == nil || IsNil(o.TaskItems) {
		return nil, false
	}
	return o.TaskItems, true
}

// HasTaskItems returns a boolean if a field has been set.
func (o *TaskItemsSubmit) HasTaskItems() bool {
	if o != nil && !IsNil(o.TaskItems) {
		return true
	}

	return false
}

// SetTaskItems gets a reference to the given []TaskItems and assigns it to the TaskItems field.
func (o *TaskItemsSubmit) SetTaskItems(v []TaskItems) {
	o.TaskItems = v
}

// GetTaskGroups returns the TaskGroups field value if set, zero value otherwise.
func (o *TaskItemsSubmit) GetTaskGroups() []TaskGroups {
	if o == nil || IsNil(o.TaskGroups) {
		var ret []TaskGroups
		return ret
	}
	return o.TaskGroups
}

// GetTaskGroupsOk returns a tuple with the TaskGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsSubmit) GetTaskGroupsOk() ([]TaskGroups, bool) {
	if o == nil || IsNil(o.TaskGroups) {
		return nil, false
	}
	return o.TaskGroups, true
}

// HasTaskGroups returns a boolean if a field has been set.
func (o *TaskItemsSubmit) HasTaskGroups() bool {
	if o != nil && !IsNil(o.TaskGroups) {
		return true
	}

	return false
}

// SetTaskGroups gets a reference to the given []TaskGroups and assigns it to the TaskGroups field.
func (o *TaskItemsSubmit) SetTaskGroups(v []TaskGroups) {
	o.TaskGroups = v
}

// GetGlobalAudits returns the GlobalAudits field value if set, zero value otherwise.
func (o *TaskItemsSubmit) GetGlobalAudits() []GlobalAudits {
	if o == nil || IsNil(o.GlobalAudits) {
		var ret []GlobalAudits
		return ret
	}
	return o.GlobalAudits
}

// GetGlobalAuditsOk returns a tuple with the GlobalAudits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsSubmit) GetGlobalAuditsOk() ([]GlobalAudits, bool) {
	if o == nil || IsNil(o.GlobalAudits) {
		return nil, false
	}
	return o.GlobalAudits, true
}

// HasGlobalAudits returns a boolean if a field has been set.
func (o *TaskItemsSubmit) HasGlobalAudits() bool {
	if o != nil && !IsNil(o.GlobalAudits) {
		return true
	}

	return false
}

// SetGlobalAudits gets a reference to the given []GlobalAudits and assigns it to the GlobalAudits field.
func (o *TaskItemsSubmit) SetGlobalAudits(v []GlobalAudits) {
	o.GlobalAudits = v
}

func (o TaskItemsSubmit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskItemsSubmit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaskItems) {
		toSerialize["task_items"] = o.TaskItems
	}
	if !IsNil(o.TaskGroups) {
		toSerialize["task_groups"] = o.TaskGroups
	}
	if !IsNil(o.GlobalAudits) {
		toSerialize["global_audits"] = o.GlobalAudits
	}
	return toSerialize, nil
}

type NullableTaskItemsSubmit struct {
	value *TaskItemsSubmit
	isSet bool
}

func (v NullableTaskItemsSubmit) Get() *TaskItemsSubmit {
	return v.value
}

func (v *NullableTaskItemsSubmit) Set(val *TaskItemsSubmit) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskItemsSubmit) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskItemsSubmit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskItemsSubmit(val *TaskItemsSubmit) *NullableTaskItemsSubmit {
	return &NullableTaskItemsSubmit{value: val, isSet: true}
}

func (v NullableTaskItemsSubmit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskItemsSubmit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


