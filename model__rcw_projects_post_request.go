/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RcwProjectsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RcwProjectsPostRequest{}

// RcwProjectsPostRequest struct for RcwProjectsPostRequest
type RcwProjectsPostRequest struct {
	RcwProject *RcwProjects `json:"rcw_project,omitempty"`
}

// NewRcwProjectsPostRequest instantiates a new RcwProjectsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRcwProjectsPostRequest() *RcwProjectsPostRequest {
	this := RcwProjectsPostRequest{}
	return &this
}

// NewRcwProjectsPostRequestWithDefaults instantiates a new RcwProjectsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRcwProjectsPostRequestWithDefaults() *RcwProjectsPostRequest {
	this := RcwProjectsPostRequest{}
	return &this
}

// GetRcwProject returns the RcwProject field value if set, zero value otherwise.
func (o *RcwProjectsPostRequest) GetRcwProject() RcwProjects {
	if o == nil || IsNil(o.RcwProject) {
		var ret RcwProjects
		return ret
	}
	return *o.RcwProject
}

// GetRcwProjectOk returns a tuple with the RcwProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RcwProjectsPostRequest) GetRcwProjectOk() (*RcwProjects, bool) {
	if o == nil || IsNil(o.RcwProject) {
		return nil, false
	}
	return o.RcwProject, true
}

// HasRcwProject returns a boolean if a field has been set.
func (o *RcwProjectsPostRequest) HasRcwProject() bool {
	if o != nil && !IsNil(o.RcwProject) {
		return true
	}

	return false
}

// SetRcwProject gets a reference to the given RcwProjects and assigns it to the RcwProject field.
func (o *RcwProjectsPostRequest) SetRcwProject(v RcwProjects) {
	o.RcwProject = &v
}

func (o RcwProjectsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RcwProjectsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RcwProject) {
		toSerialize["rcw_project"] = o.RcwProject
	}
	return toSerialize, nil
}

type NullableRcwProjectsPostRequest struct {
	value *RcwProjectsPostRequest
	isSet bool
}

func (v NullableRcwProjectsPostRequest) Get() *RcwProjectsPostRequest {
	return v.value
}

func (v *NullableRcwProjectsPostRequest) Set(val *RcwProjectsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRcwProjectsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRcwProjectsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRcwProjectsPostRequest(val *RcwProjectsPostRequest) *NullableRcwProjectsPostRequest {
	return &NullableRcwProjectsPostRequest{value: val, isSet: true}
}

func (v NullableRcwProjectsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRcwProjectsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


