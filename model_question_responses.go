/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the QuestionResponses type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuestionResponses{}

// QuestionResponses struct for QuestionResponses
type QuestionResponses struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	// Note: This is a Foreign Key to `questions.id`.<fk table='questions' column='id'/>
	QuestionId *int32 `json:"question_id,omitempty"`
	// Note: This is a Foreign Key to `survey_responses.id`.<fk table='survey_responses' column='id'/>
	SurveyResponseId *int32 `json:"survey_response_id,omitempty"`
	Status *string `json:"status,omitempty"`
	Response *string `json:"response,omitempty"`
	MetaConfig *string `json:"meta_config,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	ResponseExplanation *string `json:"response_explanation,omitempty"`
	ResponseData *string `json:"response_data,omitempty"`
	ReferenceText *string `json:"reference_text,omitempty"`
	MetaFlat *string `json:"meta_flat,omitempty"`
	Type *string `json:"type,omitempty"`
	// Note: This is a Foreign Key to `assessment_responses.id`.<fk table='assessment_responses' column='id'/>
	AssessmentResponseId *int32 `json:"assessment_response_id,omitempty"`
	FlatProperties interface{} `json:"flat_properties,omitempty"`
}

// NewQuestionResponses instantiates a new QuestionResponses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuestionResponses() *QuestionResponses {
	this := QuestionResponses{}
	var responseExplanation string = ""
	this.ResponseExplanation = &responseExplanation
	var referenceText string = ""
	this.ReferenceText = &referenceText
	return &this
}

// NewQuestionResponsesWithDefaults instantiates a new QuestionResponses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuestionResponsesWithDefaults() *QuestionResponses {
	this := QuestionResponses{}
	var responseExplanation string = ""
	this.ResponseExplanation = &responseExplanation
	var referenceText string = ""
	this.ReferenceText = &referenceText
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QuestionResponses) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QuestionResponses) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *QuestionResponses) SetId(v int32) {
	o.Id = &v
}

// GetQuestionId returns the QuestionId field value if set, zero value otherwise.
func (o *QuestionResponses) GetQuestionId() int32 {
	if o == nil || IsNil(o.QuestionId) {
		var ret int32
		return ret
	}
	return *o.QuestionId
}

// GetQuestionIdOk returns a tuple with the QuestionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetQuestionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QuestionId) {
		return nil, false
	}
	return o.QuestionId, true
}

// HasQuestionId returns a boolean if a field has been set.
func (o *QuestionResponses) HasQuestionId() bool {
	if o != nil && !IsNil(o.QuestionId) {
		return true
	}

	return false
}

// SetQuestionId gets a reference to the given int32 and assigns it to the QuestionId field.
func (o *QuestionResponses) SetQuestionId(v int32) {
	o.QuestionId = &v
}

// GetSurveyResponseId returns the SurveyResponseId field value if set, zero value otherwise.
func (o *QuestionResponses) GetSurveyResponseId() int32 {
	if o == nil || IsNil(o.SurveyResponseId) {
		var ret int32
		return ret
	}
	return *o.SurveyResponseId
}

// GetSurveyResponseIdOk returns a tuple with the SurveyResponseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetSurveyResponseIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SurveyResponseId) {
		return nil, false
	}
	return o.SurveyResponseId, true
}

// HasSurveyResponseId returns a boolean if a field has been set.
func (o *QuestionResponses) HasSurveyResponseId() bool {
	if o != nil && !IsNil(o.SurveyResponseId) {
		return true
	}

	return false
}

// SetSurveyResponseId gets a reference to the given int32 and assigns it to the SurveyResponseId field.
func (o *QuestionResponses) SetSurveyResponseId(v int32) {
	o.SurveyResponseId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *QuestionResponses) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *QuestionResponses) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *QuestionResponses) SetStatus(v string) {
	o.Status = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *QuestionResponses) GetResponse() string {
	if o == nil || IsNil(o.Response) {
		var ret string
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetResponseOk() (*string, bool) {
	if o == nil || IsNil(o.Response) {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *QuestionResponses) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given string and assigns it to the Response field.
func (o *QuestionResponses) SetResponse(v string) {
	o.Response = &v
}

// GetMetaConfig returns the MetaConfig field value if set, zero value otherwise.
func (o *QuestionResponses) GetMetaConfig() string {
	if o == nil || IsNil(o.MetaConfig) {
		var ret string
		return ret
	}
	return *o.MetaConfig
}

// GetMetaConfigOk returns a tuple with the MetaConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetMetaConfigOk() (*string, bool) {
	if o == nil || IsNil(o.MetaConfig) {
		return nil, false
	}
	return o.MetaConfig, true
}

// HasMetaConfig returns a boolean if a field has been set.
func (o *QuestionResponses) HasMetaConfig() bool {
	if o != nil && !IsNil(o.MetaConfig) {
		return true
	}

	return false
}

// SetMetaConfig gets a reference to the given string and assigns it to the MetaConfig field.
func (o *QuestionResponses) SetMetaConfig(v string) {
	o.MetaConfig = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *QuestionResponses) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *QuestionResponses) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *QuestionResponses) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *QuestionResponses) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *QuestionResponses) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *QuestionResponses) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *QuestionResponses) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *QuestionResponses) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *QuestionResponses) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetResponseExplanation returns the ResponseExplanation field value if set, zero value otherwise.
func (o *QuestionResponses) GetResponseExplanation() string {
	if o == nil || IsNil(o.ResponseExplanation) {
		var ret string
		return ret
	}
	return *o.ResponseExplanation
}

// GetResponseExplanationOk returns a tuple with the ResponseExplanation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetResponseExplanationOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseExplanation) {
		return nil, false
	}
	return o.ResponseExplanation, true
}

// HasResponseExplanation returns a boolean if a field has been set.
func (o *QuestionResponses) HasResponseExplanation() bool {
	if o != nil && !IsNil(o.ResponseExplanation) {
		return true
	}

	return false
}

// SetResponseExplanation gets a reference to the given string and assigns it to the ResponseExplanation field.
func (o *QuestionResponses) SetResponseExplanation(v string) {
	o.ResponseExplanation = &v
}

// GetResponseData returns the ResponseData field value if set, zero value otherwise.
func (o *QuestionResponses) GetResponseData() string {
	if o == nil || IsNil(o.ResponseData) {
		var ret string
		return ret
	}
	return *o.ResponseData
}

// GetResponseDataOk returns a tuple with the ResponseData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetResponseDataOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseData) {
		return nil, false
	}
	return o.ResponseData, true
}

// HasResponseData returns a boolean if a field has been set.
func (o *QuestionResponses) HasResponseData() bool {
	if o != nil && !IsNil(o.ResponseData) {
		return true
	}

	return false
}

// SetResponseData gets a reference to the given string and assigns it to the ResponseData field.
func (o *QuestionResponses) SetResponseData(v string) {
	o.ResponseData = &v
}

// GetReferenceText returns the ReferenceText field value if set, zero value otherwise.
func (o *QuestionResponses) GetReferenceText() string {
	if o == nil || IsNil(o.ReferenceText) {
		var ret string
		return ret
	}
	return *o.ReferenceText
}

// GetReferenceTextOk returns a tuple with the ReferenceText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetReferenceTextOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceText) {
		return nil, false
	}
	return o.ReferenceText, true
}

// HasReferenceText returns a boolean if a field has been set.
func (o *QuestionResponses) HasReferenceText() bool {
	if o != nil && !IsNil(o.ReferenceText) {
		return true
	}

	return false
}

// SetReferenceText gets a reference to the given string and assigns it to the ReferenceText field.
func (o *QuestionResponses) SetReferenceText(v string) {
	o.ReferenceText = &v
}

// GetMetaFlat returns the MetaFlat field value if set, zero value otherwise.
func (o *QuestionResponses) GetMetaFlat() string {
	if o == nil || IsNil(o.MetaFlat) {
		var ret string
		return ret
	}
	return *o.MetaFlat
}

// GetMetaFlatOk returns a tuple with the MetaFlat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetMetaFlatOk() (*string, bool) {
	if o == nil || IsNil(o.MetaFlat) {
		return nil, false
	}
	return o.MetaFlat, true
}

// HasMetaFlat returns a boolean if a field has been set.
func (o *QuestionResponses) HasMetaFlat() bool {
	if o != nil && !IsNil(o.MetaFlat) {
		return true
	}

	return false
}

// SetMetaFlat gets a reference to the given string and assigns it to the MetaFlat field.
func (o *QuestionResponses) SetMetaFlat(v string) {
	o.MetaFlat = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *QuestionResponses) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *QuestionResponses) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *QuestionResponses) SetType(v string) {
	o.Type = &v
}

// GetAssessmentResponseId returns the AssessmentResponseId field value if set, zero value otherwise.
func (o *QuestionResponses) GetAssessmentResponseId() int32 {
	if o == nil || IsNil(o.AssessmentResponseId) {
		var ret int32
		return ret
	}
	return *o.AssessmentResponseId
}

// GetAssessmentResponseIdOk returns a tuple with the AssessmentResponseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionResponses) GetAssessmentResponseIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AssessmentResponseId) {
		return nil, false
	}
	return o.AssessmentResponseId, true
}

// HasAssessmentResponseId returns a boolean if a field has been set.
func (o *QuestionResponses) HasAssessmentResponseId() bool {
	if o != nil && !IsNil(o.AssessmentResponseId) {
		return true
	}

	return false
}

// SetAssessmentResponseId gets a reference to the given int32 and assigns it to the AssessmentResponseId field.
func (o *QuestionResponses) SetAssessmentResponseId(v int32) {
	o.AssessmentResponseId = &v
}

// GetFlatProperties returns the FlatProperties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuestionResponses) GetFlatProperties() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FlatProperties
}

// GetFlatPropertiesOk returns a tuple with the FlatProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuestionResponses) GetFlatPropertiesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FlatProperties) {
		return nil, false
	}
	return &o.FlatProperties, true
}

// HasFlatProperties returns a boolean if a field has been set.
func (o *QuestionResponses) HasFlatProperties() bool {
	if o != nil && !IsNil(o.FlatProperties) {
		return true
	}

	return false
}

// SetFlatProperties gets a reference to the given interface{} and assigns it to the FlatProperties field.
func (o *QuestionResponses) SetFlatProperties(v interface{}) {
	o.FlatProperties = v
}

func (o QuestionResponses) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuestionResponses) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.QuestionId) {
		toSerialize["question_id"] = o.QuestionId
	}
	if !IsNil(o.SurveyResponseId) {
		toSerialize["survey_response_id"] = o.SurveyResponseId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	if !IsNil(o.MetaConfig) {
		toSerialize["meta_config"] = o.MetaConfig
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.ResponseExplanation) {
		toSerialize["response_explanation"] = o.ResponseExplanation
	}
	if !IsNil(o.ResponseData) {
		toSerialize["response_data"] = o.ResponseData
	}
	if !IsNil(o.ReferenceText) {
		toSerialize["reference_text"] = o.ReferenceText
	}
	if !IsNil(o.MetaFlat) {
		toSerialize["meta_flat"] = o.MetaFlat
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.AssessmentResponseId) {
		toSerialize["assessment_response_id"] = o.AssessmentResponseId
	}
	if o.FlatProperties != nil {
		toSerialize["flat_properties"] = o.FlatProperties
	}
	return toSerialize, nil
}

type NullableQuestionResponses struct {
	value *QuestionResponses
	isSet bool
}

func (v NullableQuestionResponses) Get() *QuestionResponses {
	return v.value
}

func (v *NullableQuestionResponses) Set(val *QuestionResponses) {
	v.value = val
	v.isSet = true
}

func (v NullableQuestionResponses) IsSet() bool {
	return v.isSet
}

func (v *NullableQuestionResponses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuestionResponses(val *QuestionResponses) *NullableQuestionResponses {
	return &NullableQuestionResponses{value: val, isSet: true}
}

func (v NullableQuestionResponses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuestionResponses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


