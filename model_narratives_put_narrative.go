/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the NarrativesPutNarrative type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NarrativesPutNarrative{}

// NarrativesPutNarrative struct for NarrativesPutNarrative
type NarrativesPutNarrative struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	Uid string `json:"uid"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	Name string `json:"name"`
	Summary *string `json:"summary,omitempty"`
	Body *string `json:"body,omitempty"`
	LockUserId *int32 `json:"lock_user_id,omitempty"`
	LockedAt *string `json:"locked_at,omitempty"`
	PageLayout interface{} `json:"page_layout,omitempty"`
	Description *string `json:"description,omitempty"`
	Category *string `json:"category,omitempty"`
	// Note: This is a Foreign Key to `narrative_types.id`.<fk table='narrative_types' column='id'/>
	NarrativeTypeId *int32 `json:"narrative_type_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	LastRevisionByUserId *int32 `json:"last_revision_by_user_id,omitempty"`
	LastRevisionDate *string `json:"last_revision_date,omitempty"`
	// Note: This is a Foreign Key to `document_versions.id`.<fk table='document_versions' column='id'/>
	LatestDocumentVersionId *int32 `json:"latest_document_version_id,omitempty"`
	Scopes interface{} `json:"scopes,omitempty"`
}

type _NarrativesPutNarrative NarrativesPutNarrative

// NewNarrativesPutNarrative instantiates a new NarrativesPutNarrative object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNarrativesPutNarrative(uid string, name string) *NarrativesPutNarrative {
	this := NarrativesPutNarrative{}
	this.Uid = uid
	this.Name = name
	return &this
}

// NewNarrativesPutNarrativeWithDefaults instantiates a new NarrativesPutNarrative object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNarrativesPutNarrativeWithDefaults() *NarrativesPutNarrative {
	this := NarrativesPutNarrative{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *NarrativesPutNarrative) SetId(v int32) {
	o.Id = &v
}

// GetUid returns the Uid field value
func (o *NarrativesPutNarrative) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *NarrativesPutNarrative) SetUid(v string) {
	o.Uid = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *NarrativesPutNarrative) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *NarrativesPutNarrative) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *NarrativesPutNarrative) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetName returns the Name field value
func (o *NarrativesPutNarrative) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NarrativesPutNarrative) SetName(v string) {
	o.Name = v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *NarrativesPutNarrative) SetSummary(v string) {
	o.Summary = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *NarrativesPutNarrative) SetBody(v string) {
	o.Body = &v
}

// GetLockUserId returns the LockUserId field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetLockUserId() int32 {
	if o == nil || IsNil(o.LockUserId) {
		var ret int32
		return ret
	}
	return *o.LockUserId
}

// GetLockUserIdOk returns a tuple with the LockUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetLockUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LockUserId) {
		return nil, false
	}
	return o.LockUserId, true
}

// HasLockUserId returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasLockUserId() bool {
	if o != nil && !IsNil(o.LockUserId) {
		return true
	}

	return false
}

// SetLockUserId gets a reference to the given int32 and assigns it to the LockUserId field.
func (o *NarrativesPutNarrative) SetLockUserId(v int32) {
	o.LockUserId = &v
}

// GetLockedAt returns the LockedAt field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetLockedAt() string {
	if o == nil || IsNil(o.LockedAt) {
		var ret string
		return ret
	}
	return *o.LockedAt
}

// GetLockedAtOk returns a tuple with the LockedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetLockedAtOk() (*string, bool) {
	if o == nil || IsNil(o.LockedAt) {
		return nil, false
	}
	return o.LockedAt, true
}

// HasLockedAt returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasLockedAt() bool {
	if o != nil && !IsNil(o.LockedAt) {
		return true
	}

	return false
}

// SetLockedAt gets a reference to the given string and assigns it to the LockedAt field.
func (o *NarrativesPutNarrative) SetLockedAt(v string) {
	o.LockedAt = &v
}

// GetPageLayout returns the PageLayout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NarrativesPutNarrative) GetPageLayout() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PageLayout
}

// GetPageLayoutOk returns a tuple with the PageLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NarrativesPutNarrative) GetPageLayoutOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PageLayout) {
		return nil, false
	}
	return &o.PageLayout, true
}

// HasPageLayout returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasPageLayout() bool {
	if o != nil && !IsNil(o.PageLayout) {
		return true
	}

	return false
}

// SetPageLayout gets a reference to the given interface{} and assigns it to the PageLayout field.
func (o *NarrativesPutNarrative) SetPageLayout(v interface{}) {
	o.PageLayout = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NarrativesPutNarrative) SetDescription(v string) {
	o.Description = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *NarrativesPutNarrative) SetCategory(v string) {
	o.Category = &v
}

// GetNarrativeTypeId returns the NarrativeTypeId field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetNarrativeTypeId() int32 {
	if o == nil || IsNil(o.NarrativeTypeId) {
		var ret int32
		return ret
	}
	return *o.NarrativeTypeId
}

// GetNarrativeTypeIdOk returns a tuple with the NarrativeTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetNarrativeTypeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NarrativeTypeId) {
		return nil, false
	}
	return o.NarrativeTypeId, true
}

// HasNarrativeTypeId returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasNarrativeTypeId() bool {
	if o != nil && !IsNil(o.NarrativeTypeId) {
		return true
	}

	return false
}

// SetNarrativeTypeId gets a reference to the given int32 and assigns it to the NarrativeTypeId field.
func (o *NarrativesPutNarrative) SetNarrativeTypeId(v int32) {
	o.NarrativeTypeId = &v
}

// GetLastRevisionByUserId returns the LastRevisionByUserId field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetLastRevisionByUserId() int32 {
	if o == nil || IsNil(o.LastRevisionByUserId) {
		var ret int32
		return ret
	}
	return *o.LastRevisionByUserId
}

// GetLastRevisionByUserIdOk returns a tuple with the LastRevisionByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetLastRevisionByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LastRevisionByUserId) {
		return nil, false
	}
	return o.LastRevisionByUserId, true
}

// HasLastRevisionByUserId returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasLastRevisionByUserId() bool {
	if o != nil && !IsNil(o.LastRevisionByUserId) {
		return true
	}

	return false
}

// SetLastRevisionByUserId gets a reference to the given int32 and assigns it to the LastRevisionByUserId field.
func (o *NarrativesPutNarrative) SetLastRevisionByUserId(v int32) {
	o.LastRevisionByUserId = &v
}

// GetLastRevisionDate returns the LastRevisionDate field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetLastRevisionDate() string {
	if o == nil || IsNil(o.LastRevisionDate) {
		var ret string
		return ret
	}
	return *o.LastRevisionDate
}

// GetLastRevisionDateOk returns a tuple with the LastRevisionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetLastRevisionDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastRevisionDate) {
		return nil, false
	}
	return o.LastRevisionDate, true
}

// HasLastRevisionDate returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasLastRevisionDate() bool {
	if o != nil && !IsNil(o.LastRevisionDate) {
		return true
	}

	return false
}

// SetLastRevisionDate gets a reference to the given string and assigns it to the LastRevisionDate field.
func (o *NarrativesPutNarrative) SetLastRevisionDate(v string) {
	o.LastRevisionDate = &v
}

// GetLatestDocumentVersionId returns the LatestDocumentVersionId field value if set, zero value otherwise.
func (o *NarrativesPutNarrative) GetLatestDocumentVersionId() int32 {
	if o == nil || IsNil(o.LatestDocumentVersionId) {
		var ret int32
		return ret
	}
	return *o.LatestDocumentVersionId
}

// GetLatestDocumentVersionIdOk returns a tuple with the LatestDocumentVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesPutNarrative) GetLatestDocumentVersionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LatestDocumentVersionId) {
		return nil, false
	}
	return o.LatestDocumentVersionId, true
}

// HasLatestDocumentVersionId returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasLatestDocumentVersionId() bool {
	if o != nil && !IsNil(o.LatestDocumentVersionId) {
		return true
	}

	return false
}

// SetLatestDocumentVersionId gets a reference to the given int32 and assigns it to the LatestDocumentVersionId field.
func (o *NarrativesPutNarrative) SetLatestDocumentVersionId(v int32) {
	o.LatestDocumentVersionId = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NarrativesPutNarrative) GetScopes() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NarrativesPutNarrative) GetScopesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return &o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *NarrativesPutNarrative) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given interface{} and assigns it to the Scopes field.
func (o *NarrativesPutNarrative) SetScopes(v interface{}) {
	o.Scopes = v
}

func (o NarrativesPutNarrative) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NarrativesPutNarrative) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["uid"] = o.Uid
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.LockUserId) {
		toSerialize["lock_user_id"] = o.LockUserId
	}
	if !IsNil(o.LockedAt) {
		toSerialize["locked_at"] = o.LockedAt
	}
	if o.PageLayout != nil {
		toSerialize["page_layout"] = o.PageLayout
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.NarrativeTypeId) {
		toSerialize["narrative_type_id"] = o.NarrativeTypeId
	}
	if !IsNil(o.LastRevisionByUserId) {
		toSerialize["last_revision_by_user_id"] = o.LastRevisionByUserId
	}
	if !IsNil(o.LastRevisionDate) {
		toSerialize["last_revision_date"] = o.LastRevisionDate
	}
	if !IsNil(o.LatestDocumentVersionId) {
		toSerialize["latest_document_version_id"] = o.LatestDocumentVersionId
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	return toSerialize, nil
}

type NullableNarrativesPutNarrative struct {
	value *NarrativesPutNarrative
	isSet bool
}

func (v NullableNarrativesPutNarrative) Get() *NarrativesPutNarrative {
	return v.value
}

func (v *NullableNarrativesPutNarrative) Set(val *NarrativesPutNarrative) {
	v.value = val
	v.isSet = true
}

func (v NullableNarrativesPutNarrative) IsSet() bool {
	return v.isSet
}

func (v *NullableNarrativesPutNarrative) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNarrativesPutNarrative(val *NarrativesPutNarrative) *NullableNarrativesPutNarrative {
	return &NullableNarrativesPutNarrative{value: val, isSet: true}
}

func (v NullableNarrativesPutNarrative) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNarrativesPutNarrative) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


