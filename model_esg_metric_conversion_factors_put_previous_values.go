/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the EsgMetricConversionFactorsPutPreviousValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EsgMetricConversionFactorsPutPreviousValues{}

// EsgMetricConversionFactorsPutPreviousValues struct for EsgMetricConversionFactorsPutPreviousValues
type EsgMetricConversionFactorsPutPreviousValues struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	// Note: This is a Foreign Key to `esg_metric_unit_options.id`.<fk table='esg_metric_unit_options' column='id'/>
	FromUnitId *int32 `json:"from_unit_id,omitempty"`
	// Note: This is a Foreign Key to `esg_metric_unit_options.id`.<fk table='esg_metric_unit_options' column='id'/>
	ToUnitId *int32 `json:"to_unit_id,omitempty"`
	ConversionFactor *float32 `json:"conversion_factor,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewEsgMetricConversionFactorsPutPreviousValues instantiates a new EsgMetricConversionFactorsPutPreviousValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsgMetricConversionFactorsPutPreviousValues() *EsgMetricConversionFactorsPutPreviousValues {
	this := EsgMetricConversionFactorsPutPreviousValues{}
	return &this
}

// NewEsgMetricConversionFactorsPutPreviousValuesWithDefaults instantiates a new EsgMetricConversionFactorsPutPreviousValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsgMetricConversionFactorsPutPreviousValuesWithDefaults() *EsgMetricConversionFactorsPutPreviousValues {
	this := EsgMetricConversionFactorsPutPreviousValues{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EsgMetricConversionFactorsPutPreviousValues) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *EsgMetricConversionFactorsPutPreviousValues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *EsgMetricConversionFactorsPutPreviousValues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *EsgMetricConversionFactorsPutPreviousValues) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetFromUnitId returns the FromUnitId field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetFromUnitId() int32 {
	if o == nil || IsNil(o.FromUnitId) {
		var ret int32
		return ret
	}
	return *o.FromUnitId
}

// GetFromUnitIdOk returns a tuple with the FromUnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetFromUnitIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FromUnitId) {
		return nil, false
	}
	return o.FromUnitId, true
}

// HasFromUnitId returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) HasFromUnitId() bool {
	if o != nil && !IsNil(o.FromUnitId) {
		return true
	}

	return false
}

// SetFromUnitId gets a reference to the given int32 and assigns it to the FromUnitId field.
func (o *EsgMetricConversionFactorsPutPreviousValues) SetFromUnitId(v int32) {
	o.FromUnitId = &v
}

// GetToUnitId returns the ToUnitId field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetToUnitId() int32 {
	if o == nil || IsNil(o.ToUnitId) {
		var ret int32
		return ret
	}
	return *o.ToUnitId
}

// GetToUnitIdOk returns a tuple with the ToUnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetToUnitIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ToUnitId) {
		return nil, false
	}
	return o.ToUnitId, true
}

// HasToUnitId returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) HasToUnitId() bool {
	if o != nil && !IsNil(o.ToUnitId) {
		return true
	}

	return false
}

// SetToUnitId gets a reference to the given int32 and assigns it to the ToUnitId field.
func (o *EsgMetricConversionFactorsPutPreviousValues) SetToUnitId(v int32) {
	o.ToUnitId = &v
}

// GetConversionFactor returns the ConversionFactor field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetConversionFactor() float32 {
	if o == nil || IsNil(o.ConversionFactor) {
		var ret float32
		return ret
	}
	return *o.ConversionFactor
}

// GetConversionFactorOk returns a tuple with the ConversionFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetConversionFactorOk() (*float32, bool) {
	if o == nil || IsNil(o.ConversionFactor) {
		return nil, false
	}
	return o.ConversionFactor, true
}

// HasConversionFactor returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) HasConversionFactor() bool {
	if o != nil && !IsNil(o.ConversionFactor) {
		return true
	}

	return false
}

// SetConversionFactor gets a reference to the given float32 and assigns it to the ConversionFactor field.
func (o *EsgMetricConversionFactorsPutPreviousValues) SetConversionFactor(v float32) {
	o.ConversionFactor = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EsgMetricConversionFactorsPutPreviousValues) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EsgMetricConversionFactorsPutPreviousValues) SetType(v string) {
	o.Type = &v
}

func (o EsgMetricConversionFactorsPutPreviousValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EsgMetricConversionFactorsPutPreviousValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.FromUnitId) {
		toSerialize["from_unit_id"] = o.FromUnitId
	}
	if !IsNil(o.ToUnitId) {
		toSerialize["to_unit_id"] = o.ToUnitId
	}
	if !IsNil(o.ConversionFactor) {
		toSerialize["conversion_factor"] = o.ConversionFactor
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableEsgMetricConversionFactorsPutPreviousValues struct {
	value *EsgMetricConversionFactorsPutPreviousValues
	isSet bool
}

func (v NullableEsgMetricConversionFactorsPutPreviousValues) Get() *EsgMetricConversionFactorsPutPreviousValues {
	return v.value
}

func (v *NullableEsgMetricConversionFactorsPutPreviousValues) Set(val *EsgMetricConversionFactorsPutPreviousValues) {
	v.value = val
	v.isSet = true
}

func (v NullableEsgMetricConversionFactorsPutPreviousValues) IsSet() bool {
	return v.isSet
}

func (v *NullableEsgMetricConversionFactorsPutPreviousValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsgMetricConversionFactorsPutPreviousValues(val *EsgMetricConversionFactorsPutPreviousValues) *NullableEsgMetricConversionFactorsPutPreviousValues {
	return &NullableEsgMetricConversionFactorsPutPreviousValues{value: val, isSet: true}
}

func (v NullableEsgMetricConversionFactorsPutPreviousValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsgMetricConversionFactorsPutPreviousValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


