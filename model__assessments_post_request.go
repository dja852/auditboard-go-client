/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AssessmentsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssessmentsPostRequest{}

// AssessmentsPostRequest struct for AssessmentsPostRequest
type AssessmentsPostRequest struct {
	Assessment *Assessments `json:"assessment,omitempty"`
}

// NewAssessmentsPostRequest instantiates a new AssessmentsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssessmentsPostRequest() *AssessmentsPostRequest {
	this := AssessmentsPostRequest{}
	return &this
}

// NewAssessmentsPostRequestWithDefaults instantiates a new AssessmentsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssessmentsPostRequestWithDefaults() *AssessmentsPostRequest {
	this := AssessmentsPostRequest{}
	return &this
}

// GetAssessment returns the Assessment field value if set, zero value otherwise.
func (o *AssessmentsPostRequest) GetAssessment() Assessments {
	if o == nil || IsNil(o.Assessment) {
		var ret Assessments
		return ret
	}
	return *o.Assessment
}

// GetAssessmentOk returns a tuple with the Assessment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssessmentsPostRequest) GetAssessmentOk() (*Assessments, bool) {
	if o == nil || IsNil(o.Assessment) {
		return nil, false
	}
	return o.Assessment, true
}

// HasAssessment returns a boolean if a field has been set.
func (o *AssessmentsPostRequest) HasAssessment() bool {
	if o != nil && !IsNil(o.Assessment) {
		return true
	}

	return false
}

// SetAssessment gets a reference to the given Assessments and assigns it to the Assessment field.
func (o *AssessmentsPostRequest) SetAssessment(v Assessments) {
	o.Assessment = &v
}

func (o AssessmentsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssessmentsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Assessment) {
		toSerialize["assessment"] = o.Assessment
	}
	return toSerialize, nil
}

type NullableAssessmentsPostRequest struct {
	value *AssessmentsPostRequest
	isSet bool
}

func (v NullableAssessmentsPostRequest) Get() *AssessmentsPostRequest {
	return v.value
}

func (v *NullableAssessmentsPostRequest) Set(val *AssessmentsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAssessmentsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAssessmentsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssessmentsPostRequest(val *AssessmentsPostRequest) *NullableAssessmentsPostRequest {
	return &NullableAssessmentsPostRequest{value: val, isSet: true}
}

func (v NullableAssessmentsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssessmentsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


