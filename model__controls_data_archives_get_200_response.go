/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ControlsDataArchivesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControlsDataArchivesGet200Response{}

// ControlsDataArchivesGet200Response struct for ControlsDataArchivesGet200Response
type ControlsDataArchivesGet200Response struct {
	ControlsDataArchives []ControlsDataArchives `json:"controls_data_archives,omitempty"`
}

// NewControlsDataArchivesGet200Response instantiates a new ControlsDataArchivesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControlsDataArchivesGet200Response() *ControlsDataArchivesGet200Response {
	this := ControlsDataArchivesGet200Response{}
	return &this
}

// NewControlsDataArchivesGet200ResponseWithDefaults instantiates a new ControlsDataArchivesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlsDataArchivesGet200ResponseWithDefaults() *ControlsDataArchivesGet200Response {
	this := ControlsDataArchivesGet200Response{}
	return &this
}

// GetControlsDataArchives returns the ControlsDataArchives field value if set, zero value otherwise.
func (o *ControlsDataArchivesGet200Response) GetControlsDataArchives() []ControlsDataArchives {
	if o == nil || IsNil(o.ControlsDataArchives) {
		var ret []ControlsDataArchives
		return ret
	}
	return o.ControlsDataArchives
}

// GetControlsDataArchivesOk returns a tuple with the ControlsDataArchives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsDataArchivesGet200Response) GetControlsDataArchivesOk() ([]ControlsDataArchives, bool) {
	if o == nil || IsNil(o.ControlsDataArchives) {
		return nil, false
	}
	return o.ControlsDataArchives, true
}

// HasControlsDataArchives returns a boolean if a field has been set.
func (o *ControlsDataArchivesGet200Response) HasControlsDataArchives() bool {
	if o != nil && !IsNil(o.ControlsDataArchives) {
		return true
	}

	return false
}

// SetControlsDataArchives gets a reference to the given []ControlsDataArchives and assigns it to the ControlsDataArchives field.
func (o *ControlsDataArchivesGet200Response) SetControlsDataArchives(v []ControlsDataArchives) {
	o.ControlsDataArchives = v
}

func (o ControlsDataArchivesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControlsDataArchivesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ControlsDataArchives) {
		toSerialize["controls_data_archives"] = o.ControlsDataArchives
	}
	return toSerialize, nil
}

type NullableControlsDataArchivesGet200Response struct {
	value *ControlsDataArchivesGet200Response
	isSet bool
}

func (v NullableControlsDataArchivesGet200Response) Get() *ControlsDataArchivesGet200Response {
	return v.value
}

func (v *NullableControlsDataArchivesGet200Response) Set(val *ControlsDataArchivesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableControlsDataArchivesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableControlsDataArchivesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControlsDataArchivesGet200Response(val *ControlsDataArchivesGet200Response) *NullableControlsDataArchivesGet200Response {
	return &NullableControlsDataArchivesGet200Response{value: val, isSet: true}
}

func (v NullableControlsDataArchivesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControlsDataArchivesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


