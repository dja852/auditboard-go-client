/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ReportsGenerateAuditableEntityPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportsGenerateAuditableEntityPostRequest{}

// ReportsGenerateAuditableEntityPostRequest struct for ReportsGenerateAuditableEntityPostRequest
type ReportsGenerateAuditableEntityPostRequest struct {
	ReportType *string `json:"reportType,omitempty"`
	QueryData *ReportsGenerateAuditableEntityPostRequestQueryData `json:"queryData,omitempty"`
}

// NewReportsGenerateAuditableEntityPostRequest instantiates a new ReportsGenerateAuditableEntityPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportsGenerateAuditableEntityPostRequest() *ReportsGenerateAuditableEntityPostRequest {
	this := ReportsGenerateAuditableEntityPostRequest{}
	return &this
}

// NewReportsGenerateAuditableEntityPostRequestWithDefaults instantiates a new ReportsGenerateAuditableEntityPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportsGenerateAuditableEntityPostRequestWithDefaults() *ReportsGenerateAuditableEntityPostRequest {
	this := ReportsGenerateAuditableEntityPostRequest{}
	return &this
}

// GetReportType returns the ReportType field value if set, zero value otherwise.
func (o *ReportsGenerateAuditableEntityPostRequest) GetReportType() string {
	if o == nil || IsNil(o.ReportType) {
		var ret string
		return ret
	}
	return *o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportsGenerateAuditableEntityPostRequest) GetReportTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReportType) {
		return nil, false
	}
	return o.ReportType, true
}

// HasReportType returns a boolean if a field has been set.
func (o *ReportsGenerateAuditableEntityPostRequest) HasReportType() bool {
	if o != nil && !IsNil(o.ReportType) {
		return true
	}

	return false
}

// SetReportType gets a reference to the given string and assigns it to the ReportType field.
func (o *ReportsGenerateAuditableEntityPostRequest) SetReportType(v string) {
	o.ReportType = &v
}

// GetQueryData returns the QueryData field value if set, zero value otherwise.
func (o *ReportsGenerateAuditableEntityPostRequest) GetQueryData() ReportsGenerateAuditableEntityPostRequestQueryData {
	if o == nil || IsNil(o.QueryData) {
		var ret ReportsGenerateAuditableEntityPostRequestQueryData
		return ret
	}
	return *o.QueryData
}

// GetQueryDataOk returns a tuple with the QueryData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportsGenerateAuditableEntityPostRequest) GetQueryDataOk() (*ReportsGenerateAuditableEntityPostRequestQueryData, bool) {
	if o == nil || IsNil(o.QueryData) {
		return nil, false
	}
	return o.QueryData, true
}

// HasQueryData returns a boolean if a field has been set.
func (o *ReportsGenerateAuditableEntityPostRequest) HasQueryData() bool {
	if o != nil && !IsNil(o.QueryData) {
		return true
	}

	return false
}

// SetQueryData gets a reference to the given ReportsGenerateAuditableEntityPostRequestQueryData and assigns it to the QueryData field.
func (o *ReportsGenerateAuditableEntityPostRequest) SetQueryData(v ReportsGenerateAuditableEntityPostRequestQueryData) {
	o.QueryData = &v
}

func (o ReportsGenerateAuditableEntityPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportsGenerateAuditableEntityPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportType) {
		toSerialize["reportType"] = o.ReportType
	}
	if !IsNil(o.QueryData) {
		toSerialize["queryData"] = o.QueryData
	}
	return toSerialize, nil
}

type NullableReportsGenerateAuditableEntityPostRequest struct {
	value *ReportsGenerateAuditableEntityPostRequest
	isSet bool
}

func (v NullableReportsGenerateAuditableEntityPostRequest) Get() *ReportsGenerateAuditableEntityPostRequest {
	return v.value
}

func (v *NullableReportsGenerateAuditableEntityPostRequest) Set(val *ReportsGenerateAuditableEntityPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReportsGenerateAuditableEntityPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReportsGenerateAuditableEntityPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportsGenerateAuditableEntityPostRequest(val *ReportsGenerateAuditableEntityPostRequest) *NullableReportsGenerateAuditableEntityPostRequest {
	return &NullableReportsGenerateAuditableEntityPostRequest{value: val, isSet: true}
}

func (v NullableReportsGenerateAuditableEntityPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportsGenerateAuditableEntityPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


