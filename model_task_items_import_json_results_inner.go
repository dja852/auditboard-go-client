/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TaskItemsImportJsonResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskItemsImportJsonResultsInner{}

// TaskItemsImportJsonResultsInner struct for TaskItemsImportJsonResultsInner
type TaskItemsImportJsonResultsInner struct {
	Index *int32 `json:"index,omitempty"`
	Action *string `json:"action,omitempty"`
	Success *bool `json:"success,omitempty"`
	ErrorJSON *TaskItemsImportJsonResultsInnerErrorJSON `json:"errorJSON,omitempty"`
	Error *string `json:"error,omitempty"`
}

// NewTaskItemsImportJsonResultsInner instantiates a new TaskItemsImportJsonResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskItemsImportJsonResultsInner() *TaskItemsImportJsonResultsInner {
	this := TaskItemsImportJsonResultsInner{}
	return &this
}

// NewTaskItemsImportJsonResultsInnerWithDefaults instantiates a new TaskItemsImportJsonResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskItemsImportJsonResultsInnerWithDefaults() *TaskItemsImportJsonResultsInner {
	this := TaskItemsImportJsonResultsInner{}
	return &this
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *TaskItemsImportJsonResultsInner) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonResultsInner) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *TaskItemsImportJsonResultsInner) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *TaskItemsImportJsonResultsInner) SetIndex(v int32) {
	o.Index = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *TaskItemsImportJsonResultsInner) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonResultsInner) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *TaskItemsImportJsonResultsInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *TaskItemsImportJsonResultsInner) SetAction(v string) {
	o.Action = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *TaskItemsImportJsonResultsInner) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonResultsInner) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *TaskItemsImportJsonResultsInner) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *TaskItemsImportJsonResultsInner) SetSuccess(v bool) {
	o.Success = &v
}

// GetErrorJSON returns the ErrorJSON field value if set, zero value otherwise.
func (o *TaskItemsImportJsonResultsInner) GetErrorJSON() TaskItemsImportJsonResultsInnerErrorJSON {
	if o == nil || IsNil(o.ErrorJSON) {
		var ret TaskItemsImportJsonResultsInnerErrorJSON
		return ret
	}
	return *o.ErrorJSON
}

// GetErrorJSONOk returns a tuple with the ErrorJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonResultsInner) GetErrorJSONOk() (*TaskItemsImportJsonResultsInnerErrorJSON, bool) {
	if o == nil || IsNil(o.ErrorJSON) {
		return nil, false
	}
	return o.ErrorJSON, true
}

// HasErrorJSON returns a boolean if a field has been set.
func (o *TaskItemsImportJsonResultsInner) HasErrorJSON() bool {
	if o != nil && !IsNil(o.ErrorJSON) {
		return true
	}

	return false
}

// SetErrorJSON gets a reference to the given TaskItemsImportJsonResultsInnerErrorJSON and assigns it to the ErrorJSON field.
func (o *TaskItemsImportJsonResultsInner) SetErrorJSON(v TaskItemsImportJsonResultsInnerErrorJSON) {
	o.ErrorJSON = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *TaskItemsImportJsonResultsInner) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskItemsImportJsonResultsInner) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *TaskItemsImportJsonResultsInner) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *TaskItemsImportJsonResultsInner) SetError(v string) {
	o.Error = &v
}

func (o TaskItemsImportJsonResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskItemsImportJsonResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.ErrorJSON) {
		toSerialize["errorJSON"] = o.ErrorJSON
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableTaskItemsImportJsonResultsInner struct {
	value *TaskItemsImportJsonResultsInner
	isSet bool
}

func (v NullableTaskItemsImportJsonResultsInner) Get() *TaskItemsImportJsonResultsInner {
	return v.value
}

func (v *NullableTaskItemsImportJsonResultsInner) Set(val *TaskItemsImportJsonResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskItemsImportJsonResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskItemsImportJsonResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskItemsImportJsonResultsInner(val *TaskItemsImportJsonResultsInner) *NullableTaskItemsImportJsonResultsInner {
	return &NullableTaskItemsImportJsonResultsInner{value: val, isSet: true}
}

func (v NullableTaskItemsImportJsonResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskItemsImportJsonResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


