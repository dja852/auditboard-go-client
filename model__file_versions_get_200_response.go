/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the FileVersionsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileVersionsGet200Response{}

// FileVersionsGet200Response struct for FileVersionsGet200Response
type FileVersionsGet200Response struct {
	FileVersions []FileVersions `json:"file_versions,omitempty"`
}

// NewFileVersionsGet200Response instantiates a new FileVersionsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileVersionsGet200Response() *FileVersionsGet200Response {
	this := FileVersionsGet200Response{}
	return &this
}

// NewFileVersionsGet200ResponseWithDefaults instantiates a new FileVersionsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileVersionsGet200ResponseWithDefaults() *FileVersionsGet200Response {
	this := FileVersionsGet200Response{}
	return &this
}

// GetFileVersions returns the FileVersions field value if set, zero value otherwise.
func (o *FileVersionsGet200Response) GetFileVersions() []FileVersions {
	if o == nil || IsNil(o.FileVersions) {
		var ret []FileVersions
		return ret
	}
	return o.FileVersions
}

// GetFileVersionsOk returns a tuple with the FileVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileVersionsGet200Response) GetFileVersionsOk() ([]FileVersions, bool) {
	if o == nil || IsNil(o.FileVersions) {
		return nil, false
	}
	return o.FileVersions, true
}

// HasFileVersions returns a boolean if a field has been set.
func (o *FileVersionsGet200Response) HasFileVersions() bool {
	if o != nil && !IsNil(o.FileVersions) {
		return true
	}

	return false
}

// SetFileVersions gets a reference to the given []FileVersions and assigns it to the FileVersions field.
func (o *FileVersionsGet200Response) SetFileVersions(v []FileVersions) {
	o.FileVersions = v
}

func (o FileVersionsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileVersionsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileVersions) {
		toSerialize["file_versions"] = o.FileVersions
	}
	return toSerialize, nil
}

type NullableFileVersionsGet200Response struct {
	value *FileVersionsGet200Response
	isSet bool
}

func (v NullableFileVersionsGet200Response) Get() *FileVersionsGet200Response {
	return v.value
}

func (v *NullableFileVersionsGet200Response) Set(val *FileVersionsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFileVersionsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFileVersionsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileVersionsGet200Response(val *FileVersionsGet200Response) *NullableFileVersionsGet200Response {
	return &NullableFileVersionsGet200Response{value: val, isSet: true}
}

func (v NullableFileVersionsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileVersionsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


