/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the EsgTopicsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EsgTopicsPostRequest{}

// EsgTopicsPostRequest struct for EsgTopicsPostRequest
type EsgTopicsPostRequest struct {
	EsgTopic *EsgTopics `json:"esg_topic,omitempty"`
}

// NewEsgTopicsPostRequest instantiates a new EsgTopicsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsgTopicsPostRequest() *EsgTopicsPostRequest {
	this := EsgTopicsPostRequest{}
	return &this
}

// NewEsgTopicsPostRequestWithDefaults instantiates a new EsgTopicsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsgTopicsPostRequestWithDefaults() *EsgTopicsPostRequest {
	this := EsgTopicsPostRequest{}
	return &this
}

// GetEsgTopic returns the EsgTopic field value if set, zero value otherwise.
func (o *EsgTopicsPostRequest) GetEsgTopic() EsgTopics {
	if o == nil || IsNil(o.EsgTopic) {
		var ret EsgTopics
		return ret
	}
	return *o.EsgTopic
}

// GetEsgTopicOk returns a tuple with the EsgTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsgTopicsPostRequest) GetEsgTopicOk() (*EsgTopics, bool) {
	if o == nil || IsNil(o.EsgTopic) {
		return nil, false
	}
	return o.EsgTopic, true
}

// HasEsgTopic returns a boolean if a field has been set.
func (o *EsgTopicsPostRequest) HasEsgTopic() bool {
	if o != nil && !IsNil(o.EsgTopic) {
		return true
	}

	return false
}

// SetEsgTopic gets a reference to the given EsgTopics and assigns it to the EsgTopic field.
func (o *EsgTopicsPostRequest) SetEsgTopic(v EsgTopics) {
	o.EsgTopic = &v
}

func (o EsgTopicsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EsgTopicsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EsgTopic) {
		toSerialize["esg_topic"] = o.EsgTopic
	}
	return toSerialize, nil
}

type NullableEsgTopicsPostRequest struct {
	value *EsgTopicsPostRequest
	isSet bool
}

func (v NullableEsgTopicsPostRequest) Get() *EsgTopicsPostRequest {
	return v.value
}

func (v *NullableEsgTopicsPostRequest) Set(val *EsgTopicsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEsgTopicsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEsgTopicsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsgTopicsPostRequest(val *EsgTopicsPostRequest) *NullableEsgTopicsPostRequest {
	return &NullableEsgTopicsPostRequest{value: val, isSet: true}
}

func (v NullableEsgTopicsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsgTopicsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


