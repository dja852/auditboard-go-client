/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TestsPutPreviousValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestsPutPreviousValues{}

// TestsPutPreviousValues struct for TestsPutPreviousValues
type TestsPutPreviousValues struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	// Note: This is a Foreign Key to `controls_data.id`.<fk table='controls_data' column='id'/>
	ControlsDatumId *int32 `json:"controls_datum_id,omitempty"`
	Order *int32 `json:"order,omitempty"`
	Name *string `json:"name,omitempty"`
	SampleSize *string `json:"sample_size,omitempty"`
	Selections *string `json:"selections,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	TesterUserId *int32 `json:"tester_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ReviewerUserId *int32 `json:"reviewer_user_id,omitempty"`
	StartDate *string `json:"start_date,omitempty"`
	EndDate *string `json:"end_date,omitempty"`
	Results *string `json:"results,omitempty"`
	TestSheet *string `json:"test_sheet,omitempty"`
	Notes *string `json:"notes,omitempty"`
	// Note: This is a Foreign Key to `effectiveness_options.id`.<fk table='effectiveness_options' column='id'/>
	EffectivenessOptionId *int32 `json:"effectiveness_option_id,omitempty"`
	// Note: This is a Foreign Key to `status_options.id`.<fk table='status_options' column='id'/>
	StatusOptionId *int32 `json:"status_option_id,omitempty"`
	Archived *bool `json:"archived,omitempty"`
	ArchivedAt *string `json:"archived_at,omitempty"`
	OldHours *string `json:"old_hours,omitempty"`
	DueDate *string `json:"due_date,omitempty"`
	OldBudgetHours *string `json:"old_budget_hours,omitempty"`
	OldPercentComplete *string `json:"old_percent_complete,omitempty"`
	TestPeriod *string `json:"test_period,omitempty"`
	// Note: This is a Foreign Key to `entities.id`.<fk table='entities' column='id'/>
	EntityId *int32 `json:"entity_id,omitempty"`
	// Note: This is a Foreign Key to `controls.id`.<fk table='controls' column='id'/>
	ControlId *int32 `json:"control_id,omitempty"`
	PrecisionLevel *string `json:"precision_level,omitempty"`
	MrcEvidence *string `json:"mrc_evidence,omitempty"`
	// Note: This is a Foreign Key to `sheets.id`.<fk table='sheets' column='id'/>
	SheetId *int32 `json:"sheet_id,omitempty"`
	IsInactive *bool `json:"is_inactive,omitempty"`
	CompleteDate *string `json:"complete_date,omitempty"`
	ReviewedDate *string `json:"reviewed_date,omitempty"`
	ReviewNotesDate *string `json:"review_notes_date,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	CompleteByUserId *int32 `json:"complete_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ReviewedByUserId *int32 `json:"reviewed_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ReviewNotesByUserId *int32 `json:"review_notes_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `test_sections.id`.<fk table='test_sections' column='id'/>
	TestSectionId *int32 `json:"test_section_id,omitempty"`
	Procedures *string `json:"procedures,omitempty"`
	// Note: This is a Foreign Key to `files.id`.<fk table='files' column='id'/>
	SheetFileId *int32 `json:"sheet_file_id,omitempty"`
	OldReviewerHours *string `json:"old_reviewer_hours,omitempty"`
	OldReviewerBudgetHours *string `json:"old_reviewer_budget_hours,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	SecondaryReviewerUserId *int32 `json:"secondary_reviewer_user_id,omitempty"`
	PopulationSize *string `json:"population_size,omitempty"`
	TestPbcRequest *string `json:"test_pbc_request,omitempty"`
	TestPbcRequestAdditional *string `json:"test_pbc_request_additional,omitempty"`
	PopulationCompleteness *string `json:"population_completeness,omitempty"`
	PopulationSource *string `json:"population_source,omitempty"`
	// Note: This is a Foreign Key to `external_auditor_status_options.id`.<fk table='external_auditor_status_options' column='id'/>
	ExternalAuditorStatusOptionId *int32 `json:"external_auditor_status_option_id,omitempty"`
	ReviewerDueDate *string `json:"reviewer_due_date,omitempty"`
	OpenDate *string `json:"open_date,omitempty"`
	UnderReviewTDate *string `json:"under_review_t_date,omitempty"`
	UnderReviewR2Date *string `json:"under_review_r2_date,omitempty"`
	OpenByUserId *int32 `json:"open_by_user_id,omitempty"`
	UnderReviewTByUserId *int32 `json:"under_review_t_by_user_id,omitempty"`
	UnderReviewR2ByUserId *int32 `json:"under_review_r2_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select1_options.id`.<fk table='test_custom_select1_options' column='id'/>
	TestCustomSelect1OptionId *int32 `json:"test_custom_select1_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select2_options.id`.<fk table='test_custom_select2_options' column='id'/>
	TestCustomSelect2OptionId *int32 `json:"test_custom_select2_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select3_options.id`.<fk table='test_custom_select3_options' column='id'/>
	TestCustomSelect3OptionId *int32 `json:"test_custom_select3_option_id,omitempty"`
	InformationReliability *string `json:"information_reliability,omitempty"`
	ControlCharacteristics *string `json:"control_characteristics,omitempty"`
	ExceptionNature *string `json:"exception_nature,omitempty"`
	SampleSizeAdditional *string `json:"sample_size_additional,omitempty"`
	NumberExceptions *string `json:"number_exceptions,omitempty"`
	SecondaryReviewerDueDate *string `json:"secondary_reviewer_due_date,omitempty"`
	// Note: This is a Foreign Key to `archives.id`.<fk table='archives' column='id'/>
	ArchiveId *int32 `json:"archive_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select4_options.id`.<fk table='test_custom_select4_options' column='id'/>
	TestCustomSelect4OptionId *int32 `json:"test_custom_select4_option_id,omitempty"`
	FirstCompleteDate *string `json:"first_complete_date,omitempty"`
	FirstReviewedDate *string `json:"first_reviewed_date,omitempty"`
	FirstUnderReviewTDate *string `json:"first_under_review_t_date,omitempty"`
	FirstUnderReviewR2Date *string `json:"first_under_review_r2_date,omitempty"`
	CustomText1 *string `json:"custom_text1,omitempty"`
	CustomText2 *string `json:"custom_text2,omitempty"`
	CustomText3 *string `json:"custom_text3,omitempty"`
	CustomText4 *string `json:"custom_text4,omitempty"`
	CustomText5 *string `json:"custom_text5,omitempty"`
	CustomText6 *string `json:"custom_text6,omitempty"`
	CustomText7 *string `json:"custom_text7,omitempty"`
	CustomText8 *string `json:"custom_text8,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	HoldByUserId *int32 `json:"hold_by_user_id,omitempty"`
	HoldDate *string `json:"hold_date,omitempty"`
	FirstHoldDate *string `json:"first_hold_date,omitempty"`
	// Note: This is a Foreign Key to `status_options.id`.<fk table='status_options' column='id'/>
	HoldStatusOptionId *int32 `json:"hold_status_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select5_options.id`.<fk table='test_custom_select5_options' column='id'/>
	TestCustomSelect5OptionId *int32 `json:"test_custom_select5_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select6_options.id`.<fk table='test_custom_select6_options' column='id'/>
	TestCustomSelect6OptionId *int32 `json:"test_custom_select6_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select7_options.id`.<fk table='test_custom_select7_options' column='id'/>
	TestCustomSelect7OptionId *int32 `json:"test_custom_select7_option_id,omitempty"`
	BudgetHours *float32 `json:"budget_hours,omitempty"`
	Hours *float32 `json:"hours,omitempty"`
	ReviewerBudgetHours *float32 `json:"reviewer_budget_hours,omitempty"`
	ReviewerHours *float32 `json:"reviewer_hours,omitempty"`
	PercentComplete *float32 `json:"percent_complete,omitempty"`
	CustomText9 *string `json:"custom_text9,omitempty"`
	CustomText10 *string `json:"custom_text10,omitempty"`
	CustomText11 *string `json:"custom_text11,omitempty"`
	CustomText12 *string `json:"custom_text12,omitempty"`
	CustomText13 *string `json:"custom_text13,omitempty"`
	CustomText14 *string `json:"custom_text14,omitempty"`
	CustomText15 *string `json:"custom_text15,omitempty"`
	CustomText16 *string `json:"custom_text16,omitempty"`
	CustomText17 *string `json:"custom_text17,omitempty"`
	CustomText18 *string `json:"custom_text18,omitempty"`
	CustomText19 *string `json:"custom_text19,omitempty"`
	CustomText20 *string `json:"custom_text20,omitempty"`
	CustomText21 *string `json:"custom_text21,omitempty"`
	CustomText22 *string `json:"custom_text22,omitempty"`
	CustomText23 *string `json:"custom_text23,omitempty"`
	CustomText24 *string `json:"custom_text24,omitempty"`
	CustomText25 *string `json:"custom_text25,omitempty"`
	CustomText26 *string `json:"custom_text26,omitempty"`
	CustomText27 *string `json:"custom_text27,omitempty"`
	CustomText28 *string `json:"custom_text28,omitempty"`
	CustomText29 *string `json:"custom_text29,omitempty"`
	CustomText30 *string `json:"custom_text30,omitempty"`
	CustomText31 *string `json:"custom_text31,omitempty"`
	CustomText32 *string `json:"custom_text32,omitempty"`
	CustomText33 *string `json:"custom_text33,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select8_options.id`.<fk table='test_custom_select8_options' column='id'/>
	TestCustomSelect8OptionId *int32 `json:"test_custom_select8_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select9_options.id`.<fk table='test_custom_select9_options' column='id'/>
	TestCustomSelect9OptionId *int32 `json:"test_custom_select9_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select10_options.id`.<fk table='test_custom_select10_options' column='id'/>
	TestCustomSelect10OptionId *int32 `json:"test_custom_select10_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select11_options.id`.<fk table='test_custom_select11_options' column='id'/>
	TestCustomSelect11OptionId *int32 `json:"test_custom_select11_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select12_options.id`.<fk table='test_custom_select12_options' column='id'/>
	TestCustomSelect12OptionId *int32 `json:"test_custom_select12_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select13_options.id`.<fk table='test_custom_select13_options' column='id'/>
	TestCustomSelect13OptionId *int32 `json:"test_custom_select13_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select14_options.id`.<fk table='test_custom_select14_options' column='id'/>
	TestCustomSelect14OptionId *int32 `json:"test_custom_select14_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select15_options.id`.<fk table='test_custom_select15_options' column='id'/>
	TestCustomSelect15OptionId *int32 `json:"test_custom_select15_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select16_options.id`.<fk table='test_custom_select16_options' column='id'/>
	TestCustomSelect16OptionId *int32 `json:"test_custom_select16_option_id,omitempty"`
	// Note: This is a Foreign Key to `test_custom_select17_options.id`.<fk table='test_custom_select17_options' column='id'/>
	TestCustomSelect17OptionId *int32 `json:"test_custom_select17_option_id,omitempty"`
	FieldData interface{} `json:"field_data,omitempty"`
}

// NewTestsPutPreviousValues instantiates a new TestsPutPreviousValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestsPutPreviousValues() *TestsPutPreviousValues {
	this := TestsPutPreviousValues{}
	var archived bool = false
	this.Archived = &archived
	var isInactive bool = false
	this.IsInactive = &isInactive
	return &this
}

// NewTestsPutPreviousValuesWithDefaults instantiates a new TestsPutPreviousValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestsPutPreviousValuesWithDefaults() *TestsPutPreviousValues {
	this := TestsPutPreviousValues{}
	var archived bool = false
	this.Archived = &archived
	var isInactive bool = false
	this.IsInactive = &isInactive
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TestsPutPreviousValues) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *TestsPutPreviousValues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *TestsPutPreviousValues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *TestsPutPreviousValues) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetControlsDatumId returns the ControlsDatumId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetControlsDatumId() int32 {
	if o == nil || IsNil(o.ControlsDatumId) {
		var ret int32
		return ret
	}
	return *o.ControlsDatumId
}

// GetControlsDatumIdOk returns a tuple with the ControlsDatumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetControlsDatumIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ControlsDatumId) {
		return nil, false
	}
	return o.ControlsDatumId, true
}

// HasControlsDatumId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasControlsDatumId() bool {
	if o != nil && !IsNil(o.ControlsDatumId) {
		return true
	}

	return false
}

// SetControlsDatumId gets a reference to the given int32 and assigns it to the ControlsDatumId field.
func (o *TestsPutPreviousValues) SetControlsDatumId(v int32) {
	o.ControlsDatumId = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *TestsPutPreviousValues) SetOrder(v int32) {
	o.Order = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TestsPutPreviousValues) SetName(v string) {
	o.Name = &v
}

// GetSampleSize returns the SampleSize field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetSampleSize() string {
	if o == nil || IsNil(o.SampleSize) {
		var ret string
		return ret
	}
	return *o.SampleSize
}

// GetSampleSizeOk returns a tuple with the SampleSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetSampleSizeOk() (*string, bool) {
	if o == nil || IsNil(o.SampleSize) {
		return nil, false
	}
	return o.SampleSize, true
}

// HasSampleSize returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasSampleSize() bool {
	if o != nil && !IsNil(o.SampleSize) {
		return true
	}

	return false
}

// SetSampleSize gets a reference to the given string and assigns it to the SampleSize field.
func (o *TestsPutPreviousValues) SetSampleSize(v string) {
	o.SampleSize = &v
}

// GetSelections returns the Selections field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetSelections() string {
	if o == nil || IsNil(o.Selections) {
		var ret string
		return ret
	}
	return *o.Selections
}

// GetSelectionsOk returns a tuple with the Selections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetSelectionsOk() (*string, bool) {
	if o == nil || IsNil(o.Selections) {
		return nil, false
	}
	return o.Selections, true
}

// HasSelections returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasSelections() bool {
	if o != nil && !IsNil(o.Selections) {
		return true
	}

	return false
}

// SetSelections gets a reference to the given string and assigns it to the Selections field.
func (o *TestsPutPreviousValues) SetSelections(v string) {
	o.Selections = &v
}

// GetTesterUserId returns the TesterUserId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTesterUserId() int32 {
	if o == nil || IsNil(o.TesterUserId) {
		var ret int32
		return ret
	}
	return *o.TesterUserId
}

// GetTesterUserIdOk returns a tuple with the TesterUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTesterUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TesterUserId) {
		return nil, false
	}
	return o.TesterUserId, true
}

// HasTesterUserId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTesterUserId() bool {
	if o != nil && !IsNil(o.TesterUserId) {
		return true
	}

	return false
}

// SetTesterUserId gets a reference to the given int32 and assigns it to the TesterUserId field.
func (o *TestsPutPreviousValues) SetTesterUserId(v int32) {
	o.TesterUserId = &v
}

// GetReviewerUserId returns the ReviewerUserId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetReviewerUserId() int32 {
	if o == nil || IsNil(o.ReviewerUserId) {
		var ret int32
		return ret
	}
	return *o.ReviewerUserId
}

// GetReviewerUserIdOk returns a tuple with the ReviewerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetReviewerUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReviewerUserId) {
		return nil, false
	}
	return o.ReviewerUserId, true
}

// HasReviewerUserId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasReviewerUserId() bool {
	if o != nil && !IsNil(o.ReviewerUserId) {
		return true
	}

	return false
}

// SetReviewerUserId gets a reference to the given int32 and assigns it to the ReviewerUserId field.
func (o *TestsPutPreviousValues) SetReviewerUserId(v int32) {
	o.ReviewerUserId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *TestsPutPreviousValues) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *TestsPutPreviousValues) SetEndDate(v string) {
	o.EndDate = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetResults() string {
	if o == nil || IsNil(o.Results) {
		var ret string
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetResultsOk() (*string, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given string and assigns it to the Results field.
func (o *TestsPutPreviousValues) SetResults(v string) {
	o.Results = &v
}

// GetTestSheet returns the TestSheet field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestSheet() string {
	if o == nil || IsNil(o.TestSheet) {
		var ret string
		return ret
	}
	return *o.TestSheet
}

// GetTestSheetOk returns a tuple with the TestSheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestSheetOk() (*string, bool) {
	if o == nil || IsNil(o.TestSheet) {
		return nil, false
	}
	return o.TestSheet, true
}

// HasTestSheet returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestSheet() bool {
	if o != nil && !IsNil(o.TestSheet) {
		return true
	}

	return false
}

// SetTestSheet gets a reference to the given string and assigns it to the TestSheet field.
func (o *TestsPutPreviousValues) SetTestSheet(v string) {
	o.TestSheet = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *TestsPutPreviousValues) SetNotes(v string) {
	o.Notes = &v
}

// GetEffectivenessOptionId returns the EffectivenessOptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetEffectivenessOptionId() int32 {
	if o == nil || IsNil(o.EffectivenessOptionId) {
		var ret int32
		return ret
	}
	return *o.EffectivenessOptionId
}

// GetEffectivenessOptionIdOk returns a tuple with the EffectivenessOptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetEffectivenessOptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectivenessOptionId) {
		return nil, false
	}
	return o.EffectivenessOptionId, true
}

// HasEffectivenessOptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasEffectivenessOptionId() bool {
	if o != nil && !IsNil(o.EffectivenessOptionId) {
		return true
	}

	return false
}

// SetEffectivenessOptionId gets a reference to the given int32 and assigns it to the EffectivenessOptionId field.
func (o *TestsPutPreviousValues) SetEffectivenessOptionId(v int32) {
	o.EffectivenessOptionId = &v
}

// GetStatusOptionId returns the StatusOptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetStatusOptionId() int32 {
	if o == nil || IsNil(o.StatusOptionId) {
		var ret int32
		return ret
	}
	return *o.StatusOptionId
}

// GetStatusOptionIdOk returns a tuple with the StatusOptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetStatusOptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusOptionId) {
		return nil, false
	}
	return o.StatusOptionId, true
}

// HasStatusOptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasStatusOptionId() bool {
	if o != nil && !IsNil(o.StatusOptionId) {
		return true
	}

	return false
}

// SetStatusOptionId gets a reference to the given int32 and assigns it to the StatusOptionId field.
func (o *TestsPutPreviousValues) SetStatusOptionId(v int32) {
	o.StatusOptionId = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetArchived() bool {
	if o == nil || IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasArchived() bool {
	if o != nil && !IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *TestsPutPreviousValues) SetArchived(v bool) {
	o.Archived = &v
}

// GetArchivedAt returns the ArchivedAt field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetArchivedAt() string {
	if o == nil || IsNil(o.ArchivedAt) {
		var ret string
		return ret
	}
	return *o.ArchivedAt
}

// GetArchivedAtOk returns a tuple with the ArchivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetArchivedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ArchivedAt) {
		return nil, false
	}
	return o.ArchivedAt, true
}

// HasArchivedAt returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasArchivedAt() bool {
	if o != nil && !IsNil(o.ArchivedAt) {
		return true
	}

	return false
}

// SetArchivedAt gets a reference to the given string and assigns it to the ArchivedAt field.
func (o *TestsPutPreviousValues) SetArchivedAt(v string) {
	o.ArchivedAt = &v
}

// GetOldHours returns the OldHours field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetOldHours() string {
	if o == nil || IsNil(o.OldHours) {
		var ret string
		return ret
	}
	return *o.OldHours
}

// GetOldHoursOk returns a tuple with the OldHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetOldHoursOk() (*string, bool) {
	if o == nil || IsNil(o.OldHours) {
		return nil, false
	}
	return o.OldHours, true
}

// HasOldHours returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasOldHours() bool {
	if o != nil && !IsNil(o.OldHours) {
		return true
	}

	return false
}

// SetOldHours gets a reference to the given string and assigns it to the OldHours field.
func (o *TestsPutPreviousValues) SetOldHours(v string) {
	o.OldHours = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *TestsPutPreviousValues) SetDueDate(v string) {
	o.DueDate = &v
}

// GetOldBudgetHours returns the OldBudgetHours field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetOldBudgetHours() string {
	if o == nil || IsNil(o.OldBudgetHours) {
		var ret string
		return ret
	}
	return *o.OldBudgetHours
}

// GetOldBudgetHoursOk returns a tuple with the OldBudgetHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetOldBudgetHoursOk() (*string, bool) {
	if o == nil || IsNil(o.OldBudgetHours) {
		return nil, false
	}
	return o.OldBudgetHours, true
}

// HasOldBudgetHours returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasOldBudgetHours() bool {
	if o != nil && !IsNil(o.OldBudgetHours) {
		return true
	}

	return false
}

// SetOldBudgetHours gets a reference to the given string and assigns it to the OldBudgetHours field.
func (o *TestsPutPreviousValues) SetOldBudgetHours(v string) {
	o.OldBudgetHours = &v
}

// GetOldPercentComplete returns the OldPercentComplete field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetOldPercentComplete() string {
	if o == nil || IsNil(o.OldPercentComplete) {
		var ret string
		return ret
	}
	return *o.OldPercentComplete
}

// GetOldPercentCompleteOk returns a tuple with the OldPercentComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetOldPercentCompleteOk() (*string, bool) {
	if o == nil || IsNil(o.OldPercentComplete) {
		return nil, false
	}
	return o.OldPercentComplete, true
}

// HasOldPercentComplete returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasOldPercentComplete() bool {
	if o != nil && !IsNil(o.OldPercentComplete) {
		return true
	}

	return false
}

// SetOldPercentComplete gets a reference to the given string and assigns it to the OldPercentComplete field.
func (o *TestsPutPreviousValues) SetOldPercentComplete(v string) {
	o.OldPercentComplete = &v
}

// GetTestPeriod returns the TestPeriod field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestPeriod() string {
	if o == nil || IsNil(o.TestPeriod) {
		var ret string
		return ret
	}
	return *o.TestPeriod
}

// GetTestPeriodOk returns a tuple with the TestPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.TestPeriod) {
		return nil, false
	}
	return o.TestPeriod, true
}

// HasTestPeriod returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestPeriod() bool {
	if o != nil && !IsNil(o.TestPeriod) {
		return true
	}

	return false
}

// SetTestPeriod gets a reference to the given string and assigns it to the TestPeriod field.
func (o *TestsPutPreviousValues) SetTestPeriod(v string) {
	o.TestPeriod = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetEntityId() int32 {
	if o == nil || IsNil(o.EntityId) {
		var ret int32
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given int32 and assigns it to the EntityId field.
func (o *TestsPutPreviousValues) SetEntityId(v int32) {
	o.EntityId = &v
}

// GetControlId returns the ControlId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetControlId() int32 {
	if o == nil || IsNil(o.ControlId) {
		var ret int32
		return ret
	}
	return *o.ControlId
}

// GetControlIdOk returns a tuple with the ControlId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetControlIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ControlId) {
		return nil, false
	}
	return o.ControlId, true
}

// HasControlId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasControlId() bool {
	if o != nil && !IsNil(o.ControlId) {
		return true
	}

	return false
}

// SetControlId gets a reference to the given int32 and assigns it to the ControlId field.
func (o *TestsPutPreviousValues) SetControlId(v int32) {
	o.ControlId = &v
}

// GetPrecisionLevel returns the PrecisionLevel field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetPrecisionLevel() string {
	if o == nil || IsNil(o.PrecisionLevel) {
		var ret string
		return ret
	}
	return *o.PrecisionLevel
}

// GetPrecisionLevelOk returns a tuple with the PrecisionLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetPrecisionLevelOk() (*string, bool) {
	if o == nil || IsNil(o.PrecisionLevel) {
		return nil, false
	}
	return o.PrecisionLevel, true
}

// HasPrecisionLevel returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasPrecisionLevel() bool {
	if o != nil && !IsNil(o.PrecisionLevel) {
		return true
	}

	return false
}

// SetPrecisionLevel gets a reference to the given string and assigns it to the PrecisionLevel field.
func (o *TestsPutPreviousValues) SetPrecisionLevel(v string) {
	o.PrecisionLevel = &v
}

// GetMrcEvidence returns the MrcEvidence field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetMrcEvidence() string {
	if o == nil || IsNil(o.MrcEvidence) {
		var ret string
		return ret
	}
	return *o.MrcEvidence
}

// GetMrcEvidenceOk returns a tuple with the MrcEvidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetMrcEvidenceOk() (*string, bool) {
	if o == nil || IsNil(o.MrcEvidence) {
		return nil, false
	}
	return o.MrcEvidence, true
}

// HasMrcEvidence returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasMrcEvidence() bool {
	if o != nil && !IsNil(o.MrcEvidence) {
		return true
	}

	return false
}

// SetMrcEvidence gets a reference to the given string and assigns it to the MrcEvidence field.
func (o *TestsPutPreviousValues) SetMrcEvidence(v string) {
	o.MrcEvidence = &v
}

// GetSheetId returns the SheetId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetSheetId() int32 {
	if o == nil || IsNil(o.SheetId) {
		var ret int32
		return ret
	}
	return *o.SheetId
}

// GetSheetIdOk returns a tuple with the SheetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetSheetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SheetId) {
		return nil, false
	}
	return o.SheetId, true
}

// HasSheetId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasSheetId() bool {
	if o != nil && !IsNil(o.SheetId) {
		return true
	}

	return false
}

// SetSheetId gets a reference to the given int32 and assigns it to the SheetId field.
func (o *TestsPutPreviousValues) SetSheetId(v int32) {
	o.SheetId = &v
}

// GetIsInactive returns the IsInactive field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetIsInactive() bool {
	if o == nil || IsNil(o.IsInactive) {
		var ret bool
		return ret
	}
	return *o.IsInactive
}

// GetIsInactiveOk returns a tuple with the IsInactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetIsInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInactive) {
		return nil, false
	}
	return o.IsInactive, true
}

// HasIsInactive returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasIsInactive() bool {
	if o != nil && !IsNil(o.IsInactive) {
		return true
	}

	return false
}

// SetIsInactive gets a reference to the given bool and assigns it to the IsInactive field.
func (o *TestsPutPreviousValues) SetIsInactive(v bool) {
	o.IsInactive = &v
}

// GetCompleteDate returns the CompleteDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCompleteDate() string {
	if o == nil || IsNil(o.CompleteDate) {
		var ret string
		return ret
	}
	return *o.CompleteDate
}

// GetCompleteDateOk returns a tuple with the CompleteDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCompleteDateOk() (*string, bool) {
	if o == nil || IsNil(o.CompleteDate) {
		return nil, false
	}
	return o.CompleteDate, true
}

// HasCompleteDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCompleteDate() bool {
	if o != nil && !IsNil(o.CompleteDate) {
		return true
	}

	return false
}

// SetCompleteDate gets a reference to the given string and assigns it to the CompleteDate field.
func (o *TestsPutPreviousValues) SetCompleteDate(v string) {
	o.CompleteDate = &v
}

// GetReviewedDate returns the ReviewedDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetReviewedDate() string {
	if o == nil || IsNil(o.ReviewedDate) {
		var ret string
		return ret
	}
	return *o.ReviewedDate
}

// GetReviewedDateOk returns a tuple with the ReviewedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetReviewedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReviewedDate) {
		return nil, false
	}
	return o.ReviewedDate, true
}

// HasReviewedDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasReviewedDate() bool {
	if o != nil && !IsNil(o.ReviewedDate) {
		return true
	}

	return false
}

// SetReviewedDate gets a reference to the given string and assigns it to the ReviewedDate field.
func (o *TestsPutPreviousValues) SetReviewedDate(v string) {
	o.ReviewedDate = &v
}

// GetReviewNotesDate returns the ReviewNotesDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetReviewNotesDate() string {
	if o == nil || IsNil(o.ReviewNotesDate) {
		var ret string
		return ret
	}
	return *o.ReviewNotesDate
}

// GetReviewNotesDateOk returns a tuple with the ReviewNotesDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetReviewNotesDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReviewNotesDate) {
		return nil, false
	}
	return o.ReviewNotesDate, true
}

// HasReviewNotesDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasReviewNotesDate() bool {
	if o != nil && !IsNil(o.ReviewNotesDate) {
		return true
	}

	return false
}

// SetReviewNotesDate gets a reference to the given string and assigns it to the ReviewNotesDate field.
func (o *TestsPutPreviousValues) SetReviewNotesDate(v string) {
	o.ReviewNotesDate = &v
}

// GetCompleteByUserId returns the CompleteByUserId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCompleteByUserId() int32 {
	if o == nil || IsNil(o.CompleteByUserId) {
		var ret int32
		return ret
	}
	return *o.CompleteByUserId
}

// GetCompleteByUserIdOk returns a tuple with the CompleteByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCompleteByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompleteByUserId) {
		return nil, false
	}
	return o.CompleteByUserId, true
}

// HasCompleteByUserId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCompleteByUserId() bool {
	if o != nil && !IsNil(o.CompleteByUserId) {
		return true
	}

	return false
}

// SetCompleteByUserId gets a reference to the given int32 and assigns it to the CompleteByUserId field.
func (o *TestsPutPreviousValues) SetCompleteByUserId(v int32) {
	o.CompleteByUserId = &v
}

// GetReviewedByUserId returns the ReviewedByUserId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetReviewedByUserId() int32 {
	if o == nil || IsNil(o.ReviewedByUserId) {
		var ret int32
		return ret
	}
	return *o.ReviewedByUserId
}

// GetReviewedByUserIdOk returns a tuple with the ReviewedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetReviewedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReviewedByUserId) {
		return nil, false
	}
	return o.ReviewedByUserId, true
}

// HasReviewedByUserId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasReviewedByUserId() bool {
	if o != nil && !IsNil(o.ReviewedByUserId) {
		return true
	}

	return false
}

// SetReviewedByUserId gets a reference to the given int32 and assigns it to the ReviewedByUserId field.
func (o *TestsPutPreviousValues) SetReviewedByUserId(v int32) {
	o.ReviewedByUserId = &v
}

// GetReviewNotesByUserId returns the ReviewNotesByUserId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetReviewNotesByUserId() int32 {
	if o == nil || IsNil(o.ReviewNotesByUserId) {
		var ret int32
		return ret
	}
	return *o.ReviewNotesByUserId
}

// GetReviewNotesByUserIdOk returns a tuple with the ReviewNotesByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetReviewNotesByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReviewNotesByUserId) {
		return nil, false
	}
	return o.ReviewNotesByUserId, true
}

// HasReviewNotesByUserId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasReviewNotesByUserId() bool {
	if o != nil && !IsNil(o.ReviewNotesByUserId) {
		return true
	}

	return false
}

// SetReviewNotesByUserId gets a reference to the given int32 and assigns it to the ReviewNotesByUserId field.
func (o *TestsPutPreviousValues) SetReviewNotesByUserId(v int32) {
	o.ReviewNotesByUserId = &v
}

// GetTestSectionId returns the TestSectionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestSectionId() int32 {
	if o == nil || IsNil(o.TestSectionId) {
		var ret int32
		return ret
	}
	return *o.TestSectionId
}

// GetTestSectionIdOk returns a tuple with the TestSectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestSectionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestSectionId) {
		return nil, false
	}
	return o.TestSectionId, true
}

// HasTestSectionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestSectionId() bool {
	if o != nil && !IsNil(o.TestSectionId) {
		return true
	}

	return false
}

// SetTestSectionId gets a reference to the given int32 and assigns it to the TestSectionId field.
func (o *TestsPutPreviousValues) SetTestSectionId(v int32) {
	o.TestSectionId = &v
}

// GetProcedures returns the Procedures field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetProcedures() string {
	if o == nil || IsNil(o.Procedures) {
		var ret string
		return ret
	}
	return *o.Procedures
}

// GetProceduresOk returns a tuple with the Procedures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetProceduresOk() (*string, bool) {
	if o == nil || IsNil(o.Procedures) {
		return nil, false
	}
	return o.Procedures, true
}

// HasProcedures returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasProcedures() bool {
	if o != nil && !IsNil(o.Procedures) {
		return true
	}

	return false
}

// SetProcedures gets a reference to the given string and assigns it to the Procedures field.
func (o *TestsPutPreviousValues) SetProcedures(v string) {
	o.Procedures = &v
}

// GetSheetFileId returns the SheetFileId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetSheetFileId() int32 {
	if o == nil || IsNil(o.SheetFileId) {
		var ret int32
		return ret
	}
	return *o.SheetFileId
}

// GetSheetFileIdOk returns a tuple with the SheetFileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetSheetFileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SheetFileId) {
		return nil, false
	}
	return o.SheetFileId, true
}

// HasSheetFileId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasSheetFileId() bool {
	if o != nil && !IsNil(o.SheetFileId) {
		return true
	}

	return false
}

// SetSheetFileId gets a reference to the given int32 and assigns it to the SheetFileId field.
func (o *TestsPutPreviousValues) SetSheetFileId(v int32) {
	o.SheetFileId = &v
}

// GetOldReviewerHours returns the OldReviewerHours field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetOldReviewerHours() string {
	if o == nil || IsNil(o.OldReviewerHours) {
		var ret string
		return ret
	}
	return *o.OldReviewerHours
}

// GetOldReviewerHoursOk returns a tuple with the OldReviewerHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetOldReviewerHoursOk() (*string, bool) {
	if o == nil || IsNil(o.OldReviewerHours) {
		return nil, false
	}
	return o.OldReviewerHours, true
}

// HasOldReviewerHours returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasOldReviewerHours() bool {
	if o != nil && !IsNil(o.OldReviewerHours) {
		return true
	}

	return false
}

// SetOldReviewerHours gets a reference to the given string and assigns it to the OldReviewerHours field.
func (o *TestsPutPreviousValues) SetOldReviewerHours(v string) {
	o.OldReviewerHours = &v
}

// GetOldReviewerBudgetHours returns the OldReviewerBudgetHours field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetOldReviewerBudgetHours() string {
	if o == nil || IsNil(o.OldReviewerBudgetHours) {
		var ret string
		return ret
	}
	return *o.OldReviewerBudgetHours
}

// GetOldReviewerBudgetHoursOk returns a tuple with the OldReviewerBudgetHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetOldReviewerBudgetHoursOk() (*string, bool) {
	if o == nil || IsNil(o.OldReviewerBudgetHours) {
		return nil, false
	}
	return o.OldReviewerBudgetHours, true
}

// HasOldReviewerBudgetHours returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasOldReviewerBudgetHours() bool {
	if o != nil && !IsNil(o.OldReviewerBudgetHours) {
		return true
	}

	return false
}

// SetOldReviewerBudgetHours gets a reference to the given string and assigns it to the OldReviewerBudgetHours field.
func (o *TestsPutPreviousValues) SetOldReviewerBudgetHours(v string) {
	o.OldReviewerBudgetHours = &v
}

// GetSecondaryReviewerUserId returns the SecondaryReviewerUserId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetSecondaryReviewerUserId() int32 {
	if o == nil || IsNil(o.SecondaryReviewerUserId) {
		var ret int32
		return ret
	}
	return *o.SecondaryReviewerUserId
}

// GetSecondaryReviewerUserIdOk returns a tuple with the SecondaryReviewerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetSecondaryReviewerUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SecondaryReviewerUserId) {
		return nil, false
	}
	return o.SecondaryReviewerUserId, true
}

// HasSecondaryReviewerUserId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasSecondaryReviewerUserId() bool {
	if o != nil && !IsNil(o.SecondaryReviewerUserId) {
		return true
	}

	return false
}

// SetSecondaryReviewerUserId gets a reference to the given int32 and assigns it to the SecondaryReviewerUserId field.
func (o *TestsPutPreviousValues) SetSecondaryReviewerUserId(v int32) {
	o.SecondaryReviewerUserId = &v
}

// GetPopulationSize returns the PopulationSize field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetPopulationSize() string {
	if o == nil || IsNil(o.PopulationSize) {
		var ret string
		return ret
	}
	return *o.PopulationSize
}

// GetPopulationSizeOk returns a tuple with the PopulationSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetPopulationSizeOk() (*string, bool) {
	if o == nil || IsNil(o.PopulationSize) {
		return nil, false
	}
	return o.PopulationSize, true
}

// HasPopulationSize returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasPopulationSize() bool {
	if o != nil && !IsNil(o.PopulationSize) {
		return true
	}

	return false
}

// SetPopulationSize gets a reference to the given string and assigns it to the PopulationSize field.
func (o *TestsPutPreviousValues) SetPopulationSize(v string) {
	o.PopulationSize = &v
}

// GetTestPbcRequest returns the TestPbcRequest field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestPbcRequest() string {
	if o == nil || IsNil(o.TestPbcRequest) {
		var ret string
		return ret
	}
	return *o.TestPbcRequest
}

// GetTestPbcRequestOk returns a tuple with the TestPbcRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestPbcRequestOk() (*string, bool) {
	if o == nil || IsNil(o.TestPbcRequest) {
		return nil, false
	}
	return o.TestPbcRequest, true
}

// HasTestPbcRequest returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestPbcRequest() bool {
	if o != nil && !IsNil(o.TestPbcRequest) {
		return true
	}

	return false
}

// SetTestPbcRequest gets a reference to the given string and assigns it to the TestPbcRequest field.
func (o *TestsPutPreviousValues) SetTestPbcRequest(v string) {
	o.TestPbcRequest = &v
}

// GetTestPbcRequestAdditional returns the TestPbcRequestAdditional field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestPbcRequestAdditional() string {
	if o == nil || IsNil(o.TestPbcRequestAdditional) {
		var ret string
		return ret
	}
	return *o.TestPbcRequestAdditional
}

// GetTestPbcRequestAdditionalOk returns a tuple with the TestPbcRequestAdditional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestPbcRequestAdditionalOk() (*string, bool) {
	if o == nil || IsNil(o.TestPbcRequestAdditional) {
		return nil, false
	}
	return o.TestPbcRequestAdditional, true
}

// HasTestPbcRequestAdditional returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestPbcRequestAdditional() bool {
	if o != nil && !IsNil(o.TestPbcRequestAdditional) {
		return true
	}

	return false
}

// SetTestPbcRequestAdditional gets a reference to the given string and assigns it to the TestPbcRequestAdditional field.
func (o *TestsPutPreviousValues) SetTestPbcRequestAdditional(v string) {
	o.TestPbcRequestAdditional = &v
}

// GetPopulationCompleteness returns the PopulationCompleteness field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetPopulationCompleteness() string {
	if o == nil || IsNil(o.PopulationCompleteness) {
		var ret string
		return ret
	}
	return *o.PopulationCompleteness
}

// GetPopulationCompletenessOk returns a tuple with the PopulationCompleteness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetPopulationCompletenessOk() (*string, bool) {
	if o == nil || IsNil(o.PopulationCompleteness) {
		return nil, false
	}
	return o.PopulationCompleteness, true
}

// HasPopulationCompleteness returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasPopulationCompleteness() bool {
	if o != nil && !IsNil(o.PopulationCompleteness) {
		return true
	}

	return false
}

// SetPopulationCompleteness gets a reference to the given string and assigns it to the PopulationCompleteness field.
func (o *TestsPutPreviousValues) SetPopulationCompleteness(v string) {
	o.PopulationCompleteness = &v
}

// GetPopulationSource returns the PopulationSource field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetPopulationSource() string {
	if o == nil || IsNil(o.PopulationSource) {
		var ret string
		return ret
	}
	return *o.PopulationSource
}

// GetPopulationSourceOk returns a tuple with the PopulationSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetPopulationSourceOk() (*string, bool) {
	if o == nil || IsNil(o.PopulationSource) {
		return nil, false
	}
	return o.PopulationSource, true
}

// HasPopulationSource returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasPopulationSource() bool {
	if o != nil && !IsNil(o.PopulationSource) {
		return true
	}

	return false
}

// SetPopulationSource gets a reference to the given string and assigns it to the PopulationSource field.
func (o *TestsPutPreviousValues) SetPopulationSource(v string) {
	o.PopulationSource = &v
}

// GetExternalAuditorStatusOptionId returns the ExternalAuditorStatusOptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetExternalAuditorStatusOptionId() int32 {
	if o == nil || IsNil(o.ExternalAuditorStatusOptionId) {
		var ret int32
		return ret
	}
	return *o.ExternalAuditorStatusOptionId
}

// GetExternalAuditorStatusOptionIdOk returns a tuple with the ExternalAuditorStatusOptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetExternalAuditorStatusOptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ExternalAuditorStatusOptionId) {
		return nil, false
	}
	return o.ExternalAuditorStatusOptionId, true
}

// HasExternalAuditorStatusOptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasExternalAuditorStatusOptionId() bool {
	if o != nil && !IsNil(o.ExternalAuditorStatusOptionId) {
		return true
	}

	return false
}

// SetExternalAuditorStatusOptionId gets a reference to the given int32 and assigns it to the ExternalAuditorStatusOptionId field.
func (o *TestsPutPreviousValues) SetExternalAuditorStatusOptionId(v int32) {
	o.ExternalAuditorStatusOptionId = &v
}

// GetReviewerDueDate returns the ReviewerDueDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetReviewerDueDate() string {
	if o == nil || IsNil(o.ReviewerDueDate) {
		var ret string
		return ret
	}
	return *o.ReviewerDueDate
}

// GetReviewerDueDateOk returns a tuple with the ReviewerDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetReviewerDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReviewerDueDate) {
		return nil, false
	}
	return o.ReviewerDueDate, true
}

// HasReviewerDueDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasReviewerDueDate() bool {
	if o != nil && !IsNil(o.ReviewerDueDate) {
		return true
	}

	return false
}

// SetReviewerDueDate gets a reference to the given string and assigns it to the ReviewerDueDate field.
func (o *TestsPutPreviousValues) SetReviewerDueDate(v string) {
	o.ReviewerDueDate = &v
}

// GetOpenDate returns the OpenDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetOpenDate() string {
	if o == nil || IsNil(o.OpenDate) {
		var ret string
		return ret
	}
	return *o.OpenDate
}

// GetOpenDateOk returns a tuple with the OpenDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetOpenDateOk() (*string, bool) {
	if o == nil || IsNil(o.OpenDate) {
		return nil, false
	}
	return o.OpenDate, true
}

// HasOpenDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasOpenDate() bool {
	if o != nil && !IsNil(o.OpenDate) {
		return true
	}

	return false
}

// SetOpenDate gets a reference to the given string and assigns it to the OpenDate field.
func (o *TestsPutPreviousValues) SetOpenDate(v string) {
	o.OpenDate = &v
}

// GetUnderReviewTDate returns the UnderReviewTDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetUnderReviewTDate() string {
	if o == nil || IsNil(o.UnderReviewTDate) {
		var ret string
		return ret
	}
	return *o.UnderReviewTDate
}

// GetUnderReviewTDateOk returns a tuple with the UnderReviewTDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetUnderReviewTDateOk() (*string, bool) {
	if o == nil || IsNil(o.UnderReviewTDate) {
		return nil, false
	}
	return o.UnderReviewTDate, true
}

// HasUnderReviewTDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasUnderReviewTDate() bool {
	if o != nil && !IsNil(o.UnderReviewTDate) {
		return true
	}

	return false
}

// SetUnderReviewTDate gets a reference to the given string and assigns it to the UnderReviewTDate field.
func (o *TestsPutPreviousValues) SetUnderReviewTDate(v string) {
	o.UnderReviewTDate = &v
}

// GetUnderReviewR2Date returns the UnderReviewR2Date field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetUnderReviewR2Date() string {
	if o == nil || IsNil(o.UnderReviewR2Date) {
		var ret string
		return ret
	}
	return *o.UnderReviewR2Date
}

// GetUnderReviewR2DateOk returns a tuple with the UnderReviewR2Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetUnderReviewR2DateOk() (*string, bool) {
	if o == nil || IsNil(o.UnderReviewR2Date) {
		return nil, false
	}
	return o.UnderReviewR2Date, true
}

// HasUnderReviewR2Date returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasUnderReviewR2Date() bool {
	if o != nil && !IsNil(o.UnderReviewR2Date) {
		return true
	}

	return false
}

// SetUnderReviewR2Date gets a reference to the given string and assigns it to the UnderReviewR2Date field.
func (o *TestsPutPreviousValues) SetUnderReviewR2Date(v string) {
	o.UnderReviewR2Date = &v
}

// GetOpenByUserId returns the OpenByUserId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetOpenByUserId() int32 {
	if o == nil || IsNil(o.OpenByUserId) {
		var ret int32
		return ret
	}
	return *o.OpenByUserId
}

// GetOpenByUserIdOk returns a tuple with the OpenByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetOpenByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpenByUserId) {
		return nil, false
	}
	return o.OpenByUserId, true
}

// HasOpenByUserId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasOpenByUserId() bool {
	if o != nil && !IsNil(o.OpenByUserId) {
		return true
	}

	return false
}

// SetOpenByUserId gets a reference to the given int32 and assigns it to the OpenByUserId field.
func (o *TestsPutPreviousValues) SetOpenByUserId(v int32) {
	o.OpenByUserId = &v
}

// GetUnderReviewTByUserId returns the UnderReviewTByUserId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetUnderReviewTByUserId() int32 {
	if o == nil || IsNil(o.UnderReviewTByUserId) {
		var ret int32
		return ret
	}
	return *o.UnderReviewTByUserId
}

// GetUnderReviewTByUserIdOk returns a tuple with the UnderReviewTByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetUnderReviewTByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UnderReviewTByUserId) {
		return nil, false
	}
	return o.UnderReviewTByUserId, true
}

// HasUnderReviewTByUserId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasUnderReviewTByUserId() bool {
	if o != nil && !IsNil(o.UnderReviewTByUserId) {
		return true
	}

	return false
}

// SetUnderReviewTByUserId gets a reference to the given int32 and assigns it to the UnderReviewTByUserId field.
func (o *TestsPutPreviousValues) SetUnderReviewTByUserId(v int32) {
	o.UnderReviewTByUserId = &v
}

// GetUnderReviewR2ByUserId returns the UnderReviewR2ByUserId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetUnderReviewR2ByUserId() int32 {
	if o == nil || IsNil(o.UnderReviewR2ByUserId) {
		var ret int32
		return ret
	}
	return *o.UnderReviewR2ByUserId
}

// GetUnderReviewR2ByUserIdOk returns a tuple with the UnderReviewR2ByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetUnderReviewR2ByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UnderReviewR2ByUserId) {
		return nil, false
	}
	return o.UnderReviewR2ByUserId, true
}

// HasUnderReviewR2ByUserId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasUnderReviewR2ByUserId() bool {
	if o != nil && !IsNil(o.UnderReviewR2ByUserId) {
		return true
	}

	return false
}

// SetUnderReviewR2ByUserId gets a reference to the given int32 and assigns it to the UnderReviewR2ByUserId field.
func (o *TestsPutPreviousValues) SetUnderReviewR2ByUserId(v int32) {
	o.UnderReviewR2ByUserId = &v
}

// GetTestCustomSelect1OptionId returns the TestCustomSelect1OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect1OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect1OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect1OptionId
}

// GetTestCustomSelect1OptionIdOk returns a tuple with the TestCustomSelect1OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect1OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect1OptionId) {
		return nil, false
	}
	return o.TestCustomSelect1OptionId, true
}

// HasTestCustomSelect1OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect1OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect1OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect1OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect1OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect1OptionId(v int32) {
	o.TestCustomSelect1OptionId = &v
}

// GetTestCustomSelect2OptionId returns the TestCustomSelect2OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect2OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect2OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect2OptionId
}

// GetTestCustomSelect2OptionIdOk returns a tuple with the TestCustomSelect2OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect2OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect2OptionId) {
		return nil, false
	}
	return o.TestCustomSelect2OptionId, true
}

// HasTestCustomSelect2OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect2OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect2OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect2OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect2OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect2OptionId(v int32) {
	o.TestCustomSelect2OptionId = &v
}

// GetTestCustomSelect3OptionId returns the TestCustomSelect3OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect3OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect3OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect3OptionId
}

// GetTestCustomSelect3OptionIdOk returns a tuple with the TestCustomSelect3OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect3OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect3OptionId) {
		return nil, false
	}
	return o.TestCustomSelect3OptionId, true
}

// HasTestCustomSelect3OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect3OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect3OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect3OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect3OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect3OptionId(v int32) {
	o.TestCustomSelect3OptionId = &v
}

// GetInformationReliability returns the InformationReliability field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetInformationReliability() string {
	if o == nil || IsNil(o.InformationReliability) {
		var ret string
		return ret
	}
	return *o.InformationReliability
}

// GetInformationReliabilityOk returns a tuple with the InformationReliability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetInformationReliabilityOk() (*string, bool) {
	if o == nil || IsNil(o.InformationReliability) {
		return nil, false
	}
	return o.InformationReliability, true
}

// HasInformationReliability returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasInformationReliability() bool {
	if o != nil && !IsNil(o.InformationReliability) {
		return true
	}

	return false
}

// SetInformationReliability gets a reference to the given string and assigns it to the InformationReliability field.
func (o *TestsPutPreviousValues) SetInformationReliability(v string) {
	o.InformationReliability = &v
}

// GetControlCharacteristics returns the ControlCharacteristics field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetControlCharacteristics() string {
	if o == nil || IsNil(o.ControlCharacteristics) {
		var ret string
		return ret
	}
	return *o.ControlCharacteristics
}

// GetControlCharacteristicsOk returns a tuple with the ControlCharacteristics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetControlCharacteristicsOk() (*string, bool) {
	if o == nil || IsNil(o.ControlCharacteristics) {
		return nil, false
	}
	return o.ControlCharacteristics, true
}

// HasControlCharacteristics returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasControlCharacteristics() bool {
	if o != nil && !IsNil(o.ControlCharacteristics) {
		return true
	}

	return false
}

// SetControlCharacteristics gets a reference to the given string and assigns it to the ControlCharacteristics field.
func (o *TestsPutPreviousValues) SetControlCharacteristics(v string) {
	o.ControlCharacteristics = &v
}

// GetExceptionNature returns the ExceptionNature field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetExceptionNature() string {
	if o == nil || IsNil(o.ExceptionNature) {
		var ret string
		return ret
	}
	return *o.ExceptionNature
}

// GetExceptionNatureOk returns a tuple with the ExceptionNature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetExceptionNatureOk() (*string, bool) {
	if o == nil || IsNil(o.ExceptionNature) {
		return nil, false
	}
	return o.ExceptionNature, true
}

// HasExceptionNature returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasExceptionNature() bool {
	if o != nil && !IsNil(o.ExceptionNature) {
		return true
	}

	return false
}

// SetExceptionNature gets a reference to the given string and assigns it to the ExceptionNature field.
func (o *TestsPutPreviousValues) SetExceptionNature(v string) {
	o.ExceptionNature = &v
}

// GetSampleSizeAdditional returns the SampleSizeAdditional field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetSampleSizeAdditional() string {
	if o == nil || IsNil(o.SampleSizeAdditional) {
		var ret string
		return ret
	}
	return *o.SampleSizeAdditional
}

// GetSampleSizeAdditionalOk returns a tuple with the SampleSizeAdditional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetSampleSizeAdditionalOk() (*string, bool) {
	if o == nil || IsNil(o.SampleSizeAdditional) {
		return nil, false
	}
	return o.SampleSizeAdditional, true
}

// HasSampleSizeAdditional returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasSampleSizeAdditional() bool {
	if o != nil && !IsNil(o.SampleSizeAdditional) {
		return true
	}

	return false
}

// SetSampleSizeAdditional gets a reference to the given string and assigns it to the SampleSizeAdditional field.
func (o *TestsPutPreviousValues) SetSampleSizeAdditional(v string) {
	o.SampleSizeAdditional = &v
}

// GetNumberExceptions returns the NumberExceptions field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetNumberExceptions() string {
	if o == nil || IsNil(o.NumberExceptions) {
		var ret string
		return ret
	}
	return *o.NumberExceptions
}

// GetNumberExceptionsOk returns a tuple with the NumberExceptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetNumberExceptionsOk() (*string, bool) {
	if o == nil || IsNil(o.NumberExceptions) {
		return nil, false
	}
	return o.NumberExceptions, true
}

// HasNumberExceptions returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasNumberExceptions() bool {
	if o != nil && !IsNil(o.NumberExceptions) {
		return true
	}

	return false
}

// SetNumberExceptions gets a reference to the given string and assigns it to the NumberExceptions field.
func (o *TestsPutPreviousValues) SetNumberExceptions(v string) {
	o.NumberExceptions = &v
}

// GetSecondaryReviewerDueDate returns the SecondaryReviewerDueDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetSecondaryReviewerDueDate() string {
	if o == nil || IsNil(o.SecondaryReviewerDueDate) {
		var ret string
		return ret
	}
	return *o.SecondaryReviewerDueDate
}

// GetSecondaryReviewerDueDateOk returns a tuple with the SecondaryReviewerDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetSecondaryReviewerDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryReviewerDueDate) {
		return nil, false
	}
	return o.SecondaryReviewerDueDate, true
}

// HasSecondaryReviewerDueDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasSecondaryReviewerDueDate() bool {
	if o != nil && !IsNil(o.SecondaryReviewerDueDate) {
		return true
	}

	return false
}

// SetSecondaryReviewerDueDate gets a reference to the given string and assigns it to the SecondaryReviewerDueDate field.
func (o *TestsPutPreviousValues) SetSecondaryReviewerDueDate(v string) {
	o.SecondaryReviewerDueDate = &v
}

// GetArchiveId returns the ArchiveId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetArchiveId() int32 {
	if o == nil || IsNil(o.ArchiveId) {
		var ret int32
		return ret
	}
	return *o.ArchiveId
}

// GetArchiveIdOk returns a tuple with the ArchiveId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetArchiveIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ArchiveId) {
		return nil, false
	}
	return o.ArchiveId, true
}

// HasArchiveId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasArchiveId() bool {
	if o != nil && !IsNil(o.ArchiveId) {
		return true
	}

	return false
}

// SetArchiveId gets a reference to the given int32 and assigns it to the ArchiveId field.
func (o *TestsPutPreviousValues) SetArchiveId(v int32) {
	o.ArchiveId = &v
}

// GetTestCustomSelect4OptionId returns the TestCustomSelect4OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect4OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect4OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect4OptionId
}

// GetTestCustomSelect4OptionIdOk returns a tuple with the TestCustomSelect4OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect4OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect4OptionId) {
		return nil, false
	}
	return o.TestCustomSelect4OptionId, true
}

// HasTestCustomSelect4OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect4OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect4OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect4OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect4OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect4OptionId(v int32) {
	o.TestCustomSelect4OptionId = &v
}

// GetFirstCompleteDate returns the FirstCompleteDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetFirstCompleteDate() string {
	if o == nil || IsNil(o.FirstCompleteDate) {
		var ret string
		return ret
	}
	return *o.FirstCompleteDate
}

// GetFirstCompleteDateOk returns a tuple with the FirstCompleteDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetFirstCompleteDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstCompleteDate) {
		return nil, false
	}
	return o.FirstCompleteDate, true
}

// HasFirstCompleteDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasFirstCompleteDate() bool {
	if o != nil && !IsNil(o.FirstCompleteDate) {
		return true
	}

	return false
}

// SetFirstCompleteDate gets a reference to the given string and assigns it to the FirstCompleteDate field.
func (o *TestsPutPreviousValues) SetFirstCompleteDate(v string) {
	o.FirstCompleteDate = &v
}

// GetFirstReviewedDate returns the FirstReviewedDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetFirstReviewedDate() string {
	if o == nil || IsNil(o.FirstReviewedDate) {
		var ret string
		return ret
	}
	return *o.FirstReviewedDate
}

// GetFirstReviewedDateOk returns a tuple with the FirstReviewedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetFirstReviewedDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstReviewedDate) {
		return nil, false
	}
	return o.FirstReviewedDate, true
}

// HasFirstReviewedDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasFirstReviewedDate() bool {
	if o != nil && !IsNil(o.FirstReviewedDate) {
		return true
	}

	return false
}

// SetFirstReviewedDate gets a reference to the given string and assigns it to the FirstReviewedDate field.
func (o *TestsPutPreviousValues) SetFirstReviewedDate(v string) {
	o.FirstReviewedDate = &v
}

// GetFirstUnderReviewTDate returns the FirstUnderReviewTDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetFirstUnderReviewTDate() string {
	if o == nil || IsNil(o.FirstUnderReviewTDate) {
		var ret string
		return ret
	}
	return *o.FirstUnderReviewTDate
}

// GetFirstUnderReviewTDateOk returns a tuple with the FirstUnderReviewTDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetFirstUnderReviewTDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstUnderReviewTDate) {
		return nil, false
	}
	return o.FirstUnderReviewTDate, true
}

// HasFirstUnderReviewTDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasFirstUnderReviewTDate() bool {
	if o != nil && !IsNil(o.FirstUnderReviewTDate) {
		return true
	}

	return false
}

// SetFirstUnderReviewTDate gets a reference to the given string and assigns it to the FirstUnderReviewTDate field.
func (o *TestsPutPreviousValues) SetFirstUnderReviewTDate(v string) {
	o.FirstUnderReviewTDate = &v
}

// GetFirstUnderReviewR2Date returns the FirstUnderReviewR2Date field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetFirstUnderReviewR2Date() string {
	if o == nil || IsNil(o.FirstUnderReviewR2Date) {
		var ret string
		return ret
	}
	return *o.FirstUnderReviewR2Date
}

// GetFirstUnderReviewR2DateOk returns a tuple with the FirstUnderReviewR2Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetFirstUnderReviewR2DateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstUnderReviewR2Date) {
		return nil, false
	}
	return o.FirstUnderReviewR2Date, true
}

// HasFirstUnderReviewR2Date returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasFirstUnderReviewR2Date() bool {
	if o != nil && !IsNil(o.FirstUnderReviewR2Date) {
		return true
	}

	return false
}

// SetFirstUnderReviewR2Date gets a reference to the given string and assigns it to the FirstUnderReviewR2Date field.
func (o *TestsPutPreviousValues) SetFirstUnderReviewR2Date(v string) {
	o.FirstUnderReviewR2Date = &v
}

// GetCustomText1 returns the CustomText1 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText1() string {
	if o == nil || IsNil(o.CustomText1) {
		var ret string
		return ret
	}
	return *o.CustomText1
}

// GetCustomText1Ok returns a tuple with the CustomText1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText1Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText1) {
		return nil, false
	}
	return o.CustomText1, true
}

// HasCustomText1 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText1() bool {
	if o != nil && !IsNil(o.CustomText1) {
		return true
	}

	return false
}

// SetCustomText1 gets a reference to the given string and assigns it to the CustomText1 field.
func (o *TestsPutPreviousValues) SetCustomText1(v string) {
	o.CustomText1 = &v
}

// GetCustomText2 returns the CustomText2 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText2() string {
	if o == nil || IsNil(o.CustomText2) {
		var ret string
		return ret
	}
	return *o.CustomText2
}

// GetCustomText2Ok returns a tuple with the CustomText2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText2Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText2) {
		return nil, false
	}
	return o.CustomText2, true
}

// HasCustomText2 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText2() bool {
	if o != nil && !IsNil(o.CustomText2) {
		return true
	}

	return false
}

// SetCustomText2 gets a reference to the given string and assigns it to the CustomText2 field.
func (o *TestsPutPreviousValues) SetCustomText2(v string) {
	o.CustomText2 = &v
}

// GetCustomText3 returns the CustomText3 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText3() string {
	if o == nil || IsNil(o.CustomText3) {
		var ret string
		return ret
	}
	return *o.CustomText3
}

// GetCustomText3Ok returns a tuple with the CustomText3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText3Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText3) {
		return nil, false
	}
	return o.CustomText3, true
}

// HasCustomText3 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText3() bool {
	if o != nil && !IsNil(o.CustomText3) {
		return true
	}

	return false
}

// SetCustomText3 gets a reference to the given string and assigns it to the CustomText3 field.
func (o *TestsPutPreviousValues) SetCustomText3(v string) {
	o.CustomText3 = &v
}

// GetCustomText4 returns the CustomText4 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText4() string {
	if o == nil || IsNil(o.CustomText4) {
		var ret string
		return ret
	}
	return *o.CustomText4
}

// GetCustomText4Ok returns a tuple with the CustomText4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText4Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText4) {
		return nil, false
	}
	return o.CustomText4, true
}

// HasCustomText4 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText4() bool {
	if o != nil && !IsNil(o.CustomText4) {
		return true
	}

	return false
}

// SetCustomText4 gets a reference to the given string and assigns it to the CustomText4 field.
func (o *TestsPutPreviousValues) SetCustomText4(v string) {
	o.CustomText4 = &v
}

// GetCustomText5 returns the CustomText5 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText5() string {
	if o == nil || IsNil(o.CustomText5) {
		var ret string
		return ret
	}
	return *o.CustomText5
}

// GetCustomText5Ok returns a tuple with the CustomText5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText5Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText5) {
		return nil, false
	}
	return o.CustomText5, true
}

// HasCustomText5 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText5() bool {
	if o != nil && !IsNil(o.CustomText5) {
		return true
	}

	return false
}

// SetCustomText5 gets a reference to the given string and assigns it to the CustomText5 field.
func (o *TestsPutPreviousValues) SetCustomText5(v string) {
	o.CustomText5 = &v
}

// GetCustomText6 returns the CustomText6 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText6() string {
	if o == nil || IsNil(o.CustomText6) {
		var ret string
		return ret
	}
	return *o.CustomText6
}

// GetCustomText6Ok returns a tuple with the CustomText6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText6Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText6) {
		return nil, false
	}
	return o.CustomText6, true
}

// HasCustomText6 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText6() bool {
	if o != nil && !IsNil(o.CustomText6) {
		return true
	}

	return false
}

// SetCustomText6 gets a reference to the given string and assigns it to the CustomText6 field.
func (o *TestsPutPreviousValues) SetCustomText6(v string) {
	o.CustomText6 = &v
}

// GetCustomText7 returns the CustomText7 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText7() string {
	if o == nil || IsNil(o.CustomText7) {
		var ret string
		return ret
	}
	return *o.CustomText7
}

// GetCustomText7Ok returns a tuple with the CustomText7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText7Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText7) {
		return nil, false
	}
	return o.CustomText7, true
}

// HasCustomText7 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText7() bool {
	if o != nil && !IsNil(o.CustomText7) {
		return true
	}

	return false
}

// SetCustomText7 gets a reference to the given string and assigns it to the CustomText7 field.
func (o *TestsPutPreviousValues) SetCustomText7(v string) {
	o.CustomText7 = &v
}

// GetCustomText8 returns the CustomText8 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText8() string {
	if o == nil || IsNil(o.CustomText8) {
		var ret string
		return ret
	}
	return *o.CustomText8
}

// GetCustomText8Ok returns a tuple with the CustomText8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText8Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText8) {
		return nil, false
	}
	return o.CustomText8, true
}

// HasCustomText8 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText8() bool {
	if o != nil && !IsNil(o.CustomText8) {
		return true
	}

	return false
}

// SetCustomText8 gets a reference to the given string and assigns it to the CustomText8 field.
func (o *TestsPutPreviousValues) SetCustomText8(v string) {
	o.CustomText8 = &v
}

// GetHoldByUserId returns the HoldByUserId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetHoldByUserId() int32 {
	if o == nil || IsNil(o.HoldByUserId) {
		var ret int32
		return ret
	}
	return *o.HoldByUserId
}

// GetHoldByUserIdOk returns a tuple with the HoldByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetHoldByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HoldByUserId) {
		return nil, false
	}
	return o.HoldByUserId, true
}

// HasHoldByUserId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasHoldByUserId() bool {
	if o != nil && !IsNil(o.HoldByUserId) {
		return true
	}

	return false
}

// SetHoldByUserId gets a reference to the given int32 and assigns it to the HoldByUserId field.
func (o *TestsPutPreviousValues) SetHoldByUserId(v int32) {
	o.HoldByUserId = &v
}

// GetHoldDate returns the HoldDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetHoldDate() string {
	if o == nil || IsNil(o.HoldDate) {
		var ret string
		return ret
	}
	return *o.HoldDate
}

// GetHoldDateOk returns a tuple with the HoldDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetHoldDateOk() (*string, bool) {
	if o == nil || IsNil(o.HoldDate) {
		return nil, false
	}
	return o.HoldDate, true
}

// HasHoldDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasHoldDate() bool {
	if o != nil && !IsNil(o.HoldDate) {
		return true
	}

	return false
}

// SetHoldDate gets a reference to the given string and assigns it to the HoldDate field.
func (o *TestsPutPreviousValues) SetHoldDate(v string) {
	o.HoldDate = &v
}

// GetFirstHoldDate returns the FirstHoldDate field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetFirstHoldDate() string {
	if o == nil || IsNil(o.FirstHoldDate) {
		var ret string
		return ret
	}
	return *o.FirstHoldDate
}

// GetFirstHoldDateOk returns a tuple with the FirstHoldDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetFirstHoldDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstHoldDate) {
		return nil, false
	}
	return o.FirstHoldDate, true
}

// HasFirstHoldDate returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasFirstHoldDate() bool {
	if o != nil && !IsNil(o.FirstHoldDate) {
		return true
	}

	return false
}

// SetFirstHoldDate gets a reference to the given string and assigns it to the FirstHoldDate field.
func (o *TestsPutPreviousValues) SetFirstHoldDate(v string) {
	o.FirstHoldDate = &v
}

// GetHoldStatusOptionId returns the HoldStatusOptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetHoldStatusOptionId() int32 {
	if o == nil || IsNil(o.HoldStatusOptionId) {
		var ret int32
		return ret
	}
	return *o.HoldStatusOptionId
}

// GetHoldStatusOptionIdOk returns a tuple with the HoldStatusOptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetHoldStatusOptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HoldStatusOptionId) {
		return nil, false
	}
	return o.HoldStatusOptionId, true
}

// HasHoldStatusOptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasHoldStatusOptionId() bool {
	if o != nil && !IsNil(o.HoldStatusOptionId) {
		return true
	}

	return false
}

// SetHoldStatusOptionId gets a reference to the given int32 and assigns it to the HoldStatusOptionId field.
func (o *TestsPutPreviousValues) SetHoldStatusOptionId(v int32) {
	o.HoldStatusOptionId = &v
}

// GetTestCustomSelect5OptionId returns the TestCustomSelect5OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect5OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect5OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect5OptionId
}

// GetTestCustomSelect5OptionIdOk returns a tuple with the TestCustomSelect5OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect5OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect5OptionId) {
		return nil, false
	}
	return o.TestCustomSelect5OptionId, true
}

// HasTestCustomSelect5OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect5OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect5OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect5OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect5OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect5OptionId(v int32) {
	o.TestCustomSelect5OptionId = &v
}

// GetTestCustomSelect6OptionId returns the TestCustomSelect6OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect6OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect6OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect6OptionId
}

// GetTestCustomSelect6OptionIdOk returns a tuple with the TestCustomSelect6OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect6OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect6OptionId) {
		return nil, false
	}
	return o.TestCustomSelect6OptionId, true
}

// HasTestCustomSelect6OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect6OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect6OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect6OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect6OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect6OptionId(v int32) {
	o.TestCustomSelect6OptionId = &v
}

// GetTestCustomSelect7OptionId returns the TestCustomSelect7OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect7OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect7OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect7OptionId
}

// GetTestCustomSelect7OptionIdOk returns a tuple with the TestCustomSelect7OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect7OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect7OptionId) {
		return nil, false
	}
	return o.TestCustomSelect7OptionId, true
}

// HasTestCustomSelect7OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect7OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect7OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect7OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect7OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect7OptionId(v int32) {
	o.TestCustomSelect7OptionId = &v
}

// GetBudgetHours returns the BudgetHours field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetBudgetHours() float32 {
	if o == nil || IsNil(o.BudgetHours) {
		var ret float32
		return ret
	}
	return *o.BudgetHours
}

// GetBudgetHoursOk returns a tuple with the BudgetHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetBudgetHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.BudgetHours) {
		return nil, false
	}
	return o.BudgetHours, true
}

// HasBudgetHours returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasBudgetHours() bool {
	if o != nil && !IsNil(o.BudgetHours) {
		return true
	}

	return false
}

// SetBudgetHours gets a reference to the given float32 and assigns it to the BudgetHours field.
func (o *TestsPutPreviousValues) SetBudgetHours(v float32) {
	o.BudgetHours = &v
}

// GetHours returns the Hours field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetHours() float32 {
	if o == nil || IsNil(o.Hours) {
		var ret float32
		return ret
	}
	return *o.Hours
}

// GetHoursOk returns a tuple with the Hours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.Hours) {
		return nil, false
	}
	return o.Hours, true
}

// HasHours returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasHours() bool {
	if o != nil && !IsNil(o.Hours) {
		return true
	}

	return false
}

// SetHours gets a reference to the given float32 and assigns it to the Hours field.
func (o *TestsPutPreviousValues) SetHours(v float32) {
	o.Hours = &v
}

// GetReviewerBudgetHours returns the ReviewerBudgetHours field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetReviewerBudgetHours() float32 {
	if o == nil || IsNil(o.ReviewerBudgetHours) {
		var ret float32
		return ret
	}
	return *o.ReviewerBudgetHours
}

// GetReviewerBudgetHoursOk returns a tuple with the ReviewerBudgetHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetReviewerBudgetHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.ReviewerBudgetHours) {
		return nil, false
	}
	return o.ReviewerBudgetHours, true
}

// HasReviewerBudgetHours returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasReviewerBudgetHours() bool {
	if o != nil && !IsNil(o.ReviewerBudgetHours) {
		return true
	}

	return false
}

// SetReviewerBudgetHours gets a reference to the given float32 and assigns it to the ReviewerBudgetHours field.
func (o *TestsPutPreviousValues) SetReviewerBudgetHours(v float32) {
	o.ReviewerBudgetHours = &v
}

// GetReviewerHours returns the ReviewerHours field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetReviewerHours() float32 {
	if o == nil || IsNil(o.ReviewerHours) {
		var ret float32
		return ret
	}
	return *o.ReviewerHours
}

// GetReviewerHoursOk returns a tuple with the ReviewerHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetReviewerHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.ReviewerHours) {
		return nil, false
	}
	return o.ReviewerHours, true
}

// HasReviewerHours returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasReviewerHours() bool {
	if o != nil && !IsNil(o.ReviewerHours) {
		return true
	}

	return false
}

// SetReviewerHours gets a reference to the given float32 and assigns it to the ReviewerHours field.
func (o *TestsPutPreviousValues) SetReviewerHours(v float32) {
	o.ReviewerHours = &v
}

// GetPercentComplete returns the PercentComplete field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetPercentComplete() float32 {
	if o == nil || IsNil(o.PercentComplete) {
		var ret float32
		return ret
	}
	return *o.PercentComplete
}

// GetPercentCompleteOk returns a tuple with the PercentComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetPercentCompleteOk() (*float32, bool) {
	if o == nil || IsNil(o.PercentComplete) {
		return nil, false
	}
	return o.PercentComplete, true
}

// HasPercentComplete returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasPercentComplete() bool {
	if o != nil && !IsNil(o.PercentComplete) {
		return true
	}

	return false
}

// SetPercentComplete gets a reference to the given float32 and assigns it to the PercentComplete field.
func (o *TestsPutPreviousValues) SetPercentComplete(v float32) {
	o.PercentComplete = &v
}

// GetCustomText9 returns the CustomText9 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText9() string {
	if o == nil || IsNil(o.CustomText9) {
		var ret string
		return ret
	}
	return *o.CustomText9
}

// GetCustomText9Ok returns a tuple with the CustomText9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText9Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText9) {
		return nil, false
	}
	return o.CustomText9, true
}

// HasCustomText9 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText9() bool {
	if o != nil && !IsNil(o.CustomText9) {
		return true
	}

	return false
}

// SetCustomText9 gets a reference to the given string and assigns it to the CustomText9 field.
func (o *TestsPutPreviousValues) SetCustomText9(v string) {
	o.CustomText9 = &v
}

// GetCustomText10 returns the CustomText10 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText10() string {
	if o == nil || IsNil(o.CustomText10) {
		var ret string
		return ret
	}
	return *o.CustomText10
}

// GetCustomText10Ok returns a tuple with the CustomText10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText10Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText10) {
		return nil, false
	}
	return o.CustomText10, true
}

// HasCustomText10 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText10() bool {
	if o != nil && !IsNil(o.CustomText10) {
		return true
	}

	return false
}

// SetCustomText10 gets a reference to the given string and assigns it to the CustomText10 field.
func (o *TestsPutPreviousValues) SetCustomText10(v string) {
	o.CustomText10 = &v
}

// GetCustomText11 returns the CustomText11 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText11() string {
	if o == nil || IsNil(o.CustomText11) {
		var ret string
		return ret
	}
	return *o.CustomText11
}

// GetCustomText11Ok returns a tuple with the CustomText11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText11Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText11) {
		return nil, false
	}
	return o.CustomText11, true
}

// HasCustomText11 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText11() bool {
	if o != nil && !IsNil(o.CustomText11) {
		return true
	}

	return false
}

// SetCustomText11 gets a reference to the given string and assigns it to the CustomText11 field.
func (o *TestsPutPreviousValues) SetCustomText11(v string) {
	o.CustomText11 = &v
}

// GetCustomText12 returns the CustomText12 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText12() string {
	if o == nil || IsNil(o.CustomText12) {
		var ret string
		return ret
	}
	return *o.CustomText12
}

// GetCustomText12Ok returns a tuple with the CustomText12 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText12Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText12) {
		return nil, false
	}
	return o.CustomText12, true
}

// HasCustomText12 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText12() bool {
	if o != nil && !IsNil(o.CustomText12) {
		return true
	}

	return false
}

// SetCustomText12 gets a reference to the given string and assigns it to the CustomText12 field.
func (o *TestsPutPreviousValues) SetCustomText12(v string) {
	o.CustomText12 = &v
}

// GetCustomText13 returns the CustomText13 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText13() string {
	if o == nil || IsNil(o.CustomText13) {
		var ret string
		return ret
	}
	return *o.CustomText13
}

// GetCustomText13Ok returns a tuple with the CustomText13 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText13Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText13) {
		return nil, false
	}
	return o.CustomText13, true
}

// HasCustomText13 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText13() bool {
	if o != nil && !IsNil(o.CustomText13) {
		return true
	}

	return false
}

// SetCustomText13 gets a reference to the given string and assigns it to the CustomText13 field.
func (o *TestsPutPreviousValues) SetCustomText13(v string) {
	o.CustomText13 = &v
}

// GetCustomText14 returns the CustomText14 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText14() string {
	if o == nil || IsNil(o.CustomText14) {
		var ret string
		return ret
	}
	return *o.CustomText14
}

// GetCustomText14Ok returns a tuple with the CustomText14 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText14Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText14) {
		return nil, false
	}
	return o.CustomText14, true
}

// HasCustomText14 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText14() bool {
	if o != nil && !IsNil(o.CustomText14) {
		return true
	}

	return false
}

// SetCustomText14 gets a reference to the given string and assigns it to the CustomText14 field.
func (o *TestsPutPreviousValues) SetCustomText14(v string) {
	o.CustomText14 = &v
}

// GetCustomText15 returns the CustomText15 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText15() string {
	if o == nil || IsNil(o.CustomText15) {
		var ret string
		return ret
	}
	return *o.CustomText15
}

// GetCustomText15Ok returns a tuple with the CustomText15 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText15Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText15) {
		return nil, false
	}
	return o.CustomText15, true
}

// HasCustomText15 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText15() bool {
	if o != nil && !IsNil(o.CustomText15) {
		return true
	}

	return false
}

// SetCustomText15 gets a reference to the given string and assigns it to the CustomText15 field.
func (o *TestsPutPreviousValues) SetCustomText15(v string) {
	o.CustomText15 = &v
}

// GetCustomText16 returns the CustomText16 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText16() string {
	if o == nil || IsNil(o.CustomText16) {
		var ret string
		return ret
	}
	return *o.CustomText16
}

// GetCustomText16Ok returns a tuple with the CustomText16 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText16Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText16) {
		return nil, false
	}
	return o.CustomText16, true
}

// HasCustomText16 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText16() bool {
	if o != nil && !IsNil(o.CustomText16) {
		return true
	}

	return false
}

// SetCustomText16 gets a reference to the given string and assigns it to the CustomText16 field.
func (o *TestsPutPreviousValues) SetCustomText16(v string) {
	o.CustomText16 = &v
}

// GetCustomText17 returns the CustomText17 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText17() string {
	if o == nil || IsNil(o.CustomText17) {
		var ret string
		return ret
	}
	return *o.CustomText17
}

// GetCustomText17Ok returns a tuple with the CustomText17 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText17Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText17) {
		return nil, false
	}
	return o.CustomText17, true
}

// HasCustomText17 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText17() bool {
	if o != nil && !IsNil(o.CustomText17) {
		return true
	}

	return false
}

// SetCustomText17 gets a reference to the given string and assigns it to the CustomText17 field.
func (o *TestsPutPreviousValues) SetCustomText17(v string) {
	o.CustomText17 = &v
}

// GetCustomText18 returns the CustomText18 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText18() string {
	if o == nil || IsNil(o.CustomText18) {
		var ret string
		return ret
	}
	return *o.CustomText18
}

// GetCustomText18Ok returns a tuple with the CustomText18 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText18Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText18) {
		return nil, false
	}
	return o.CustomText18, true
}

// HasCustomText18 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText18() bool {
	if o != nil && !IsNil(o.CustomText18) {
		return true
	}

	return false
}

// SetCustomText18 gets a reference to the given string and assigns it to the CustomText18 field.
func (o *TestsPutPreviousValues) SetCustomText18(v string) {
	o.CustomText18 = &v
}

// GetCustomText19 returns the CustomText19 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText19() string {
	if o == nil || IsNil(o.CustomText19) {
		var ret string
		return ret
	}
	return *o.CustomText19
}

// GetCustomText19Ok returns a tuple with the CustomText19 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText19Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText19) {
		return nil, false
	}
	return o.CustomText19, true
}

// HasCustomText19 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText19() bool {
	if o != nil && !IsNil(o.CustomText19) {
		return true
	}

	return false
}

// SetCustomText19 gets a reference to the given string and assigns it to the CustomText19 field.
func (o *TestsPutPreviousValues) SetCustomText19(v string) {
	o.CustomText19 = &v
}

// GetCustomText20 returns the CustomText20 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText20() string {
	if o == nil || IsNil(o.CustomText20) {
		var ret string
		return ret
	}
	return *o.CustomText20
}

// GetCustomText20Ok returns a tuple with the CustomText20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText20Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText20) {
		return nil, false
	}
	return o.CustomText20, true
}

// HasCustomText20 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText20() bool {
	if o != nil && !IsNil(o.CustomText20) {
		return true
	}

	return false
}

// SetCustomText20 gets a reference to the given string and assigns it to the CustomText20 field.
func (o *TestsPutPreviousValues) SetCustomText20(v string) {
	o.CustomText20 = &v
}

// GetCustomText21 returns the CustomText21 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText21() string {
	if o == nil || IsNil(o.CustomText21) {
		var ret string
		return ret
	}
	return *o.CustomText21
}

// GetCustomText21Ok returns a tuple with the CustomText21 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText21Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText21) {
		return nil, false
	}
	return o.CustomText21, true
}

// HasCustomText21 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText21() bool {
	if o != nil && !IsNil(o.CustomText21) {
		return true
	}

	return false
}

// SetCustomText21 gets a reference to the given string and assigns it to the CustomText21 field.
func (o *TestsPutPreviousValues) SetCustomText21(v string) {
	o.CustomText21 = &v
}

// GetCustomText22 returns the CustomText22 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText22() string {
	if o == nil || IsNil(o.CustomText22) {
		var ret string
		return ret
	}
	return *o.CustomText22
}

// GetCustomText22Ok returns a tuple with the CustomText22 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText22Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText22) {
		return nil, false
	}
	return o.CustomText22, true
}

// HasCustomText22 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText22() bool {
	if o != nil && !IsNil(o.CustomText22) {
		return true
	}

	return false
}

// SetCustomText22 gets a reference to the given string and assigns it to the CustomText22 field.
func (o *TestsPutPreviousValues) SetCustomText22(v string) {
	o.CustomText22 = &v
}

// GetCustomText23 returns the CustomText23 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText23() string {
	if o == nil || IsNil(o.CustomText23) {
		var ret string
		return ret
	}
	return *o.CustomText23
}

// GetCustomText23Ok returns a tuple with the CustomText23 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText23Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText23) {
		return nil, false
	}
	return o.CustomText23, true
}

// HasCustomText23 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText23() bool {
	if o != nil && !IsNil(o.CustomText23) {
		return true
	}

	return false
}

// SetCustomText23 gets a reference to the given string and assigns it to the CustomText23 field.
func (o *TestsPutPreviousValues) SetCustomText23(v string) {
	o.CustomText23 = &v
}

// GetCustomText24 returns the CustomText24 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText24() string {
	if o == nil || IsNil(o.CustomText24) {
		var ret string
		return ret
	}
	return *o.CustomText24
}

// GetCustomText24Ok returns a tuple with the CustomText24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText24Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText24) {
		return nil, false
	}
	return o.CustomText24, true
}

// HasCustomText24 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText24() bool {
	if o != nil && !IsNil(o.CustomText24) {
		return true
	}

	return false
}

// SetCustomText24 gets a reference to the given string and assigns it to the CustomText24 field.
func (o *TestsPutPreviousValues) SetCustomText24(v string) {
	o.CustomText24 = &v
}

// GetCustomText25 returns the CustomText25 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText25() string {
	if o == nil || IsNil(o.CustomText25) {
		var ret string
		return ret
	}
	return *o.CustomText25
}

// GetCustomText25Ok returns a tuple with the CustomText25 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText25Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText25) {
		return nil, false
	}
	return o.CustomText25, true
}

// HasCustomText25 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText25() bool {
	if o != nil && !IsNil(o.CustomText25) {
		return true
	}

	return false
}

// SetCustomText25 gets a reference to the given string and assigns it to the CustomText25 field.
func (o *TestsPutPreviousValues) SetCustomText25(v string) {
	o.CustomText25 = &v
}

// GetCustomText26 returns the CustomText26 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText26() string {
	if o == nil || IsNil(o.CustomText26) {
		var ret string
		return ret
	}
	return *o.CustomText26
}

// GetCustomText26Ok returns a tuple with the CustomText26 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText26Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText26) {
		return nil, false
	}
	return o.CustomText26, true
}

// HasCustomText26 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText26() bool {
	if o != nil && !IsNil(o.CustomText26) {
		return true
	}

	return false
}

// SetCustomText26 gets a reference to the given string and assigns it to the CustomText26 field.
func (o *TestsPutPreviousValues) SetCustomText26(v string) {
	o.CustomText26 = &v
}

// GetCustomText27 returns the CustomText27 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText27() string {
	if o == nil || IsNil(o.CustomText27) {
		var ret string
		return ret
	}
	return *o.CustomText27
}

// GetCustomText27Ok returns a tuple with the CustomText27 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText27Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText27) {
		return nil, false
	}
	return o.CustomText27, true
}

// HasCustomText27 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText27() bool {
	if o != nil && !IsNil(o.CustomText27) {
		return true
	}

	return false
}

// SetCustomText27 gets a reference to the given string and assigns it to the CustomText27 field.
func (o *TestsPutPreviousValues) SetCustomText27(v string) {
	o.CustomText27 = &v
}

// GetCustomText28 returns the CustomText28 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText28() string {
	if o == nil || IsNil(o.CustomText28) {
		var ret string
		return ret
	}
	return *o.CustomText28
}

// GetCustomText28Ok returns a tuple with the CustomText28 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText28Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText28) {
		return nil, false
	}
	return o.CustomText28, true
}

// HasCustomText28 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText28() bool {
	if o != nil && !IsNil(o.CustomText28) {
		return true
	}

	return false
}

// SetCustomText28 gets a reference to the given string and assigns it to the CustomText28 field.
func (o *TestsPutPreviousValues) SetCustomText28(v string) {
	o.CustomText28 = &v
}

// GetCustomText29 returns the CustomText29 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText29() string {
	if o == nil || IsNil(o.CustomText29) {
		var ret string
		return ret
	}
	return *o.CustomText29
}

// GetCustomText29Ok returns a tuple with the CustomText29 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText29Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText29) {
		return nil, false
	}
	return o.CustomText29, true
}

// HasCustomText29 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText29() bool {
	if o != nil && !IsNil(o.CustomText29) {
		return true
	}

	return false
}

// SetCustomText29 gets a reference to the given string and assigns it to the CustomText29 field.
func (o *TestsPutPreviousValues) SetCustomText29(v string) {
	o.CustomText29 = &v
}

// GetCustomText30 returns the CustomText30 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText30() string {
	if o == nil || IsNil(o.CustomText30) {
		var ret string
		return ret
	}
	return *o.CustomText30
}

// GetCustomText30Ok returns a tuple with the CustomText30 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText30Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText30) {
		return nil, false
	}
	return o.CustomText30, true
}

// HasCustomText30 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText30() bool {
	if o != nil && !IsNil(o.CustomText30) {
		return true
	}

	return false
}

// SetCustomText30 gets a reference to the given string and assigns it to the CustomText30 field.
func (o *TestsPutPreviousValues) SetCustomText30(v string) {
	o.CustomText30 = &v
}

// GetCustomText31 returns the CustomText31 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText31() string {
	if o == nil || IsNil(o.CustomText31) {
		var ret string
		return ret
	}
	return *o.CustomText31
}

// GetCustomText31Ok returns a tuple with the CustomText31 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText31Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText31) {
		return nil, false
	}
	return o.CustomText31, true
}

// HasCustomText31 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText31() bool {
	if o != nil && !IsNil(o.CustomText31) {
		return true
	}

	return false
}

// SetCustomText31 gets a reference to the given string and assigns it to the CustomText31 field.
func (o *TestsPutPreviousValues) SetCustomText31(v string) {
	o.CustomText31 = &v
}

// GetCustomText32 returns the CustomText32 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText32() string {
	if o == nil || IsNil(o.CustomText32) {
		var ret string
		return ret
	}
	return *o.CustomText32
}

// GetCustomText32Ok returns a tuple with the CustomText32 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText32Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText32) {
		return nil, false
	}
	return o.CustomText32, true
}

// HasCustomText32 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText32() bool {
	if o != nil && !IsNil(o.CustomText32) {
		return true
	}

	return false
}

// SetCustomText32 gets a reference to the given string and assigns it to the CustomText32 field.
func (o *TestsPutPreviousValues) SetCustomText32(v string) {
	o.CustomText32 = &v
}

// GetCustomText33 returns the CustomText33 field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetCustomText33() string {
	if o == nil || IsNil(o.CustomText33) {
		var ret string
		return ret
	}
	return *o.CustomText33
}

// GetCustomText33Ok returns a tuple with the CustomText33 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetCustomText33Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText33) {
		return nil, false
	}
	return o.CustomText33, true
}

// HasCustomText33 returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasCustomText33() bool {
	if o != nil && !IsNil(o.CustomText33) {
		return true
	}

	return false
}

// SetCustomText33 gets a reference to the given string and assigns it to the CustomText33 field.
func (o *TestsPutPreviousValues) SetCustomText33(v string) {
	o.CustomText33 = &v
}

// GetTestCustomSelect8OptionId returns the TestCustomSelect8OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect8OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect8OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect8OptionId
}

// GetTestCustomSelect8OptionIdOk returns a tuple with the TestCustomSelect8OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect8OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect8OptionId) {
		return nil, false
	}
	return o.TestCustomSelect8OptionId, true
}

// HasTestCustomSelect8OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect8OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect8OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect8OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect8OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect8OptionId(v int32) {
	o.TestCustomSelect8OptionId = &v
}

// GetTestCustomSelect9OptionId returns the TestCustomSelect9OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect9OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect9OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect9OptionId
}

// GetTestCustomSelect9OptionIdOk returns a tuple with the TestCustomSelect9OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect9OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect9OptionId) {
		return nil, false
	}
	return o.TestCustomSelect9OptionId, true
}

// HasTestCustomSelect9OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect9OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect9OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect9OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect9OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect9OptionId(v int32) {
	o.TestCustomSelect9OptionId = &v
}

// GetTestCustomSelect10OptionId returns the TestCustomSelect10OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect10OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect10OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect10OptionId
}

// GetTestCustomSelect10OptionIdOk returns a tuple with the TestCustomSelect10OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect10OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect10OptionId) {
		return nil, false
	}
	return o.TestCustomSelect10OptionId, true
}

// HasTestCustomSelect10OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect10OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect10OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect10OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect10OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect10OptionId(v int32) {
	o.TestCustomSelect10OptionId = &v
}

// GetTestCustomSelect11OptionId returns the TestCustomSelect11OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect11OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect11OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect11OptionId
}

// GetTestCustomSelect11OptionIdOk returns a tuple with the TestCustomSelect11OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect11OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect11OptionId) {
		return nil, false
	}
	return o.TestCustomSelect11OptionId, true
}

// HasTestCustomSelect11OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect11OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect11OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect11OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect11OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect11OptionId(v int32) {
	o.TestCustomSelect11OptionId = &v
}

// GetTestCustomSelect12OptionId returns the TestCustomSelect12OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect12OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect12OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect12OptionId
}

// GetTestCustomSelect12OptionIdOk returns a tuple with the TestCustomSelect12OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect12OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect12OptionId) {
		return nil, false
	}
	return o.TestCustomSelect12OptionId, true
}

// HasTestCustomSelect12OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect12OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect12OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect12OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect12OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect12OptionId(v int32) {
	o.TestCustomSelect12OptionId = &v
}

// GetTestCustomSelect13OptionId returns the TestCustomSelect13OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect13OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect13OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect13OptionId
}

// GetTestCustomSelect13OptionIdOk returns a tuple with the TestCustomSelect13OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect13OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect13OptionId) {
		return nil, false
	}
	return o.TestCustomSelect13OptionId, true
}

// HasTestCustomSelect13OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect13OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect13OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect13OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect13OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect13OptionId(v int32) {
	o.TestCustomSelect13OptionId = &v
}

// GetTestCustomSelect14OptionId returns the TestCustomSelect14OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect14OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect14OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect14OptionId
}

// GetTestCustomSelect14OptionIdOk returns a tuple with the TestCustomSelect14OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect14OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect14OptionId) {
		return nil, false
	}
	return o.TestCustomSelect14OptionId, true
}

// HasTestCustomSelect14OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect14OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect14OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect14OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect14OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect14OptionId(v int32) {
	o.TestCustomSelect14OptionId = &v
}

// GetTestCustomSelect15OptionId returns the TestCustomSelect15OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect15OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect15OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect15OptionId
}

// GetTestCustomSelect15OptionIdOk returns a tuple with the TestCustomSelect15OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect15OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect15OptionId) {
		return nil, false
	}
	return o.TestCustomSelect15OptionId, true
}

// HasTestCustomSelect15OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect15OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect15OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect15OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect15OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect15OptionId(v int32) {
	o.TestCustomSelect15OptionId = &v
}

// GetTestCustomSelect16OptionId returns the TestCustomSelect16OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect16OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect16OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect16OptionId
}

// GetTestCustomSelect16OptionIdOk returns a tuple with the TestCustomSelect16OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect16OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect16OptionId) {
		return nil, false
	}
	return o.TestCustomSelect16OptionId, true
}

// HasTestCustomSelect16OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect16OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect16OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect16OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect16OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect16OptionId(v int32) {
	o.TestCustomSelect16OptionId = &v
}

// GetTestCustomSelect17OptionId returns the TestCustomSelect17OptionId field value if set, zero value otherwise.
func (o *TestsPutPreviousValues) GetTestCustomSelect17OptionId() int32 {
	if o == nil || IsNil(o.TestCustomSelect17OptionId) {
		var ret int32
		return ret
	}
	return *o.TestCustomSelect17OptionId
}

// GetTestCustomSelect17OptionIdOk returns a tuple with the TestCustomSelect17OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsPutPreviousValues) GetTestCustomSelect17OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCustomSelect17OptionId) {
		return nil, false
	}
	return o.TestCustomSelect17OptionId, true
}

// HasTestCustomSelect17OptionId returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasTestCustomSelect17OptionId() bool {
	if o != nil && !IsNil(o.TestCustomSelect17OptionId) {
		return true
	}

	return false
}

// SetTestCustomSelect17OptionId gets a reference to the given int32 and assigns it to the TestCustomSelect17OptionId field.
func (o *TestsPutPreviousValues) SetTestCustomSelect17OptionId(v int32) {
	o.TestCustomSelect17OptionId = &v
}

// GetFieldData returns the FieldData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestsPutPreviousValues) GetFieldData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FieldData
}

// GetFieldDataOk returns a tuple with the FieldData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestsPutPreviousValues) GetFieldDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FieldData) {
		return nil, false
	}
	return &o.FieldData, true
}

// HasFieldData returns a boolean if a field has been set.
func (o *TestsPutPreviousValues) HasFieldData() bool {
	if o != nil && !IsNil(o.FieldData) {
		return true
	}

	return false
}

// SetFieldData gets a reference to the given interface{} and assigns it to the FieldData field.
func (o *TestsPutPreviousValues) SetFieldData(v interface{}) {
	o.FieldData = v
}

func (o TestsPutPreviousValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestsPutPreviousValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.ControlsDatumId) {
		toSerialize["controls_datum_id"] = o.ControlsDatumId
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SampleSize) {
		toSerialize["sample_size"] = o.SampleSize
	}
	if !IsNil(o.Selections) {
		toSerialize["selections"] = o.Selections
	}
	if !IsNil(o.TesterUserId) {
		toSerialize["tester_user_id"] = o.TesterUserId
	}
	if !IsNil(o.ReviewerUserId) {
		toSerialize["reviewer_user_id"] = o.ReviewerUserId
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	if !IsNil(o.TestSheet) {
		toSerialize["test_sheet"] = o.TestSheet
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.EffectivenessOptionId) {
		toSerialize["effectiveness_option_id"] = o.EffectivenessOptionId
	}
	if !IsNil(o.StatusOptionId) {
		toSerialize["status_option_id"] = o.StatusOptionId
	}
	if !IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	if !IsNil(o.ArchivedAt) {
		toSerialize["archived_at"] = o.ArchivedAt
	}
	if !IsNil(o.OldHours) {
		toSerialize["old_hours"] = o.OldHours
	}
	if !IsNil(o.DueDate) {
		toSerialize["due_date"] = o.DueDate
	}
	if !IsNil(o.OldBudgetHours) {
		toSerialize["old_budget_hours"] = o.OldBudgetHours
	}
	if !IsNil(o.OldPercentComplete) {
		toSerialize["old_percent_complete"] = o.OldPercentComplete
	}
	if !IsNil(o.TestPeriod) {
		toSerialize["test_period"] = o.TestPeriod
	}
	if !IsNil(o.EntityId) {
		toSerialize["entity_id"] = o.EntityId
	}
	if !IsNil(o.ControlId) {
		toSerialize["control_id"] = o.ControlId
	}
	if !IsNil(o.PrecisionLevel) {
		toSerialize["precision_level"] = o.PrecisionLevel
	}
	if !IsNil(o.MrcEvidence) {
		toSerialize["mrc_evidence"] = o.MrcEvidence
	}
	if !IsNil(o.SheetId) {
		toSerialize["sheet_id"] = o.SheetId
	}
	if !IsNil(o.IsInactive) {
		toSerialize["is_inactive"] = o.IsInactive
	}
	if !IsNil(o.CompleteDate) {
		toSerialize["complete_date"] = o.CompleteDate
	}
	if !IsNil(o.ReviewedDate) {
		toSerialize["reviewed_date"] = o.ReviewedDate
	}
	if !IsNil(o.ReviewNotesDate) {
		toSerialize["review_notes_date"] = o.ReviewNotesDate
	}
	if !IsNil(o.CompleteByUserId) {
		toSerialize["complete_by_user_id"] = o.CompleteByUserId
	}
	if !IsNil(o.ReviewedByUserId) {
		toSerialize["reviewed_by_user_id"] = o.ReviewedByUserId
	}
	if !IsNil(o.ReviewNotesByUserId) {
		toSerialize["review_notes_by_user_id"] = o.ReviewNotesByUserId
	}
	if !IsNil(o.TestSectionId) {
		toSerialize["test_section_id"] = o.TestSectionId
	}
	if !IsNil(o.Procedures) {
		toSerialize["procedures"] = o.Procedures
	}
	if !IsNil(o.SheetFileId) {
		toSerialize["sheet_file_id"] = o.SheetFileId
	}
	if !IsNil(o.OldReviewerHours) {
		toSerialize["old_reviewer_hours"] = o.OldReviewerHours
	}
	if !IsNil(o.OldReviewerBudgetHours) {
		toSerialize["old_reviewer_budget_hours"] = o.OldReviewerBudgetHours
	}
	if !IsNil(o.SecondaryReviewerUserId) {
		toSerialize["secondary_reviewer_user_id"] = o.SecondaryReviewerUserId
	}
	if !IsNil(o.PopulationSize) {
		toSerialize["population_size"] = o.PopulationSize
	}
	if !IsNil(o.TestPbcRequest) {
		toSerialize["test_pbc_request"] = o.TestPbcRequest
	}
	if !IsNil(o.TestPbcRequestAdditional) {
		toSerialize["test_pbc_request_additional"] = o.TestPbcRequestAdditional
	}
	if !IsNil(o.PopulationCompleteness) {
		toSerialize["population_completeness"] = o.PopulationCompleteness
	}
	if !IsNil(o.PopulationSource) {
		toSerialize["population_source"] = o.PopulationSource
	}
	if !IsNil(o.ExternalAuditorStatusOptionId) {
		toSerialize["external_auditor_status_option_id"] = o.ExternalAuditorStatusOptionId
	}
	if !IsNil(o.ReviewerDueDate) {
		toSerialize["reviewer_due_date"] = o.ReviewerDueDate
	}
	if !IsNil(o.OpenDate) {
		toSerialize["open_date"] = o.OpenDate
	}
	if !IsNil(o.UnderReviewTDate) {
		toSerialize["under_review_t_date"] = o.UnderReviewTDate
	}
	if !IsNil(o.UnderReviewR2Date) {
		toSerialize["under_review_r2_date"] = o.UnderReviewR2Date
	}
	if !IsNil(o.OpenByUserId) {
		toSerialize["open_by_user_id"] = o.OpenByUserId
	}
	if !IsNil(o.UnderReviewTByUserId) {
		toSerialize["under_review_t_by_user_id"] = o.UnderReviewTByUserId
	}
	if !IsNil(o.UnderReviewR2ByUserId) {
		toSerialize["under_review_r2_by_user_id"] = o.UnderReviewR2ByUserId
	}
	if !IsNil(o.TestCustomSelect1OptionId) {
		toSerialize["test_custom_select1_option_id"] = o.TestCustomSelect1OptionId
	}
	if !IsNil(o.TestCustomSelect2OptionId) {
		toSerialize["test_custom_select2_option_id"] = o.TestCustomSelect2OptionId
	}
	if !IsNil(o.TestCustomSelect3OptionId) {
		toSerialize["test_custom_select3_option_id"] = o.TestCustomSelect3OptionId
	}
	if !IsNil(o.InformationReliability) {
		toSerialize["information_reliability"] = o.InformationReliability
	}
	if !IsNil(o.ControlCharacteristics) {
		toSerialize["control_characteristics"] = o.ControlCharacteristics
	}
	if !IsNil(o.ExceptionNature) {
		toSerialize["exception_nature"] = o.ExceptionNature
	}
	if !IsNil(o.SampleSizeAdditional) {
		toSerialize["sample_size_additional"] = o.SampleSizeAdditional
	}
	if !IsNil(o.NumberExceptions) {
		toSerialize["number_exceptions"] = o.NumberExceptions
	}
	if !IsNil(o.SecondaryReviewerDueDate) {
		toSerialize["secondary_reviewer_due_date"] = o.SecondaryReviewerDueDate
	}
	if !IsNil(o.ArchiveId) {
		toSerialize["archive_id"] = o.ArchiveId
	}
	if !IsNil(o.TestCustomSelect4OptionId) {
		toSerialize["test_custom_select4_option_id"] = o.TestCustomSelect4OptionId
	}
	if !IsNil(o.FirstCompleteDate) {
		toSerialize["first_complete_date"] = o.FirstCompleteDate
	}
	if !IsNil(o.FirstReviewedDate) {
		toSerialize["first_reviewed_date"] = o.FirstReviewedDate
	}
	if !IsNil(o.FirstUnderReviewTDate) {
		toSerialize["first_under_review_t_date"] = o.FirstUnderReviewTDate
	}
	if !IsNil(o.FirstUnderReviewR2Date) {
		toSerialize["first_under_review_r2_date"] = o.FirstUnderReviewR2Date
	}
	if !IsNil(o.CustomText1) {
		toSerialize["custom_text1"] = o.CustomText1
	}
	if !IsNil(o.CustomText2) {
		toSerialize["custom_text2"] = o.CustomText2
	}
	if !IsNil(o.CustomText3) {
		toSerialize["custom_text3"] = o.CustomText3
	}
	if !IsNil(o.CustomText4) {
		toSerialize["custom_text4"] = o.CustomText4
	}
	if !IsNil(o.CustomText5) {
		toSerialize["custom_text5"] = o.CustomText5
	}
	if !IsNil(o.CustomText6) {
		toSerialize["custom_text6"] = o.CustomText6
	}
	if !IsNil(o.CustomText7) {
		toSerialize["custom_text7"] = o.CustomText7
	}
	if !IsNil(o.CustomText8) {
		toSerialize["custom_text8"] = o.CustomText8
	}
	if !IsNil(o.HoldByUserId) {
		toSerialize["hold_by_user_id"] = o.HoldByUserId
	}
	if !IsNil(o.HoldDate) {
		toSerialize["hold_date"] = o.HoldDate
	}
	if !IsNil(o.FirstHoldDate) {
		toSerialize["first_hold_date"] = o.FirstHoldDate
	}
	if !IsNil(o.HoldStatusOptionId) {
		toSerialize["hold_status_option_id"] = o.HoldStatusOptionId
	}
	if !IsNil(o.TestCustomSelect5OptionId) {
		toSerialize["test_custom_select5_option_id"] = o.TestCustomSelect5OptionId
	}
	if !IsNil(o.TestCustomSelect6OptionId) {
		toSerialize["test_custom_select6_option_id"] = o.TestCustomSelect6OptionId
	}
	if !IsNil(o.TestCustomSelect7OptionId) {
		toSerialize["test_custom_select7_option_id"] = o.TestCustomSelect7OptionId
	}
	if !IsNil(o.BudgetHours) {
		toSerialize["budget_hours"] = o.BudgetHours
	}
	if !IsNil(o.Hours) {
		toSerialize["hours"] = o.Hours
	}
	if !IsNil(o.ReviewerBudgetHours) {
		toSerialize["reviewer_budget_hours"] = o.ReviewerBudgetHours
	}
	if !IsNil(o.ReviewerHours) {
		toSerialize["reviewer_hours"] = o.ReviewerHours
	}
	if !IsNil(o.PercentComplete) {
		toSerialize["percent_complete"] = o.PercentComplete
	}
	if !IsNil(o.CustomText9) {
		toSerialize["custom_text9"] = o.CustomText9
	}
	if !IsNil(o.CustomText10) {
		toSerialize["custom_text10"] = o.CustomText10
	}
	if !IsNil(o.CustomText11) {
		toSerialize["custom_text11"] = o.CustomText11
	}
	if !IsNil(o.CustomText12) {
		toSerialize["custom_text12"] = o.CustomText12
	}
	if !IsNil(o.CustomText13) {
		toSerialize["custom_text13"] = o.CustomText13
	}
	if !IsNil(o.CustomText14) {
		toSerialize["custom_text14"] = o.CustomText14
	}
	if !IsNil(o.CustomText15) {
		toSerialize["custom_text15"] = o.CustomText15
	}
	if !IsNil(o.CustomText16) {
		toSerialize["custom_text16"] = o.CustomText16
	}
	if !IsNil(o.CustomText17) {
		toSerialize["custom_text17"] = o.CustomText17
	}
	if !IsNil(o.CustomText18) {
		toSerialize["custom_text18"] = o.CustomText18
	}
	if !IsNil(o.CustomText19) {
		toSerialize["custom_text19"] = o.CustomText19
	}
	if !IsNil(o.CustomText20) {
		toSerialize["custom_text20"] = o.CustomText20
	}
	if !IsNil(o.CustomText21) {
		toSerialize["custom_text21"] = o.CustomText21
	}
	if !IsNil(o.CustomText22) {
		toSerialize["custom_text22"] = o.CustomText22
	}
	if !IsNil(o.CustomText23) {
		toSerialize["custom_text23"] = o.CustomText23
	}
	if !IsNil(o.CustomText24) {
		toSerialize["custom_text24"] = o.CustomText24
	}
	if !IsNil(o.CustomText25) {
		toSerialize["custom_text25"] = o.CustomText25
	}
	if !IsNil(o.CustomText26) {
		toSerialize["custom_text26"] = o.CustomText26
	}
	if !IsNil(o.CustomText27) {
		toSerialize["custom_text27"] = o.CustomText27
	}
	if !IsNil(o.CustomText28) {
		toSerialize["custom_text28"] = o.CustomText28
	}
	if !IsNil(o.CustomText29) {
		toSerialize["custom_text29"] = o.CustomText29
	}
	if !IsNil(o.CustomText30) {
		toSerialize["custom_text30"] = o.CustomText30
	}
	if !IsNil(o.CustomText31) {
		toSerialize["custom_text31"] = o.CustomText31
	}
	if !IsNil(o.CustomText32) {
		toSerialize["custom_text32"] = o.CustomText32
	}
	if !IsNil(o.CustomText33) {
		toSerialize["custom_text33"] = o.CustomText33
	}
	if !IsNil(o.TestCustomSelect8OptionId) {
		toSerialize["test_custom_select8_option_id"] = o.TestCustomSelect8OptionId
	}
	if !IsNil(o.TestCustomSelect9OptionId) {
		toSerialize["test_custom_select9_option_id"] = o.TestCustomSelect9OptionId
	}
	if !IsNil(o.TestCustomSelect10OptionId) {
		toSerialize["test_custom_select10_option_id"] = o.TestCustomSelect10OptionId
	}
	if !IsNil(o.TestCustomSelect11OptionId) {
		toSerialize["test_custom_select11_option_id"] = o.TestCustomSelect11OptionId
	}
	if !IsNil(o.TestCustomSelect12OptionId) {
		toSerialize["test_custom_select12_option_id"] = o.TestCustomSelect12OptionId
	}
	if !IsNil(o.TestCustomSelect13OptionId) {
		toSerialize["test_custom_select13_option_id"] = o.TestCustomSelect13OptionId
	}
	if !IsNil(o.TestCustomSelect14OptionId) {
		toSerialize["test_custom_select14_option_id"] = o.TestCustomSelect14OptionId
	}
	if !IsNil(o.TestCustomSelect15OptionId) {
		toSerialize["test_custom_select15_option_id"] = o.TestCustomSelect15OptionId
	}
	if !IsNil(o.TestCustomSelect16OptionId) {
		toSerialize["test_custom_select16_option_id"] = o.TestCustomSelect16OptionId
	}
	if !IsNil(o.TestCustomSelect17OptionId) {
		toSerialize["test_custom_select17_option_id"] = o.TestCustomSelect17OptionId
	}
	if o.FieldData != nil {
		toSerialize["field_data"] = o.FieldData
	}
	return toSerialize, nil
}

type NullableTestsPutPreviousValues struct {
	value *TestsPutPreviousValues
	isSet bool
}

func (v NullableTestsPutPreviousValues) Get() *TestsPutPreviousValues {
	return v.value
}

func (v *NullableTestsPutPreviousValues) Set(val *TestsPutPreviousValues) {
	v.value = val
	v.isSet = true
}

func (v NullableTestsPutPreviousValues) IsSet() bool {
	return v.isSet
}

func (v *NullableTestsPutPreviousValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestsPutPreviousValues(val *TestsPutPreviousValues) *NullableTestsPutPreviousValues {
	return &NullableTestsPutPreviousValues{value: val, isSet: true}
}

func (v NullableTestsPutPreviousValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestsPutPreviousValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


