/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the ActionPlansArchivesPutPreviousValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionPlansArchivesPutPreviousValues{}

// ActionPlansArchivesPutPreviousValues struct for ActionPlansArchivesPutPreviousValues
type ActionPlansArchivesPutPreviousValues struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	// Note: This is a Foreign Key to `action_plans.id`.<fk table='action_plans' column='id'/>
	ActionPlanId *int32 `json:"action_plan_id,omitempty"`
	// Note: This is a Foreign Key to `issues_archives.id`.<fk table='issues_archives' column='id'/>
	IssuesArchiveId *int32 `json:"issues_archive_id,omitempty"`
	// Note: This is a Foreign Key to `archives.id`.<fk table='archives' column='id'/>
	ArchiveId *int32 `json:"archive_id,omitempty"`
	// Note: This is a Foreign Key to `issues.id`.<fk table='issues' column='id'/>
	IssueId *int32 `json:"issue_id,omitempty"`
	Flattened interface{} `json:"flattened,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
}

// NewActionPlansArchivesPutPreviousValues instantiates a new ActionPlansArchivesPutPreviousValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionPlansArchivesPutPreviousValues() *ActionPlansArchivesPutPreviousValues {
	this := ActionPlansArchivesPutPreviousValues{}
	return &this
}

// NewActionPlansArchivesPutPreviousValuesWithDefaults instantiates a new ActionPlansArchivesPutPreviousValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionPlansArchivesPutPreviousValuesWithDefaults() *ActionPlansArchivesPutPreviousValues {
	this := ActionPlansArchivesPutPreviousValues{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActionPlansArchivesPutPreviousValues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansArchivesPutPreviousValues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActionPlansArchivesPutPreviousValues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ActionPlansArchivesPutPreviousValues) SetId(v int32) {
	o.Id = &v
}

// GetActionPlanId returns the ActionPlanId field value if set, zero value otherwise.
func (o *ActionPlansArchivesPutPreviousValues) GetActionPlanId() int32 {
	if o == nil || IsNil(o.ActionPlanId) {
		var ret int32
		return ret
	}
	return *o.ActionPlanId
}

// GetActionPlanIdOk returns a tuple with the ActionPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansArchivesPutPreviousValues) GetActionPlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ActionPlanId) {
		return nil, false
	}
	return o.ActionPlanId, true
}

// HasActionPlanId returns a boolean if a field has been set.
func (o *ActionPlansArchivesPutPreviousValues) HasActionPlanId() bool {
	if o != nil && !IsNil(o.ActionPlanId) {
		return true
	}

	return false
}

// SetActionPlanId gets a reference to the given int32 and assigns it to the ActionPlanId field.
func (o *ActionPlansArchivesPutPreviousValues) SetActionPlanId(v int32) {
	o.ActionPlanId = &v
}

// GetIssuesArchiveId returns the IssuesArchiveId field value if set, zero value otherwise.
func (o *ActionPlansArchivesPutPreviousValues) GetIssuesArchiveId() int32 {
	if o == nil || IsNil(o.IssuesArchiveId) {
		var ret int32
		return ret
	}
	return *o.IssuesArchiveId
}

// GetIssuesArchiveIdOk returns a tuple with the IssuesArchiveId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansArchivesPutPreviousValues) GetIssuesArchiveIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssuesArchiveId) {
		return nil, false
	}
	return o.IssuesArchiveId, true
}

// HasIssuesArchiveId returns a boolean if a field has been set.
func (o *ActionPlansArchivesPutPreviousValues) HasIssuesArchiveId() bool {
	if o != nil && !IsNil(o.IssuesArchiveId) {
		return true
	}

	return false
}

// SetIssuesArchiveId gets a reference to the given int32 and assigns it to the IssuesArchiveId field.
func (o *ActionPlansArchivesPutPreviousValues) SetIssuesArchiveId(v int32) {
	o.IssuesArchiveId = &v
}

// GetArchiveId returns the ArchiveId field value if set, zero value otherwise.
func (o *ActionPlansArchivesPutPreviousValues) GetArchiveId() int32 {
	if o == nil || IsNil(o.ArchiveId) {
		var ret int32
		return ret
	}
	return *o.ArchiveId
}

// GetArchiveIdOk returns a tuple with the ArchiveId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansArchivesPutPreviousValues) GetArchiveIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ArchiveId) {
		return nil, false
	}
	return o.ArchiveId, true
}

// HasArchiveId returns a boolean if a field has been set.
func (o *ActionPlansArchivesPutPreviousValues) HasArchiveId() bool {
	if o != nil && !IsNil(o.ArchiveId) {
		return true
	}

	return false
}

// SetArchiveId gets a reference to the given int32 and assigns it to the ArchiveId field.
func (o *ActionPlansArchivesPutPreviousValues) SetArchiveId(v int32) {
	o.ArchiveId = &v
}

// GetIssueId returns the IssueId field value if set, zero value otherwise.
func (o *ActionPlansArchivesPutPreviousValues) GetIssueId() int32 {
	if o == nil || IsNil(o.IssueId) {
		var ret int32
		return ret
	}
	return *o.IssueId
}

// GetIssueIdOk returns a tuple with the IssueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansArchivesPutPreviousValues) GetIssueIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueId) {
		return nil, false
	}
	return o.IssueId, true
}

// HasIssueId returns a boolean if a field has been set.
func (o *ActionPlansArchivesPutPreviousValues) HasIssueId() bool {
	if o != nil && !IsNil(o.IssueId) {
		return true
	}

	return false
}

// SetIssueId gets a reference to the given int32 and assigns it to the IssueId field.
func (o *ActionPlansArchivesPutPreviousValues) SetIssueId(v int32) {
	o.IssueId = &v
}

// GetFlattened returns the Flattened field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActionPlansArchivesPutPreviousValues) GetFlattened() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Flattened
}

// GetFlattenedOk returns a tuple with the Flattened field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActionPlansArchivesPutPreviousValues) GetFlattenedOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Flattened) {
		return nil, false
	}
	return &o.Flattened, true
}

// HasFlattened returns a boolean if a field has been set.
func (o *ActionPlansArchivesPutPreviousValues) HasFlattened() bool {
	if o != nil && !IsNil(o.Flattened) {
		return true
	}

	return false
}

// SetFlattened gets a reference to the given interface{} and assigns it to the Flattened field.
func (o *ActionPlansArchivesPutPreviousValues) SetFlattened(v interface{}) {
	o.Flattened = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ActionPlansArchivesPutPreviousValues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansArchivesPutPreviousValues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ActionPlansArchivesPutPreviousValues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ActionPlansArchivesPutPreviousValues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ActionPlansArchivesPutPreviousValues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansArchivesPutPreviousValues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ActionPlansArchivesPutPreviousValues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ActionPlansArchivesPutPreviousValues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ActionPlansArchivesPutPreviousValues) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionPlansArchivesPutPreviousValues) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ActionPlansArchivesPutPreviousValues) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *ActionPlansArchivesPutPreviousValues) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

func (o ActionPlansArchivesPutPreviousValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionPlansArchivesPutPreviousValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ActionPlanId) {
		toSerialize["action_plan_id"] = o.ActionPlanId
	}
	if !IsNil(o.IssuesArchiveId) {
		toSerialize["issues_archive_id"] = o.IssuesArchiveId
	}
	if !IsNil(o.ArchiveId) {
		toSerialize["archive_id"] = o.ArchiveId
	}
	if !IsNil(o.IssueId) {
		toSerialize["issue_id"] = o.IssueId
	}
	if o.Flattened != nil {
		toSerialize["flattened"] = o.Flattened
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	return toSerialize, nil
}

type NullableActionPlansArchivesPutPreviousValues struct {
	value *ActionPlansArchivesPutPreviousValues
	isSet bool
}

func (v NullableActionPlansArchivesPutPreviousValues) Get() *ActionPlansArchivesPutPreviousValues {
	return v.value
}

func (v *NullableActionPlansArchivesPutPreviousValues) Set(val *ActionPlansArchivesPutPreviousValues) {
	v.value = val
	v.isSet = true
}

func (v NullableActionPlansArchivesPutPreviousValues) IsSet() bool {
	return v.isSet
}

func (v *NullableActionPlansArchivesPutPreviousValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionPlansArchivesPutPreviousValues(val *ActionPlansArchivesPutPreviousValues) *NullableActionPlansArchivesPutPreviousValues {
	return &NullableActionPlansArchivesPutPreviousValues{value: val, isSet: true}
}

func (v NullableActionPlansArchivesPutPreviousValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionPlansArchivesPutPreviousValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


