/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AllowedTeamsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllowedTeamsGet200Response{}

// AllowedTeamsGet200Response struct for AllowedTeamsGet200Response
type AllowedTeamsGet200Response struct {
	AllowedTeams []AllowedTeams `json:"allowed_teams,omitempty"`
}

// NewAllowedTeamsGet200Response instantiates a new AllowedTeamsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowedTeamsGet200Response() *AllowedTeamsGet200Response {
	this := AllowedTeamsGet200Response{}
	return &this
}

// NewAllowedTeamsGet200ResponseWithDefaults instantiates a new AllowedTeamsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowedTeamsGet200ResponseWithDefaults() *AllowedTeamsGet200Response {
	this := AllowedTeamsGet200Response{}
	return &this
}

// GetAllowedTeams returns the AllowedTeams field value if set, zero value otherwise.
func (o *AllowedTeamsGet200Response) GetAllowedTeams() []AllowedTeams {
	if o == nil || IsNil(o.AllowedTeams) {
		var ret []AllowedTeams
		return ret
	}
	return o.AllowedTeams
}

// GetAllowedTeamsOk returns a tuple with the AllowedTeams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedTeamsGet200Response) GetAllowedTeamsOk() ([]AllowedTeams, bool) {
	if o == nil || IsNil(o.AllowedTeams) {
		return nil, false
	}
	return o.AllowedTeams, true
}

// HasAllowedTeams returns a boolean if a field has been set.
func (o *AllowedTeamsGet200Response) HasAllowedTeams() bool {
	if o != nil && !IsNil(o.AllowedTeams) {
		return true
	}

	return false
}

// SetAllowedTeams gets a reference to the given []AllowedTeams and assigns it to the AllowedTeams field.
func (o *AllowedTeamsGet200Response) SetAllowedTeams(v []AllowedTeams) {
	o.AllowedTeams = v
}

func (o AllowedTeamsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllowedTeamsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedTeams) {
		toSerialize["allowed_teams"] = o.AllowedTeams
	}
	return toSerialize, nil
}

type NullableAllowedTeamsGet200Response struct {
	value *AllowedTeamsGet200Response
	isSet bool
}

func (v NullableAllowedTeamsGet200Response) Get() *AllowedTeamsGet200Response {
	return v.value
}

func (v *NullableAllowedTeamsGet200Response) Set(val *AllowedTeamsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowedTeamsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowedTeamsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowedTeamsGet200Response(val *AllowedTeamsGet200Response) *NullableAllowedTeamsGet200Response {
	return &NullableAllowedTeamsGet200Response{value: val, isSet: true}
}

func (v NullableAllowedTeamsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowedTeamsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


