/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the IssueCategoriesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssueCategoriesPostRequest{}

// IssueCategoriesPostRequest struct for IssueCategoriesPostRequest
type IssueCategoriesPostRequest struct {
	IssueCategory *IssueCategories `json:"issue_category,omitempty"`
}

// NewIssueCategoriesPostRequest instantiates a new IssueCategoriesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueCategoriesPostRequest() *IssueCategoriesPostRequest {
	this := IssueCategoriesPostRequest{}
	return &this
}

// NewIssueCategoriesPostRequestWithDefaults instantiates a new IssueCategoriesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueCategoriesPostRequestWithDefaults() *IssueCategoriesPostRequest {
	this := IssueCategoriesPostRequest{}
	return &this
}

// GetIssueCategory returns the IssueCategory field value if set, zero value otherwise.
func (o *IssueCategoriesPostRequest) GetIssueCategory() IssueCategories {
	if o == nil || IsNil(o.IssueCategory) {
		var ret IssueCategories
		return ret
	}
	return *o.IssueCategory
}

// GetIssueCategoryOk returns a tuple with the IssueCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueCategoriesPostRequest) GetIssueCategoryOk() (*IssueCategories, bool) {
	if o == nil || IsNil(o.IssueCategory) {
		return nil, false
	}
	return o.IssueCategory, true
}

// HasIssueCategory returns a boolean if a field has been set.
func (o *IssueCategoriesPostRequest) HasIssueCategory() bool {
	if o != nil && !IsNil(o.IssueCategory) {
		return true
	}

	return false
}

// SetIssueCategory gets a reference to the given IssueCategories and assigns it to the IssueCategory field.
func (o *IssueCategoriesPostRequest) SetIssueCategory(v IssueCategories) {
	o.IssueCategory = &v
}

func (o IssueCategoriesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssueCategoriesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IssueCategory) {
		toSerialize["issue_category"] = o.IssueCategory
	}
	return toSerialize, nil
}

type NullableIssueCategoriesPostRequest struct {
	value *IssueCategoriesPostRequest
	isSet bool
}

func (v NullableIssueCategoriesPostRequest) Get() *IssueCategoriesPostRequest {
	return v.value
}

func (v *NullableIssueCategoriesPostRequest) Set(val *IssueCategoriesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueCategoriesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueCategoriesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueCategoriesPostRequest(val *IssueCategoriesPostRequest) *NullableIssueCategoriesPostRequest {
	return &NullableIssueCategoriesPostRequest{value: val, isSet: true}
}

func (v NullableIssueCategoriesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueCategoriesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


