/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the NarrativesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NarrativesGet200Response{}

// NarrativesGet200Response struct for NarrativesGet200Response
type NarrativesGet200Response struct {
	Narratives []Narratives `json:"narratives,omitempty"`
}

// NewNarrativesGet200Response instantiates a new NarrativesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNarrativesGet200Response() *NarrativesGet200Response {
	this := NarrativesGet200Response{}
	return &this
}

// NewNarrativesGet200ResponseWithDefaults instantiates a new NarrativesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNarrativesGet200ResponseWithDefaults() *NarrativesGet200Response {
	this := NarrativesGet200Response{}
	return &this
}

// GetNarratives returns the Narratives field value if set, zero value otherwise.
func (o *NarrativesGet200Response) GetNarratives() []Narratives {
	if o == nil || IsNil(o.Narratives) {
		var ret []Narratives
		return ret
	}
	return o.Narratives
}

// GetNarrativesOk returns a tuple with the Narratives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NarrativesGet200Response) GetNarrativesOk() ([]Narratives, bool) {
	if o == nil || IsNil(o.Narratives) {
		return nil, false
	}
	return o.Narratives, true
}

// HasNarratives returns a boolean if a field has been set.
func (o *NarrativesGet200Response) HasNarratives() bool {
	if o != nil && !IsNil(o.Narratives) {
		return true
	}

	return false
}

// SetNarratives gets a reference to the given []Narratives and assigns it to the Narratives field.
func (o *NarrativesGet200Response) SetNarratives(v []Narratives) {
	o.Narratives = v
}

func (o NarrativesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NarrativesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Narratives) {
		toSerialize["narratives"] = o.Narratives
	}
	return toSerialize, nil
}

type NullableNarrativesGet200Response struct {
	value *NarrativesGet200Response
	isSet bool
}

func (v NullableNarrativesGet200Response) Get() *NarrativesGet200Response {
	return v.value
}

func (v *NullableNarrativesGet200Response) Set(val *NarrativesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableNarrativesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableNarrativesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNarrativesGet200Response(val *NarrativesGet200Response) *NullableNarrativesGet200Response {
	return &NullableNarrativesGet200Response{value: val, isSet: true}
}

func (v NullableNarrativesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNarrativesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


