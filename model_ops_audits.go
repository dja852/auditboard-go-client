/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the OpsAudits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpsAudits{}

// OpsAudits struct for OpsAudits
type OpsAudits struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	StartDate *string `json:"start_date,omitempty"`
	EndDate *string `json:"end_date,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_periods.id`.<fk table='ops_audit_periods' column='id'/>
	OpsAuditPeriodId *int32 `json:"ops_audit_period_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_categories.id`.<fk table='ops_audit_categories' column='id'/>
	OpsAuditCategoryId *int32 `json:"ops_audit_category_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	CreatorUserId *int32 `json:"creator_user_id,omitempty"`
	Title string `json:"title"`
	// Note: This is a Foreign Key to `ops_audit_risk_levels.id`.<fk table='ops_audit_risk_levels' column='id'/>
	OpsAuditRiskLevelId *int32 `json:"ops_audit_risk_level_id,omitempty"`
	Description *string `json:"description,omitempty"`
	IsTemplate bool `json:"is_template"`
	Status *string `json:"status,omitempty"`
	ArchivedDate *string `json:"archived_date,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ArchivedByUserId *int32 `json:"archived_by_user_id,omitempty"`
	Totals interface{} `json:"totals,omitempty"`
	SectionTotals interface{} `json:"section_totals,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	LeadUserId *int32 `json:"lead_user_id,omitempty"`
	ScopeStartDate *string `json:"scope_start_date,omitempty"`
	ScopeEndDate *string `json:"scope_end_date,omitempty"`
	Uid string `json:"uid"`
	StartedDate *string `json:"started_date,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	StartedByUserId *int32 `json:"started_by_user_id,omitempty"`
	CanceledDate *string `json:"canceled_date,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	CanceledByUserId *int32 `json:"canceled_by_user_id,omitempty"`
	RiskFactors *string `json:"risk_factors,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_custom_select1_options.id`.<fk table='ops_audit_custom_select1_options' column='id'/>
	OpsAuditCustomSelect1OptionId *int32 `json:"ops_audit_custom_select1_option_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_custom_select2_options.id`.<fk table='ops_audit_custom_select2_options' column='id'/>
	OpsAuditCustomSelect2OptionId *int32 `json:"ops_audit_custom_select2_option_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_custom_select3_options.id`.<fk table='ops_audit_custom_select3_options' column='id'/>
	OpsAuditCustomSelect3OptionId *int32 `json:"ops_audit_custom_select3_option_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_opinions.id`.<fk table='ops_audit_opinions' column='id'/>
	OpsAuditOpinionId *int32 `json:"ops_audit_opinion_id,omitempty"`
	SystemsReviewed *string `json:"systems_reviewed,omitempty"`
	Notes *string `json:"notes,omitempty"`
	CustomText1 *string `json:"custom_text1,omitempty"`
	CustomText2 *string `json:"custom_text2,omitempty"`
	ResultCustomText1 *string `json:"result_custom_text1,omitempty"`
	ResultCustomText2 *string `json:"result_custom_text2,omitempty"`
	ExecutiveSummary *string `json:"executive_summary,omitempty"`
	ResultFeedback *string `json:"result_feedback,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_result_custom_select1_options.id`.<fk table='ops_audit_result_custom_select1_options' column='id'/>
	OpsAuditResultCustomSelect1OptionId *int32 `json:"ops_audit_result_custom_select1_option_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_result_custom_select2_options.id`.<fk table='ops_audit_result_custom_select2_options' column='id'/>
	OpsAuditResultCustomSelect2OptionId *int32 `json:"ops_audit_result_custom_select2_option_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_result_custom_select3_options.id`.<fk table='ops_audit_result_custom_select3_options' column='id'/>
	OpsAuditResultCustomSelect3OptionId *int32 `json:"ops_audit_result_custom_select3_option_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_result_custom_select4_options.id`.<fk table='ops_audit_result_custom_select4_options' column='id'/>
	OpsAuditResultCustomSelect4OptionId *int32 `json:"ops_audit_result_custom_select4_option_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ProjectDirectorUserId *int32 `json:"project_director_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ProjectLeaderUserId *int32 `json:"project_leader_user_id,omitempty"`
	FinalReportDate *string `json:"final_report_date,omitempty"`
	EstimatedStartDate *string `json:"estimated_start_date,omitempty"`
	EstimatedEndDate *string `json:"estimated_end_date,omitempty"`
	PreparerUsers interface{} `json:"preparer_users,omitempty"`
	ReviewerUsers interface{} `json:"reviewer_users,omitempty"`
	SecondaryReviewerUsers interface{} `json:"secondary_reviewer_users,omitempty"`
	ProjectOptions interface{} `json:"project_options,omitempty"`
	OldBudgetHours *float32 `json:"old_budget_hours,omitempty"`
	CustomText3 *string `json:"custom_text3,omitempty"`
	OldActualHours *float32 `json:"old_actual_hours,omitempty"`
	OldInternalHours *float32 `json:"old_internal_hours,omitempty"`
	OldExternalHours *float32 `json:"old_external_hours,omitempty"`
	ClosingMeetingDate *string `json:"closing_meeting_date,omitempty"`
	OpsAuditCustomDate1 *string `json:"ops_audit_custom_date1,omitempty"`
	OpsAuditCustomDate2 *string `json:"ops_audit_custom_date2,omitempty"`
	OpsAuditCustomDate3 *string `json:"ops_audit_custom_date3,omitempty"`
	OpsAuditCustomDate4 *string `json:"ops_audit_custom_date4,omitempty"`
	OpsAuditCustomDate5 *string `json:"ops_audit_custom_date5,omitempty"`
	OpsAuditCustomDate6 *string `json:"ops_audit_custom_date6,omitempty"`
	CustomText4 *string `json:"custom_text4,omitempty"`
	CustomText5 *string `json:"custom_text5,omitempty"`
	ReactivatedDate *string `json:"reactivated_date,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ReactivatedByUserId *int32 `json:"reactivated_by_user_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_custom_select4_options.id`.<fk table='ops_audit_custom_select4_options' column='id'/>
	OpsAuditCustomSelect4OptionId *int32 `json:"ops_audit_custom_select4_option_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_custom_select5_options.id`.<fk table='ops_audit_custom_select5_options' column='id'/>
	OpsAuditCustomSelect5OptionId *int32 `json:"ops_audit_custom_select5_option_id,omitempty"`
	OpsAuditCustomDate7 *string `json:"ops_audit_custom_date7,omitempty"`
	OpsAuditCustomDate8 *string `json:"ops_audit_custom_date8,omitempty"`
	AdditionalOwnerUsers interface{} `json:"additional_owner_users,omitempty"`
	BusinessOwnerUsers interface{} `json:"business_owner_users,omitempty"`
	Scopes interface{} `json:"scopes"`
	CustomText6 *string `json:"custom_text6,omitempty"`
	CustomText7 *string `json:"custom_text7,omitempty"`
	CustomText8 *string `json:"custom_text8,omitempty"`
	CustomText9 *string `json:"custom_text9,omitempty"`
	CustomText10 *string `json:"custom_text10,omitempty"`
	CustomText11 *string `json:"custom_text11,omitempty"`
	FieldData interface{} `json:"field_data,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_audit_report_statuses.id`.<fk table='ops_audit_audit_report_statuses' column='id'/>
	OpsAuditAuditReportStatusId *int32 `json:"ops_audit_audit_report_status_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_team_responsibles.id`.<fk table='ops_audit_team_responsibles' column='id'/>
	OpsAuditTeamResponsibleId *int32 `json:"ops_audit_team_responsible_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_acps.id`.<fk table='ops_audit_acps' column='id'/>
	OpsAuditAcpId *int32 `json:"ops_audit_acp_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_other_ratings.id`.<fk table='ops_audit_other_ratings' column='id'/>
	OpsAuditOtherRatingId *int32 `json:"ops_audit_other_rating_id,omitempty"`
	// Note: This is a Foreign Key to `ops_audit_divisions.id`.<fk table='ops_audit_divisions' column='id'/>
	OpsAuditDivisionId *int32 `json:"ops_audit_division_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ProjectManagerUserId *int32 `json:"project_manager_user_id,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	ProjectCoordinatorUserId *int32 `json:"project_coordinator_user_id,omitempty"`
	Flattened interface{} `json:"flattened,omitempty"`
	IsFlattened *bool `json:"is_flattened,omitempty"`
	Purpose *string `json:"purpose,omitempty"`
	Scope *string `json:"scope,omitempty"`
	DraftReportDate *string `json:"draft_report_date,omitempty"`
	OpeningMeetingDate *string `json:"opening_meeting_date,omitempty"`
	FrameworkId *int32 `json:"framework_id,omitempty"`
	PlanningEndDate *string `json:"planning_end_date,omitempty"`
	FieldworkEndDate *string `json:"fieldwork_end_date,omitempty"`
	BudgetHours *float32 `json:"budget_hours,omitempty"`
	ActualHours *float32 `json:"actual_hours,omitempty"`
	ExternalHours *float32 `json:"external_hours,omitempty"`
	InternalHours *float32 `json:"internal_hours,omitempty"`
	// Note: This is a Foreign Key to `ops_audits.id`.<fk table='ops_audits' column='id'/>
	TemplateId *int32 `json:"template_id,omitempty"`
	IsProcessing bool `json:"is_processing"`
	// Note: This is a Foreign Key to `assessment_templates.id`.<fk table='assessment_templates' column='id'/>
	AssessmentTemplateId *int32 `json:"assessment_template_id,omitempty"`
	AllowedAssessableType *string `json:"allowed_assessable_type,omitempty"`
	IsRiskAssessmentEnabled bool `json:"is_risk_assessment_enabled"`
	// Note: This is a Foreign Key to `assessments.id`.<fk table='assessments' column='id'/>
	AssessmentId *int32 `json:"assessment_id,omitempty"`
	ProjectObjectives *string `json:"project_objectives,omitempty"`
	ProjectDrivers *string `json:"project_drivers,omitempty"`
	KeyMilestones *string `json:"key_milestones,omitempty"`
	PriorProjectKnowledge *string `json:"prior_project_knowledge,omitempty"`
	HighLevelScope *string `json:"high_level_scope,omitempty"`
	ScopingConsiderationsCompletionDate *string `json:"scoping_considerations_completion_date,omitempty"`
	ScopingConsiderationsLastUpdated *string `json:"scoping_considerations_last_updated,omitempty"`
	OpsAuditCustomDecimal1 *float32 `json:"ops_audit_custom_decimal1,omitempty"`
	OpsAuditCustomDecimal2 *float32 `json:"ops_audit_custom_decimal2,omitempty"`
	OpsAuditCustomDecimal3 *float32 `json:"ops_audit_custom_decimal3,omitempty"`
	OpsAuditCustomDecimal4 *float32 `json:"ops_audit_custom_decimal4,omitempty"`
	OpsAuditCustomDecimal5 *float32 `json:"ops_audit_custom_decimal5,omitempty"`
}

type _OpsAudits OpsAudits

// NewOpsAudits instantiates a new OpsAudits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsAudits(title string, isTemplate bool, uid string, scopes interface{}, isProcessing bool, isRiskAssessmentEnabled bool) *OpsAudits {
	this := OpsAudits{}
	this.Title = title
	this.IsTemplate = isTemplate
	this.Uid = uid
	this.Scopes = scopes
	var isFlattened bool = false
	this.IsFlattened = &isFlattened
	this.IsProcessing = isProcessing
	this.IsRiskAssessmentEnabled = isRiskAssessmentEnabled
	return &this
}

// NewOpsAuditsWithDefaults instantiates a new OpsAudits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsAuditsWithDefaults() *OpsAudits {
	this := OpsAudits{}
	var isTemplate bool = false
	this.IsTemplate = isTemplate
	var isFlattened bool = false
	this.IsFlattened = &isFlattened
	var isProcessing bool = false
	this.IsProcessing = isProcessing
	var isRiskAssessmentEnabled bool = false
	this.IsRiskAssessmentEnabled = isRiskAssessmentEnabled
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpsAudits) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpsAudits) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OpsAudits) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OpsAudits) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OpsAudits) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *OpsAudits) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OpsAudits) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OpsAudits) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *OpsAudits) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *OpsAudits) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *OpsAudits) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *OpsAudits) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *OpsAudits) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *OpsAudits) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *OpsAudits) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *OpsAudits) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *OpsAudits) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *OpsAudits) SetEndDate(v string) {
	o.EndDate = &v
}

// GetOpsAuditPeriodId returns the OpsAuditPeriodId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditPeriodId() int32 {
	if o == nil || IsNil(o.OpsAuditPeriodId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditPeriodId
}

// GetOpsAuditPeriodIdOk returns a tuple with the OpsAuditPeriodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditPeriodIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditPeriodId) {
		return nil, false
	}
	return o.OpsAuditPeriodId, true
}

// HasOpsAuditPeriodId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditPeriodId() bool {
	if o != nil && !IsNil(o.OpsAuditPeriodId) {
		return true
	}

	return false
}

// SetOpsAuditPeriodId gets a reference to the given int32 and assigns it to the OpsAuditPeriodId field.
func (o *OpsAudits) SetOpsAuditPeriodId(v int32) {
	o.OpsAuditPeriodId = &v
}

// GetOpsAuditCategoryId returns the OpsAuditCategoryId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCategoryId() int32 {
	if o == nil || IsNil(o.OpsAuditCategoryId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditCategoryId
}

// GetOpsAuditCategoryIdOk returns a tuple with the OpsAuditCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCategoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditCategoryId) {
		return nil, false
	}
	return o.OpsAuditCategoryId, true
}

// HasOpsAuditCategoryId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCategoryId() bool {
	if o != nil && !IsNil(o.OpsAuditCategoryId) {
		return true
	}

	return false
}

// SetOpsAuditCategoryId gets a reference to the given int32 and assigns it to the OpsAuditCategoryId field.
func (o *OpsAudits) SetOpsAuditCategoryId(v int32) {
	o.OpsAuditCategoryId = &v
}

// GetCreatorUserId returns the CreatorUserId field value if set, zero value otherwise.
func (o *OpsAudits) GetCreatorUserId() int32 {
	if o == nil || IsNil(o.CreatorUserId) {
		var ret int32
		return ret
	}
	return *o.CreatorUserId
}

// GetCreatorUserIdOk returns a tuple with the CreatorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCreatorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatorUserId) {
		return nil, false
	}
	return o.CreatorUserId, true
}

// HasCreatorUserId returns a boolean if a field has been set.
func (o *OpsAudits) HasCreatorUserId() bool {
	if o != nil && !IsNil(o.CreatorUserId) {
		return true
	}

	return false
}

// SetCreatorUserId gets a reference to the given int32 and assigns it to the CreatorUserId field.
func (o *OpsAudits) SetCreatorUserId(v int32) {
	o.CreatorUserId = &v
}

// GetTitle returns the Title field value
func (o *OpsAudits) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *OpsAudits) SetTitle(v string) {
	o.Title = v
}

// GetOpsAuditRiskLevelId returns the OpsAuditRiskLevelId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditRiskLevelId() int32 {
	if o == nil || IsNil(o.OpsAuditRiskLevelId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditRiskLevelId
}

// GetOpsAuditRiskLevelIdOk returns a tuple with the OpsAuditRiskLevelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditRiskLevelIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditRiskLevelId) {
		return nil, false
	}
	return o.OpsAuditRiskLevelId, true
}

// HasOpsAuditRiskLevelId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditRiskLevelId() bool {
	if o != nil && !IsNil(o.OpsAuditRiskLevelId) {
		return true
	}

	return false
}

// SetOpsAuditRiskLevelId gets a reference to the given int32 and assigns it to the OpsAuditRiskLevelId field.
func (o *OpsAudits) SetOpsAuditRiskLevelId(v int32) {
	o.OpsAuditRiskLevelId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OpsAudits) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OpsAudits) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OpsAudits) SetDescription(v string) {
	o.Description = &v
}

// GetIsTemplate returns the IsTemplate field value
func (o *OpsAudits) GetIsTemplate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsTemplate
}

// GetIsTemplateOk returns a tuple with the IsTemplate field value
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetIsTemplateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsTemplate, true
}

// SetIsTemplate sets field value
func (o *OpsAudits) SetIsTemplate(v bool) {
	o.IsTemplate = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OpsAudits) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OpsAudits) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OpsAudits) SetStatus(v string) {
	o.Status = &v
}

// GetArchivedDate returns the ArchivedDate field value if set, zero value otherwise.
func (o *OpsAudits) GetArchivedDate() string {
	if o == nil || IsNil(o.ArchivedDate) {
		var ret string
		return ret
	}
	return *o.ArchivedDate
}

// GetArchivedDateOk returns a tuple with the ArchivedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetArchivedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ArchivedDate) {
		return nil, false
	}
	return o.ArchivedDate, true
}

// HasArchivedDate returns a boolean if a field has been set.
func (o *OpsAudits) HasArchivedDate() bool {
	if o != nil && !IsNil(o.ArchivedDate) {
		return true
	}

	return false
}

// SetArchivedDate gets a reference to the given string and assigns it to the ArchivedDate field.
func (o *OpsAudits) SetArchivedDate(v string) {
	o.ArchivedDate = &v
}

// GetArchivedByUserId returns the ArchivedByUserId field value if set, zero value otherwise.
func (o *OpsAudits) GetArchivedByUserId() int32 {
	if o == nil || IsNil(o.ArchivedByUserId) {
		var ret int32
		return ret
	}
	return *o.ArchivedByUserId
}

// GetArchivedByUserIdOk returns a tuple with the ArchivedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetArchivedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ArchivedByUserId) {
		return nil, false
	}
	return o.ArchivedByUserId, true
}

// HasArchivedByUserId returns a boolean if a field has been set.
func (o *OpsAudits) HasArchivedByUserId() bool {
	if o != nil && !IsNil(o.ArchivedByUserId) {
		return true
	}

	return false
}

// SetArchivedByUserId gets a reference to the given int32 and assigns it to the ArchivedByUserId field.
func (o *OpsAudits) SetArchivedByUserId(v int32) {
	o.ArchivedByUserId = &v
}

// GetTotals returns the Totals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAudits) GetTotals() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Totals
}

// GetTotalsOk returns a tuple with the Totals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetTotalsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Totals) {
		return nil, false
	}
	return &o.Totals, true
}

// HasTotals returns a boolean if a field has been set.
func (o *OpsAudits) HasTotals() bool {
	if o != nil && !IsNil(o.Totals) {
		return true
	}

	return false
}

// SetTotals gets a reference to the given interface{} and assigns it to the Totals field.
func (o *OpsAudits) SetTotals(v interface{}) {
	o.Totals = v
}

// GetSectionTotals returns the SectionTotals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAudits) GetSectionTotals() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SectionTotals
}

// GetSectionTotalsOk returns a tuple with the SectionTotals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetSectionTotalsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SectionTotals) {
		return nil, false
	}
	return &o.SectionTotals, true
}

// HasSectionTotals returns a boolean if a field has been set.
func (o *OpsAudits) HasSectionTotals() bool {
	if o != nil && !IsNil(o.SectionTotals) {
		return true
	}

	return false
}

// SetSectionTotals gets a reference to the given interface{} and assigns it to the SectionTotals field.
func (o *OpsAudits) SetSectionTotals(v interface{}) {
	o.SectionTotals = v
}

// GetLeadUserId returns the LeadUserId field value if set, zero value otherwise.
func (o *OpsAudits) GetLeadUserId() int32 {
	if o == nil || IsNil(o.LeadUserId) {
		var ret int32
		return ret
	}
	return *o.LeadUserId
}

// GetLeadUserIdOk returns a tuple with the LeadUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetLeadUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LeadUserId) {
		return nil, false
	}
	return o.LeadUserId, true
}

// HasLeadUserId returns a boolean if a field has been set.
func (o *OpsAudits) HasLeadUserId() bool {
	if o != nil && !IsNil(o.LeadUserId) {
		return true
	}

	return false
}

// SetLeadUserId gets a reference to the given int32 and assigns it to the LeadUserId field.
func (o *OpsAudits) SetLeadUserId(v int32) {
	o.LeadUserId = &v
}

// GetScopeStartDate returns the ScopeStartDate field value if set, zero value otherwise.
func (o *OpsAudits) GetScopeStartDate() string {
	if o == nil || IsNil(o.ScopeStartDate) {
		var ret string
		return ret
	}
	return *o.ScopeStartDate
}

// GetScopeStartDateOk returns a tuple with the ScopeStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetScopeStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.ScopeStartDate) {
		return nil, false
	}
	return o.ScopeStartDate, true
}

// HasScopeStartDate returns a boolean if a field has been set.
func (o *OpsAudits) HasScopeStartDate() bool {
	if o != nil && !IsNil(o.ScopeStartDate) {
		return true
	}

	return false
}

// SetScopeStartDate gets a reference to the given string and assigns it to the ScopeStartDate field.
func (o *OpsAudits) SetScopeStartDate(v string) {
	o.ScopeStartDate = &v
}

// GetScopeEndDate returns the ScopeEndDate field value if set, zero value otherwise.
func (o *OpsAudits) GetScopeEndDate() string {
	if o == nil || IsNil(o.ScopeEndDate) {
		var ret string
		return ret
	}
	return *o.ScopeEndDate
}

// GetScopeEndDateOk returns a tuple with the ScopeEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetScopeEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.ScopeEndDate) {
		return nil, false
	}
	return o.ScopeEndDate, true
}

// HasScopeEndDate returns a boolean if a field has been set.
func (o *OpsAudits) HasScopeEndDate() bool {
	if o != nil && !IsNil(o.ScopeEndDate) {
		return true
	}

	return false
}

// SetScopeEndDate gets a reference to the given string and assigns it to the ScopeEndDate field.
func (o *OpsAudits) SetScopeEndDate(v string) {
	o.ScopeEndDate = &v
}

// GetUid returns the Uid field value
func (o *OpsAudits) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *OpsAudits) SetUid(v string) {
	o.Uid = v
}

// GetStartedDate returns the StartedDate field value if set, zero value otherwise.
func (o *OpsAudits) GetStartedDate() string {
	if o == nil || IsNil(o.StartedDate) {
		var ret string
		return ret
	}
	return *o.StartedDate
}

// GetStartedDateOk returns a tuple with the StartedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetStartedDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartedDate) {
		return nil, false
	}
	return o.StartedDate, true
}

// HasStartedDate returns a boolean if a field has been set.
func (o *OpsAudits) HasStartedDate() bool {
	if o != nil && !IsNil(o.StartedDate) {
		return true
	}

	return false
}

// SetStartedDate gets a reference to the given string and assigns it to the StartedDate field.
func (o *OpsAudits) SetStartedDate(v string) {
	o.StartedDate = &v
}

// GetStartedByUserId returns the StartedByUserId field value if set, zero value otherwise.
func (o *OpsAudits) GetStartedByUserId() int32 {
	if o == nil || IsNil(o.StartedByUserId) {
		var ret int32
		return ret
	}
	return *o.StartedByUserId
}

// GetStartedByUserIdOk returns a tuple with the StartedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetStartedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StartedByUserId) {
		return nil, false
	}
	return o.StartedByUserId, true
}

// HasStartedByUserId returns a boolean if a field has been set.
func (o *OpsAudits) HasStartedByUserId() bool {
	if o != nil && !IsNil(o.StartedByUserId) {
		return true
	}

	return false
}

// SetStartedByUserId gets a reference to the given int32 and assigns it to the StartedByUserId field.
func (o *OpsAudits) SetStartedByUserId(v int32) {
	o.StartedByUserId = &v
}

// GetCanceledDate returns the CanceledDate field value if set, zero value otherwise.
func (o *OpsAudits) GetCanceledDate() string {
	if o == nil || IsNil(o.CanceledDate) {
		var ret string
		return ret
	}
	return *o.CanceledDate
}

// GetCanceledDateOk returns a tuple with the CanceledDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCanceledDateOk() (*string, bool) {
	if o == nil || IsNil(o.CanceledDate) {
		return nil, false
	}
	return o.CanceledDate, true
}

// HasCanceledDate returns a boolean if a field has been set.
func (o *OpsAudits) HasCanceledDate() bool {
	if o != nil && !IsNil(o.CanceledDate) {
		return true
	}

	return false
}

// SetCanceledDate gets a reference to the given string and assigns it to the CanceledDate field.
func (o *OpsAudits) SetCanceledDate(v string) {
	o.CanceledDate = &v
}

// GetCanceledByUserId returns the CanceledByUserId field value if set, zero value otherwise.
func (o *OpsAudits) GetCanceledByUserId() int32 {
	if o == nil || IsNil(o.CanceledByUserId) {
		var ret int32
		return ret
	}
	return *o.CanceledByUserId
}

// GetCanceledByUserIdOk returns a tuple with the CanceledByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCanceledByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CanceledByUserId) {
		return nil, false
	}
	return o.CanceledByUserId, true
}

// HasCanceledByUserId returns a boolean if a field has been set.
func (o *OpsAudits) HasCanceledByUserId() bool {
	if o != nil && !IsNil(o.CanceledByUserId) {
		return true
	}

	return false
}

// SetCanceledByUserId gets a reference to the given int32 and assigns it to the CanceledByUserId field.
func (o *OpsAudits) SetCanceledByUserId(v int32) {
	o.CanceledByUserId = &v
}

// GetRiskFactors returns the RiskFactors field value if set, zero value otherwise.
func (o *OpsAudits) GetRiskFactors() string {
	if o == nil || IsNil(o.RiskFactors) {
		var ret string
		return ret
	}
	return *o.RiskFactors
}

// GetRiskFactorsOk returns a tuple with the RiskFactors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetRiskFactorsOk() (*string, bool) {
	if o == nil || IsNil(o.RiskFactors) {
		return nil, false
	}
	return o.RiskFactors, true
}

// HasRiskFactors returns a boolean if a field has been set.
func (o *OpsAudits) HasRiskFactors() bool {
	if o != nil && !IsNil(o.RiskFactors) {
		return true
	}

	return false
}

// SetRiskFactors gets a reference to the given string and assigns it to the RiskFactors field.
func (o *OpsAudits) SetRiskFactors(v string) {
	o.RiskFactors = &v
}

// GetOpsAuditCustomSelect1OptionId returns the OpsAuditCustomSelect1OptionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomSelect1OptionId() int32 {
	if o == nil || IsNil(o.OpsAuditCustomSelect1OptionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditCustomSelect1OptionId
}

// GetOpsAuditCustomSelect1OptionIdOk returns a tuple with the OpsAuditCustomSelect1OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomSelect1OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditCustomSelect1OptionId) {
		return nil, false
	}
	return o.OpsAuditCustomSelect1OptionId, true
}

// HasOpsAuditCustomSelect1OptionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomSelect1OptionId() bool {
	if o != nil && !IsNil(o.OpsAuditCustomSelect1OptionId) {
		return true
	}

	return false
}

// SetOpsAuditCustomSelect1OptionId gets a reference to the given int32 and assigns it to the OpsAuditCustomSelect1OptionId field.
func (o *OpsAudits) SetOpsAuditCustomSelect1OptionId(v int32) {
	o.OpsAuditCustomSelect1OptionId = &v
}

// GetOpsAuditCustomSelect2OptionId returns the OpsAuditCustomSelect2OptionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomSelect2OptionId() int32 {
	if o == nil || IsNil(o.OpsAuditCustomSelect2OptionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditCustomSelect2OptionId
}

// GetOpsAuditCustomSelect2OptionIdOk returns a tuple with the OpsAuditCustomSelect2OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomSelect2OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditCustomSelect2OptionId) {
		return nil, false
	}
	return o.OpsAuditCustomSelect2OptionId, true
}

// HasOpsAuditCustomSelect2OptionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomSelect2OptionId() bool {
	if o != nil && !IsNil(o.OpsAuditCustomSelect2OptionId) {
		return true
	}

	return false
}

// SetOpsAuditCustomSelect2OptionId gets a reference to the given int32 and assigns it to the OpsAuditCustomSelect2OptionId field.
func (o *OpsAudits) SetOpsAuditCustomSelect2OptionId(v int32) {
	o.OpsAuditCustomSelect2OptionId = &v
}

// GetOpsAuditCustomSelect3OptionId returns the OpsAuditCustomSelect3OptionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomSelect3OptionId() int32 {
	if o == nil || IsNil(o.OpsAuditCustomSelect3OptionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditCustomSelect3OptionId
}

// GetOpsAuditCustomSelect3OptionIdOk returns a tuple with the OpsAuditCustomSelect3OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomSelect3OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditCustomSelect3OptionId) {
		return nil, false
	}
	return o.OpsAuditCustomSelect3OptionId, true
}

// HasOpsAuditCustomSelect3OptionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomSelect3OptionId() bool {
	if o != nil && !IsNil(o.OpsAuditCustomSelect3OptionId) {
		return true
	}

	return false
}

// SetOpsAuditCustomSelect3OptionId gets a reference to the given int32 and assigns it to the OpsAuditCustomSelect3OptionId field.
func (o *OpsAudits) SetOpsAuditCustomSelect3OptionId(v int32) {
	o.OpsAuditCustomSelect3OptionId = &v
}

// GetOpsAuditOpinionId returns the OpsAuditOpinionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditOpinionId() int32 {
	if o == nil || IsNil(o.OpsAuditOpinionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditOpinionId
}

// GetOpsAuditOpinionIdOk returns a tuple with the OpsAuditOpinionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditOpinionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditOpinionId) {
		return nil, false
	}
	return o.OpsAuditOpinionId, true
}

// HasOpsAuditOpinionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditOpinionId() bool {
	if o != nil && !IsNil(o.OpsAuditOpinionId) {
		return true
	}

	return false
}

// SetOpsAuditOpinionId gets a reference to the given int32 and assigns it to the OpsAuditOpinionId field.
func (o *OpsAudits) SetOpsAuditOpinionId(v int32) {
	o.OpsAuditOpinionId = &v
}

// GetSystemsReviewed returns the SystemsReviewed field value if set, zero value otherwise.
func (o *OpsAudits) GetSystemsReviewed() string {
	if o == nil || IsNil(o.SystemsReviewed) {
		var ret string
		return ret
	}
	return *o.SystemsReviewed
}

// GetSystemsReviewedOk returns a tuple with the SystemsReviewed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetSystemsReviewedOk() (*string, bool) {
	if o == nil || IsNil(o.SystemsReviewed) {
		return nil, false
	}
	return o.SystemsReviewed, true
}

// HasSystemsReviewed returns a boolean if a field has been set.
func (o *OpsAudits) HasSystemsReviewed() bool {
	if o != nil && !IsNil(o.SystemsReviewed) {
		return true
	}

	return false
}

// SetSystemsReviewed gets a reference to the given string and assigns it to the SystemsReviewed field.
func (o *OpsAudits) SetSystemsReviewed(v string) {
	o.SystemsReviewed = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *OpsAudits) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *OpsAudits) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *OpsAudits) SetNotes(v string) {
	o.Notes = &v
}

// GetCustomText1 returns the CustomText1 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText1() string {
	if o == nil || IsNil(o.CustomText1) {
		var ret string
		return ret
	}
	return *o.CustomText1
}

// GetCustomText1Ok returns a tuple with the CustomText1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText1Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText1) {
		return nil, false
	}
	return o.CustomText1, true
}

// HasCustomText1 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText1() bool {
	if o != nil && !IsNil(o.CustomText1) {
		return true
	}

	return false
}

// SetCustomText1 gets a reference to the given string and assigns it to the CustomText1 field.
func (o *OpsAudits) SetCustomText1(v string) {
	o.CustomText1 = &v
}

// GetCustomText2 returns the CustomText2 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText2() string {
	if o == nil || IsNil(o.CustomText2) {
		var ret string
		return ret
	}
	return *o.CustomText2
}

// GetCustomText2Ok returns a tuple with the CustomText2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText2Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText2) {
		return nil, false
	}
	return o.CustomText2, true
}

// HasCustomText2 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText2() bool {
	if o != nil && !IsNil(o.CustomText2) {
		return true
	}

	return false
}

// SetCustomText2 gets a reference to the given string and assigns it to the CustomText2 field.
func (o *OpsAudits) SetCustomText2(v string) {
	o.CustomText2 = &v
}

// GetResultCustomText1 returns the ResultCustomText1 field value if set, zero value otherwise.
func (o *OpsAudits) GetResultCustomText1() string {
	if o == nil || IsNil(o.ResultCustomText1) {
		var ret string
		return ret
	}
	return *o.ResultCustomText1
}

// GetResultCustomText1Ok returns a tuple with the ResultCustomText1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetResultCustomText1Ok() (*string, bool) {
	if o == nil || IsNil(o.ResultCustomText1) {
		return nil, false
	}
	return o.ResultCustomText1, true
}

// HasResultCustomText1 returns a boolean if a field has been set.
func (o *OpsAudits) HasResultCustomText1() bool {
	if o != nil && !IsNil(o.ResultCustomText1) {
		return true
	}

	return false
}

// SetResultCustomText1 gets a reference to the given string and assigns it to the ResultCustomText1 field.
func (o *OpsAudits) SetResultCustomText1(v string) {
	o.ResultCustomText1 = &v
}

// GetResultCustomText2 returns the ResultCustomText2 field value if set, zero value otherwise.
func (o *OpsAudits) GetResultCustomText2() string {
	if o == nil || IsNil(o.ResultCustomText2) {
		var ret string
		return ret
	}
	return *o.ResultCustomText2
}

// GetResultCustomText2Ok returns a tuple with the ResultCustomText2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetResultCustomText2Ok() (*string, bool) {
	if o == nil || IsNil(o.ResultCustomText2) {
		return nil, false
	}
	return o.ResultCustomText2, true
}

// HasResultCustomText2 returns a boolean if a field has been set.
func (o *OpsAudits) HasResultCustomText2() bool {
	if o != nil && !IsNil(o.ResultCustomText2) {
		return true
	}

	return false
}

// SetResultCustomText2 gets a reference to the given string and assigns it to the ResultCustomText2 field.
func (o *OpsAudits) SetResultCustomText2(v string) {
	o.ResultCustomText2 = &v
}

// GetExecutiveSummary returns the ExecutiveSummary field value if set, zero value otherwise.
func (o *OpsAudits) GetExecutiveSummary() string {
	if o == nil || IsNil(o.ExecutiveSummary) {
		var ret string
		return ret
	}
	return *o.ExecutiveSummary
}

// GetExecutiveSummaryOk returns a tuple with the ExecutiveSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetExecutiveSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutiveSummary) {
		return nil, false
	}
	return o.ExecutiveSummary, true
}

// HasExecutiveSummary returns a boolean if a field has been set.
func (o *OpsAudits) HasExecutiveSummary() bool {
	if o != nil && !IsNil(o.ExecutiveSummary) {
		return true
	}

	return false
}

// SetExecutiveSummary gets a reference to the given string and assigns it to the ExecutiveSummary field.
func (o *OpsAudits) SetExecutiveSummary(v string) {
	o.ExecutiveSummary = &v
}

// GetResultFeedback returns the ResultFeedback field value if set, zero value otherwise.
func (o *OpsAudits) GetResultFeedback() string {
	if o == nil || IsNil(o.ResultFeedback) {
		var ret string
		return ret
	}
	return *o.ResultFeedback
}

// GetResultFeedbackOk returns a tuple with the ResultFeedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetResultFeedbackOk() (*string, bool) {
	if o == nil || IsNil(o.ResultFeedback) {
		return nil, false
	}
	return o.ResultFeedback, true
}

// HasResultFeedback returns a boolean if a field has been set.
func (o *OpsAudits) HasResultFeedback() bool {
	if o != nil && !IsNil(o.ResultFeedback) {
		return true
	}

	return false
}

// SetResultFeedback gets a reference to the given string and assigns it to the ResultFeedback field.
func (o *OpsAudits) SetResultFeedback(v string) {
	o.ResultFeedback = &v
}

// GetOpsAuditResultCustomSelect1OptionId returns the OpsAuditResultCustomSelect1OptionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditResultCustomSelect1OptionId() int32 {
	if o == nil || IsNil(o.OpsAuditResultCustomSelect1OptionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditResultCustomSelect1OptionId
}

// GetOpsAuditResultCustomSelect1OptionIdOk returns a tuple with the OpsAuditResultCustomSelect1OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditResultCustomSelect1OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditResultCustomSelect1OptionId) {
		return nil, false
	}
	return o.OpsAuditResultCustomSelect1OptionId, true
}

// HasOpsAuditResultCustomSelect1OptionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditResultCustomSelect1OptionId() bool {
	if o != nil && !IsNil(o.OpsAuditResultCustomSelect1OptionId) {
		return true
	}

	return false
}

// SetOpsAuditResultCustomSelect1OptionId gets a reference to the given int32 and assigns it to the OpsAuditResultCustomSelect1OptionId field.
func (o *OpsAudits) SetOpsAuditResultCustomSelect1OptionId(v int32) {
	o.OpsAuditResultCustomSelect1OptionId = &v
}

// GetOpsAuditResultCustomSelect2OptionId returns the OpsAuditResultCustomSelect2OptionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditResultCustomSelect2OptionId() int32 {
	if o == nil || IsNil(o.OpsAuditResultCustomSelect2OptionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditResultCustomSelect2OptionId
}

// GetOpsAuditResultCustomSelect2OptionIdOk returns a tuple with the OpsAuditResultCustomSelect2OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditResultCustomSelect2OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditResultCustomSelect2OptionId) {
		return nil, false
	}
	return o.OpsAuditResultCustomSelect2OptionId, true
}

// HasOpsAuditResultCustomSelect2OptionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditResultCustomSelect2OptionId() bool {
	if o != nil && !IsNil(o.OpsAuditResultCustomSelect2OptionId) {
		return true
	}

	return false
}

// SetOpsAuditResultCustomSelect2OptionId gets a reference to the given int32 and assigns it to the OpsAuditResultCustomSelect2OptionId field.
func (o *OpsAudits) SetOpsAuditResultCustomSelect2OptionId(v int32) {
	o.OpsAuditResultCustomSelect2OptionId = &v
}

// GetOpsAuditResultCustomSelect3OptionId returns the OpsAuditResultCustomSelect3OptionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditResultCustomSelect3OptionId() int32 {
	if o == nil || IsNil(o.OpsAuditResultCustomSelect3OptionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditResultCustomSelect3OptionId
}

// GetOpsAuditResultCustomSelect3OptionIdOk returns a tuple with the OpsAuditResultCustomSelect3OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditResultCustomSelect3OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditResultCustomSelect3OptionId) {
		return nil, false
	}
	return o.OpsAuditResultCustomSelect3OptionId, true
}

// HasOpsAuditResultCustomSelect3OptionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditResultCustomSelect3OptionId() bool {
	if o != nil && !IsNil(o.OpsAuditResultCustomSelect3OptionId) {
		return true
	}

	return false
}

// SetOpsAuditResultCustomSelect3OptionId gets a reference to the given int32 and assigns it to the OpsAuditResultCustomSelect3OptionId field.
func (o *OpsAudits) SetOpsAuditResultCustomSelect3OptionId(v int32) {
	o.OpsAuditResultCustomSelect3OptionId = &v
}

// GetOpsAuditResultCustomSelect4OptionId returns the OpsAuditResultCustomSelect4OptionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditResultCustomSelect4OptionId() int32 {
	if o == nil || IsNil(o.OpsAuditResultCustomSelect4OptionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditResultCustomSelect4OptionId
}

// GetOpsAuditResultCustomSelect4OptionIdOk returns a tuple with the OpsAuditResultCustomSelect4OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditResultCustomSelect4OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditResultCustomSelect4OptionId) {
		return nil, false
	}
	return o.OpsAuditResultCustomSelect4OptionId, true
}

// HasOpsAuditResultCustomSelect4OptionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditResultCustomSelect4OptionId() bool {
	if o != nil && !IsNil(o.OpsAuditResultCustomSelect4OptionId) {
		return true
	}

	return false
}

// SetOpsAuditResultCustomSelect4OptionId gets a reference to the given int32 and assigns it to the OpsAuditResultCustomSelect4OptionId field.
func (o *OpsAudits) SetOpsAuditResultCustomSelect4OptionId(v int32) {
	o.OpsAuditResultCustomSelect4OptionId = &v
}

// GetProjectDirectorUserId returns the ProjectDirectorUserId field value if set, zero value otherwise.
func (o *OpsAudits) GetProjectDirectorUserId() int32 {
	if o == nil || IsNil(o.ProjectDirectorUserId) {
		var ret int32
		return ret
	}
	return *o.ProjectDirectorUserId
}

// GetProjectDirectorUserIdOk returns a tuple with the ProjectDirectorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetProjectDirectorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectDirectorUserId) {
		return nil, false
	}
	return o.ProjectDirectorUserId, true
}

// HasProjectDirectorUserId returns a boolean if a field has been set.
func (o *OpsAudits) HasProjectDirectorUserId() bool {
	if o != nil && !IsNil(o.ProjectDirectorUserId) {
		return true
	}

	return false
}

// SetProjectDirectorUserId gets a reference to the given int32 and assigns it to the ProjectDirectorUserId field.
func (o *OpsAudits) SetProjectDirectorUserId(v int32) {
	o.ProjectDirectorUserId = &v
}

// GetProjectLeaderUserId returns the ProjectLeaderUserId field value if set, zero value otherwise.
func (o *OpsAudits) GetProjectLeaderUserId() int32 {
	if o == nil || IsNil(o.ProjectLeaderUserId) {
		var ret int32
		return ret
	}
	return *o.ProjectLeaderUserId
}

// GetProjectLeaderUserIdOk returns a tuple with the ProjectLeaderUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetProjectLeaderUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectLeaderUserId) {
		return nil, false
	}
	return o.ProjectLeaderUserId, true
}

// HasProjectLeaderUserId returns a boolean if a field has been set.
func (o *OpsAudits) HasProjectLeaderUserId() bool {
	if o != nil && !IsNil(o.ProjectLeaderUserId) {
		return true
	}

	return false
}

// SetProjectLeaderUserId gets a reference to the given int32 and assigns it to the ProjectLeaderUserId field.
func (o *OpsAudits) SetProjectLeaderUserId(v int32) {
	o.ProjectLeaderUserId = &v
}

// GetFinalReportDate returns the FinalReportDate field value if set, zero value otherwise.
func (o *OpsAudits) GetFinalReportDate() string {
	if o == nil || IsNil(o.FinalReportDate) {
		var ret string
		return ret
	}
	return *o.FinalReportDate
}

// GetFinalReportDateOk returns a tuple with the FinalReportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetFinalReportDateOk() (*string, bool) {
	if o == nil || IsNil(o.FinalReportDate) {
		return nil, false
	}
	return o.FinalReportDate, true
}

// HasFinalReportDate returns a boolean if a field has been set.
func (o *OpsAudits) HasFinalReportDate() bool {
	if o != nil && !IsNil(o.FinalReportDate) {
		return true
	}

	return false
}

// SetFinalReportDate gets a reference to the given string and assigns it to the FinalReportDate field.
func (o *OpsAudits) SetFinalReportDate(v string) {
	o.FinalReportDate = &v
}

// GetEstimatedStartDate returns the EstimatedStartDate field value if set, zero value otherwise.
func (o *OpsAudits) GetEstimatedStartDate() string {
	if o == nil || IsNil(o.EstimatedStartDate) {
		var ret string
		return ret
	}
	return *o.EstimatedStartDate
}

// GetEstimatedStartDateOk returns a tuple with the EstimatedStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetEstimatedStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.EstimatedStartDate) {
		return nil, false
	}
	return o.EstimatedStartDate, true
}

// HasEstimatedStartDate returns a boolean if a field has been set.
func (o *OpsAudits) HasEstimatedStartDate() bool {
	if o != nil && !IsNil(o.EstimatedStartDate) {
		return true
	}

	return false
}

// SetEstimatedStartDate gets a reference to the given string and assigns it to the EstimatedStartDate field.
func (o *OpsAudits) SetEstimatedStartDate(v string) {
	o.EstimatedStartDate = &v
}

// GetEstimatedEndDate returns the EstimatedEndDate field value if set, zero value otherwise.
func (o *OpsAudits) GetEstimatedEndDate() string {
	if o == nil || IsNil(o.EstimatedEndDate) {
		var ret string
		return ret
	}
	return *o.EstimatedEndDate
}

// GetEstimatedEndDateOk returns a tuple with the EstimatedEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetEstimatedEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EstimatedEndDate) {
		return nil, false
	}
	return o.EstimatedEndDate, true
}

// HasEstimatedEndDate returns a boolean if a field has been set.
func (o *OpsAudits) HasEstimatedEndDate() bool {
	if o != nil && !IsNil(o.EstimatedEndDate) {
		return true
	}

	return false
}

// SetEstimatedEndDate gets a reference to the given string and assigns it to the EstimatedEndDate field.
func (o *OpsAudits) SetEstimatedEndDate(v string) {
	o.EstimatedEndDate = &v
}

// GetPreparerUsers returns the PreparerUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAudits) GetPreparerUsers() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PreparerUsers
}

// GetPreparerUsersOk returns a tuple with the PreparerUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetPreparerUsersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PreparerUsers) {
		return nil, false
	}
	return &o.PreparerUsers, true
}

// HasPreparerUsers returns a boolean if a field has been set.
func (o *OpsAudits) HasPreparerUsers() bool {
	if o != nil && !IsNil(o.PreparerUsers) {
		return true
	}

	return false
}

// SetPreparerUsers gets a reference to the given interface{} and assigns it to the PreparerUsers field.
func (o *OpsAudits) SetPreparerUsers(v interface{}) {
	o.PreparerUsers = v
}

// GetReviewerUsers returns the ReviewerUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAudits) GetReviewerUsers() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReviewerUsers
}

// GetReviewerUsersOk returns a tuple with the ReviewerUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetReviewerUsersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReviewerUsers) {
		return nil, false
	}
	return &o.ReviewerUsers, true
}

// HasReviewerUsers returns a boolean if a field has been set.
func (o *OpsAudits) HasReviewerUsers() bool {
	if o != nil && !IsNil(o.ReviewerUsers) {
		return true
	}

	return false
}

// SetReviewerUsers gets a reference to the given interface{} and assigns it to the ReviewerUsers field.
func (o *OpsAudits) SetReviewerUsers(v interface{}) {
	o.ReviewerUsers = v
}

// GetSecondaryReviewerUsers returns the SecondaryReviewerUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAudits) GetSecondaryReviewerUsers() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SecondaryReviewerUsers
}

// GetSecondaryReviewerUsersOk returns a tuple with the SecondaryReviewerUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetSecondaryReviewerUsersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SecondaryReviewerUsers) {
		return nil, false
	}
	return &o.SecondaryReviewerUsers, true
}

// HasSecondaryReviewerUsers returns a boolean if a field has been set.
func (o *OpsAudits) HasSecondaryReviewerUsers() bool {
	if o != nil && !IsNil(o.SecondaryReviewerUsers) {
		return true
	}

	return false
}

// SetSecondaryReviewerUsers gets a reference to the given interface{} and assigns it to the SecondaryReviewerUsers field.
func (o *OpsAudits) SetSecondaryReviewerUsers(v interface{}) {
	o.SecondaryReviewerUsers = v
}

// GetProjectOptions returns the ProjectOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAudits) GetProjectOptions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ProjectOptions
}

// GetProjectOptionsOk returns a tuple with the ProjectOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetProjectOptionsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ProjectOptions) {
		return nil, false
	}
	return &o.ProjectOptions, true
}

// HasProjectOptions returns a boolean if a field has been set.
func (o *OpsAudits) HasProjectOptions() bool {
	if o != nil && !IsNil(o.ProjectOptions) {
		return true
	}

	return false
}

// SetProjectOptions gets a reference to the given interface{} and assigns it to the ProjectOptions field.
func (o *OpsAudits) SetProjectOptions(v interface{}) {
	o.ProjectOptions = v
}

// GetOldBudgetHours returns the OldBudgetHours field value if set, zero value otherwise.
func (o *OpsAudits) GetOldBudgetHours() float32 {
	if o == nil || IsNil(o.OldBudgetHours) {
		var ret float32
		return ret
	}
	return *o.OldBudgetHours
}

// GetOldBudgetHoursOk returns a tuple with the OldBudgetHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOldBudgetHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.OldBudgetHours) {
		return nil, false
	}
	return o.OldBudgetHours, true
}

// HasOldBudgetHours returns a boolean if a field has been set.
func (o *OpsAudits) HasOldBudgetHours() bool {
	if o != nil && !IsNil(o.OldBudgetHours) {
		return true
	}

	return false
}

// SetOldBudgetHours gets a reference to the given float32 and assigns it to the OldBudgetHours field.
func (o *OpsAudits) SetOldBudgetHours(v float32) {
	o.OldBudgetHours = &v
}

// GetCustomText3 returns the CustomText3 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText3() string {
	if o == nil || IsNil(o.CustomText3) {
		var ret string
		return ret
	}
	return *o.CustomText3
}

// GetCustomText3Ok returns a tuple with the CustomText3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText3Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText3) {
		return nil, false
	}
	return o.CustomText3, true
}

// HasCustomText3 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText3() bool {
	if o != nil && !IsNil(o.CustomText3) {
		return true
	}

	return false
}

// SetCustomText3 gets a reference to the given string and assigns it to the CustomText3 field.
func (o *OpsAudits) SetCustomText3(v string) {
	o.CustomText3 = &v
}

// GetOldActualHours returns the OldActualHours field value if set, zero value otherwise.
func (o *OpsAudits) GetOldActualHours() float32 {
	if o == nil || IsNil(o.OldActualHours) {
		var ret float32
		return ret
	}
	return *o.OldActualHours
}

// GetOldActualHoursOk returns a tuple with the OldActualHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOldActualHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.OldActualHours) {
		return nil, false
	}
	return o.OldActualHours, true
}

// HasOldActualHours returns a boolean if a field has been set.
func (o *OpsAudits) HasOldActualHours() bool {
	if o != nil && !IsNil(o.OldActualHours) {
		return true
	}

	return false
}

// SetOldActualHours gets a reference to the given float32 and assigns it to the OldActualHours field.
func (o *OpsAudits) SetOldActualHours(v float32) {
	o.OldActualHours = &v
}

// GetOldInternalHours returns the OldInternalHours field value if set, zero value otherwise.
func (o *OpsAudits) GetOldInternalHours() float32 {
	if o == nil || IsNil(o.OldInternalHours) {
		var ret float32
		return ret
	}
	return *o.OldInternalHours
}

// GetOldInternalHoursOk returns a tuple with the OldInternalHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOldInternalHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.OldInternalHours) {
		return nil, false
	}
	return o.OldInternalHours, true
}

// HasOldInternalHours returns a boolean if a field has been set.
func (o *OpsAudits) HasOldInternalHours() bool {
	if o != nil && !IsNil(o.OldInternalHours) {
		return true
	}

	return false
}

// SetOldInternalHours gets a reference to the given float32 and assigns it to the OldInternalHours field.
func (o *OpsAudits) SetOldInternalHours(v float32) {
	o.OldInternalHours = &v
}

// GetOldExternalHours returns the OldExternalHours field value if set, zero value otherwise.
func (o *OpsAudits) GetOldExternalHours() float32 {
	if o == nil || IsNil(o.OldExternalHours) {
		var ret float32
		return ret
	}
	return *o.OldExternalHours
}

// GetOldExternalHoursOk returns a tuple with the OldExternalHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOldExternalHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.OldExternalHours) {
		return nil, false
	}
	return o.OldExternalHours, true
}

// HasOldExternalHours returns a boolean if a field has been set.
func (o *OpsAudits) HasOldExternalHours() bool {
	if o != nil && !IsNil(o.OldExternalHours) {
		return true
	}

	return false
}

// SetOldExternalHours gets a reference to the given float32 and assigns it to the OldExternalHours field.
func (o *OpsAudits) SetOldExternalHours(v float32) {
	o.OldExternalHours = &v
}

// GetClosingMeetingDate returns the ClosingMeetingDate field value if set, zero value otherwise.
func (o *OpsAudits) GetClosingMeetingDate() string {
	if o == nil || IsNil(o.ClosingMeetingDate) {
		var ret string
		return ret
	}
	return *o.ClosingMeetingDate
}

// GetClosingMeetingDateOk returns a tuple with the ClosingMeetingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetClosingMeetingDateOk() (*string, bool) {
	if o == nil || IsNil(o.ClosingMeetingDate) {
		return nil, false
	}
	return o.ClosingMeetingDate, true
}

// HasClosingMeetingDate returns a boolean if a field has been set.
func (o *OpsAudits) HasClosingMeetingDate() bool {
	if o != nil && !IsNil(o.ClosingMeetingDate) {
		return true
	}

	return false
}

// SetClosingMeetingDate gets a reference to the given string and assigns it to the ClosingMeetingDate field.
func (o *OpsAudits) SetClosingMeetingDate(v string) {
	o.ClosingMeetingDate = &v
}

// GetOpsAuditCustomDate1 returns the OpsAuditCustomDate1 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDate1() string {
	if o == nil || IsNil(o.OpsAuditCustomDate1) {
		var ret string
		return ret
	}
	return *o.OpsAuditCustomDate1
}

// GetOpsAuditCustomDate1Ok returns a tuple with the OpsAuditCustomDate1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDate1Ok() (*string, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDate1) {
		return nil, false
	}
	return o.OpsAuditCustomDate1, true
}

// HasOpsAuditCustomDate1 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDate1() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDate1) {
		return true
	}

	return false
}

// SetOpsAuditCustomDate1 gets a reference to the given string and assigns it to the OpsAuditCustomDate1 field.
func (o *OpsAudits) SetOpsAuditCustomDate1(v string) {
	o.OpsAuditCustomDate1 = &v
}

// GetOpsAuditCustomDate2 returns the OpsAuditCustomDate2 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDate2() string {
	if o == nil || IsNil(o.OpsAuditCustomDate2) {
		var ret string
		return ret
	}
	return *o.OpsAuditCustomDate2
}

// GetOpsAuditCustomDate2Ok returns a tuple with the OpsAuditCustomDate2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDate2Ok() (*string, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDate2) {
		return nil, false
	}
	return o.OpsAuditCustomDate2, true
}

// HasOpsAuditCustomDate2 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDate2() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDate2) {
		return true
	}

	return false
}

// SetOpsAuditCustomDate2 gets a reference to the given string and assigns it to the OpsAuditCustomDate2 field.
func (o *OpsAudits) SetOpsAuditCustomDate2(v string) {
	o.OpsAuditCustomDate2 = &v
}

// GetOpsAuditCustomDate3 returns the OpsAuditCustomDate3 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDate3() string {
	if o == nil || IsNil(o.OpsAuditCustomDate3) {
		var ret string
		return ret
	}
	return *o.OpsAuditCustomDate3
}

// GetOpsAuditCustomDate3Ok returns a tuple with the OpsAuditCustomDate3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDate3Ok() (*string, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDate3) {
		return nil, false
	}
	return o.OpsAuditCustomDate3, true
}

// HasOpsAuditCustomDate3 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDate3() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDate3) {
		return true
	}

	return false
}

// SetOpsAuditCustomDate3 gets a reference to the given string and assigns it to the OpsAuditCustomDate3 field.
func (o *OpsAudits) SetOpsAuditCustomDate3(v string) {
	o.OpsAuditCustomDate3 = &v
}

// GetOpsAuditCustomDate4 returns the OpsAuditCustomDate4 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDate4() string {
	if o == nil || IsNil(o.OpsAuditCustomDate4) {
		var ret string
		return ret
	}
	return *o.OpsAuditCustomDate4
}

// GetOpsAuditCustomDate4Ok returns a tuple with the OpsAuditCustomDate4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDate4Ok() (*string, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDate4) {
		return nil, false
	}
	return o.OpsAuditCustomDate4, true
}

// HasOpsAuditCustomDate4 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDate4() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDate4) {
		return true
	}

	return false
}

// SetOpsAuditCustomDate4 gets a reference to the given string and assigns it to the OpsAuditCustomDate4 field.
func (o *OpsAudits) SetOpsAuditCustomDate4(v string) {
	o.OpsAuditCustomDate4 = &v
}

// GetOpsAuditCustomDate5 returns the OpsAuditCustomDate5 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDate5() string {
	if o == nil || IsNil(o.OpsAuditCustomDate5) {
		var ret string
		return ret
	}
	return *o.OpsAuditCustomDate5
}

// GetOpsAuditCustomDate5Ok returns a tuple with the OpsAuditCustomDate5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDate5Ok() (*string, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDate5) {
		return nil, false
	}
	return o.OpsAuditCustomDate5, true
}

// HasOpsAuditCustomDate5 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDate5() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDate5) {
		return true
	}

	return false
}

// SetOpsAuditCustomDate5 gets a reference to the given string and assigns it to the OpsAuditCustomDate5 field.
func (o *OpsAudits) SetOpsAuditCustomDate5(v string) {
	o.OpsAuditCustomDate5 = &v
}

// GetOpsAuditCustomDate6 returns the OpsAuditCustomDate6 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDate6() string {
	if o == nil || IsNil(o.OpsAuditCustomDate6) {
		var ret string
		return ret
	}
	return *o.OpsAuditCustomDate6
}

// GetOpsAuditCustomDate6Ok returns a tuple with the OpsAuditCustomDate6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDate6Ok() (*string, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDate6) {
		return nil, false
	}
	return o.OpsAuditCustomDate6, true
}

// HasOpsAuditCustomDate6 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDate6() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDate6) {
		return true
	}

	return false
}

// SetOpsAuditCustomDate6 gets a reference to the given string and assigns it to the OpsAuditCustomDate6 field.
func (o *OpsAudits) SetOpsAuditCustomDate6(v string) {
	o.OpsAuditCustomDate6 = &v
}

// GetCustomText4 returns the CustomText4 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText4() string {
	if o == nil || IsNil(o.CustomText4) {
		var ret string
		return ret
	}
	return *o.CustomText4
}

// GetCustomText4Ok returns a tuple with the CustomText4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText4Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText4) {
		return nil, false
	}
	return o.CustomText4, true
}

// HasCustomText4 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText4() bool {
	if o != nil && !IsNil(o.CustomText4) {
		return true
	}

	return false
}

// SetCustomText4 gets a reference to the given string and assigns it to the CustomText4 field.
func (o *OpsAudits) SetCustomText4(v string) {
	o.CustomText4 = &v
}

// GetCustomText5 returns the CustomText5 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText5() string {
	if o == nil || IsNil(o.CustomText5) {
		var ret string
		return ret
	}
	return *o.CustomText5
}

// GetCustomText5Ok returns a tuple with the CustomText5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText5Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText5) {
		return nil, false
	}
	return o.CustomText5, true
}

// HasCustomText5 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText5() bool {
	if o != nil && !IsNil(o.CustomText5) {
		return true
	}

	return false
}

// SetCustomText5 gets a reference to the given string and assigns it to the CustomText5 field.
func (o *OpsAudits) SetCustomText5(v string) {
	o.CustomText5 = &v
}

// GetReactivatedDate returns the ReactivatedDate field value if set, zero value otherwise.
func (o *OpsAudits) GetReactivatedDate() string {
	if o == nil || IsNil(o.ReactivatedDate) {
		var ret string
		return ret
	}
	return *o.ReactivatedDate
}

// GetReactivatedDateOk returns a tuple with the ReactivatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetReactivatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReactivatedDate) {
		return nil, false
	}
	return o.ReactivatedDate, true
}

// HasReactivatedDate returns a boolean if a field has been set.
func (o *OpsAudits) HasReactivatedDate() bool {
	if o != nil && !IsNil(o.ReactivatedDate) {
		return true
	}

	return false
}

// SetReactivatedDate gets a reference to the given string and assigns it to the ReactivatedDate field.
func (o *OpsAudits) SetReactivatedDate(v string) {
	o.ReactivatedDate = &v
}

// GetReactivatedByUserId returns the ReactivatedByUserId field value if set, zero value otherwise.
func (o *OpsAudits) GetReactivatedByUserId() int32 {
	if o == nil || IsNil(o.ReactivatedByUserId) {
		var ret int32
		return ret
	}
	return *o.ReactivatedByUserId
}

// GetReactivatedByUserIdOk returns a tuple with the ReactivatedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetReactivatedByUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReactivatedByUserId) {
		return nil, false
	}
	return o.ReactivatedByUserId, true
}

// HasReactivatedByUserId returns a boolean if a field has been set.
func (o *OpsAudits) HasReactivatedByUserId() bool {
	if o != nil && !IsNil(o.ReactivatedByUserId) {
		return true
	}

	return false
}

// SetReactivatedByUserId gets a reference to the given int32 and assigns it to the ReactivatedByUserId field.
func (o *OpsAudits) SetReactivatedByUserId(v int32) {
	o.ReactivatedByUserId = &v
}

// GetOpsAuditCustomSelect4OptionId returns the OpsAuditCustomSelect4OptionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomSelect4OptionId() int32 {
	if o == nil || IsNil(o.OpsAuditCustomSelect4OptionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditCustomSelect4OptionId
}

// GetOpsAuditCustomSelect4OptionIdOk returns a tuple with the OpsAuditCustomSelect4OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomSelect4OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditCustomSelect4OptionId) {
		return nil, false
	}
	return o.OpsAuditCustomSelect4OptionId, true
}

// HasOpsAuditCustomSelect4OptionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomSelect4OptionId() bool {
	if o != nil && !IsNil(o.OpsAuditCustomSelect4OptionId) {
		return true
	}

	return false
}

// SetOpsAuditCustomSelect4OptionId gets a reference to the given int32 and assigns it to the OpsAuditCustomSelect4OptionId field.
func (o *OpsAudits) SetOpsAuditCustomSelect4OptionId(v int32) {
	o.OpsAuditCustomSelect4OptionId = &v
}

// GetOpsAuditCustomSelect5OptionId returns the OpsAuditCustomSelect5OptionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomSelect5OptionId() int32 {
	if o == nil || IsNil(o.OpsAuditCustomSelect5OptionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditCustomSelect5OptionId
}

// GetOpsAuditCustomSelect5OptionIdOk returns a tuple with the OpsAuditCustomSelect5OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomSelect5OptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditCustomSelect5OptionId) {
		return nil, false
	}
	return o.OpsAuditCustomSelect5OptionId, true
}

// HasOpsAuditCustomSelect5OptionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomSelect5OptionId() bool {
	if o != nil && !IsNil(o.OpsAuditCustomSelect5OptionId) {
		return true
	}

	return false
}

// SetOpsAuditCustomSelect5OptionId gets a reference to the given int32 and assigns it to the OpsAuditCustomSelect5OptionId field.
func (o *OpsAudits) SetOpsAuditCustomSelect5OptionId(v int32) {
	o.OpsAuditCustomSelect5OptionId = &v
}

// GetOpsAuditCustomDate7 returns the OpsAuditCustomDate7 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDate7() string {
	if o == nil || IsNil(o.OpsAuditCustomDate7) {
		var ret string
		return ret
	}
	return *o.OpsAuditCustomDate7
}

// GetOpsAuditCustomDate7Ok returns a tuple with the OpsAuditCustomDate7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDate7Ok() (*string, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDate7) {
		return nil, false
	}
	return o.OpsAuditCustomDate7, true
}

// HasOpsAuditCustomDate7 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDate7() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDate7) {
		return true
	}

	return false
}

// SetOpsAuditCustomDate7 gets a reference to the given string and assigns it to the OpsAuditCustomDate7 field.
func (o *OpsAudits) SetOpsAuditCustomDate7(v string) {
	o.OpsAuditCustomDate7 = &v
}

// GetOpsAuditCustomDate8 returns the OpsAuditCustomDate8 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDate8() string {
	if o == nil || IsNil(o.OpsAuditCustomDate8) {
		var ret string
		return ret
	}
	return *o.OpsAuditCustomDate8
}

// GetOpsAuditCustomDate8Ok returns a tuple with the OpsAuditCustomDate8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDate8Ok() (*string, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDate8) {
		return nil, false
	}
	return o.OpsAuditCustomDate8, true
}

// HasOpsAuditCustomDate8 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDate8() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDate8) {
		return true
	}

	return false
}

// SetOpsAuditCustomDate8 gets a reference to the given string and assigns it to the OpsAuditCustomDate8 field.
func (o *OpsAudits) SetOpsAuditCustomDate8(v string) {
	o.OpsAuditCustomDate8 = &v
}

// GetAdditionalOwnerUsers returns the AdditionalOwnerUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAudits) GetAdditionalOwnerUsers() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AdditionalOwnerUsers
}

// GetAdditionalOwnerUsersOk returns a tuple with the AdditionalOwnerUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetAdditionalOwnerUsersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AdditionalOwnerUsers) {
		return nil, false
	}
	return &o.AdditionalOwnerUsers, true
}

// HasAdditionalOwnerUsers returns a boolean if a field has been set.
func (o *OpsAudits) HasAdditionalOwnerUsers() bool {
	if o != nil && !IsNil(o.AdditionalOwnerUsers) {
		return true
	}

	return false
}

// SetAdditionalOwnerUsers gets a reference to the given interface{} and assigns it to the AdditionalOwnerUsers field.
func (o *OpsAudits) SetAdditionalOwnerUsers(v interface{}) {
	o.AdditionalOwnerUsers = v
}

// GetBusinessOwnerUsers returns the BusinessOwnerUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAudits) GetBusinessOwnerUsers() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.BusinessOwnerUsers
}

// GetBusinessOwnerUsersOk returns a tuple with the BusinessOwnerUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetBusinessOwnerUsersOk() (*interface{}, bool) {
	if o == nil || IsNil(o.BusinessOwnerUsers) {
		return nil, false
	}
	return &o.BusinessOwnerUsers, true
}

// HasBusinessOwnerUsers returns a boolean if a field has been set.
func (o *OpsAudits) HasBusinessOwnerUsers() bool {
	if o != nil && !IsNil(o.BusinessOwnerUsers) {
		return true
	}

	return false
}

// SetBusinessOwnerUsers gets a reference to the given interface{} and assigns it to the BusinessOwnerUsers field.
func (o *OpsAudits) SetBusinessOwnerUsers(v interface{}) {
	o.BusinessOwnerUsers = v
}

// GetScopes returns the Scopes field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *OpsAudits) GetScopes() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetScopesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return &o.Scopes, true
}

// SetScopes sets field value
func (o *OpsAudits) SetScopes(v interface{}) {
	o.Scopes = v
}

// GetCustomText6 returns the CustomText6 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText6() string {
	if o == nil || IsNil(o.CustomText6) {
		var ret string
		return ret
	}
	return *o.CustomText6
}

// GetCustomText6Ok returns a tuple with the CustomText6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText6Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText6) {
		return nil, false
	}
	return o.CustomText6, true
}

// HasCustomText6 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText6() bool {
	if o != nil && !IsNil(o.CustomText6) {
		return true
	}

	return false
}

// SetCustomText6 gets a reference to the given string and assigns it to the CustomText6 field.
func (o *OpsAudits) SetCustomText6(v string) {
	o.CustomText6 = &v
}

// GetCustomText7 returns the CustomText7 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText7() string {
	if o == nil || IsNil(o.CustomText7) {
		var ret string
		return ret
	}
	return *o.CustomText7
}

// GetCustomText7Ok returns a tuple with the CustomText7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText7Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText7) {
		return nil, false
	}
	return o.CustomText7, true
}

// HasCustomText7 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText7() bool {
	if o != nil && !IsNil(o.CustomText7) {
		return true
	}

	return false
}

// SetCustomText7 gets a reference to the given string and assigns it to the CustomText7 field.
func (o *OpsAudits) SetCustomText7(v string) {
	o.CustomText7 = &v
}

// GetCustomText8 returns the CustomText8 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText8() string {
	if o == nil || IsNil(o.CustomText8) {
		var ret string
		return ret
	}
	return *o.CustomText8
}

// GetCustomText8Ok returns a tuple with the CustomText8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText8Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText8) {
		return nil, false
	}
	return o.CustomText8, true
}

// HasCustomText8 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText8() bool {
	if o != nil && !IsNil(o.CustomText8) {
		return true
	}

	return false
}

// SetCustomText8 gets a reference to the given string and assigns it to the CustomText8 field.
func (o *OpsAudits) SetCustomText8(v string) {
	o.CustomText8 = &v
}

// GetCustomText9 returns the CustomText9 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText9() string {
	if o == nil || IsNil(o.CustomText9) {
		var ret string
		return ret
	}
	return *o.CustomText9
}

// GetCustomText9Ok returns a tuple with the CustomText9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText9Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText9) {
		return nil, false
	}
	return o.CustomText9, true
}

// HasCustomText9 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText9() bool {
	if o != nil && !IsNil(o.CustomText9) {
		return true
	}

	return false
}

// SetCustomText9 gets a reference to the given string and assigns it to the CustomText9 field.
func (o *OpsAudits) SetCustomText9(v string) {
	o.CustomText9 = &v
}

// GetCustomText10 returns the CustomText10 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText10() string {
	if o == nil || IsNil(o.CustomText10) {
		var ret string
		return ret
	}
	return *o.CustomText10
}

// GetCustomText10Ok returns a tuple with the CustomText10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText10Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText10) {
		return nil, false
	}
	return o.CustomText10, true
}

// HasCustomText10 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText10() bool {
	if o != nil && !IsNil(o.CustomText10) {
		return true
	}

	return false
}

// SetCustomText10 gets a reference to the given string and assigns it to the CustomText10 field.
func (o *OpsAudits) SetCustomText10(v string) {
	o.CustomText10 = &v
}

// GetCustomText11 returns the CustomText11 field value if set, zero value otherwise.
func (o *OpsAudits) GetCustomText11() string {
	if o == nil || IsNil(o.CustomText11) {
		var ret string
		return ret
	}
	return *o.CustomText11
}

// GetCustomText11Ok returns a tuple with the CustomText11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetCustomText11Ok() (*string, bool) {
	if o == nil || IsNil(o.CustomText11) {
		return nil, false
	}
	return o.CustomText11, true
}

// HasCustomText11 returns a boolean if a field has been set.
func (o *OpsAudits) HasCustomText11() bool {
	if o != nil && !IsNil(o.CustomText11) {
		return true
	}

	return false
}

// SetCustomText11 gets a reference to the given string and assigns it to the CustomText11 field.
func (o *OpsAudits) SetCustomText11(v string) {
	o.CustomText11 = &v
}

// GetFieldData returns the FieldData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAudits) GetFieldData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FieldData
}

// GetFieldDataOk returns a tuple with the FieldData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetFieldDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FieldData) {
		return nil, false
	}
	return &o.FieldData, true
}

// HasFieldData returns a boolean if a field has been set.
func (o *OpsAudits) HasFieldData() bool {
	if o != nil && !IsNil(o.FieldData) {
		return true
	}

	return false
}

// SetFieldData gets a reference to the given interface{} and assigns it to the FieldData field.
func (o *OpsAudits) SetFieldData(v interface{}) {
	o.FieldData = v
}

// GetOpsAuditAuditReportStatusId returns the OpsAuditAuditReportStatusId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditAuditReportStatusId() int32 {
	if o == nil || IsNil(o.OpsAuditAuditReportStatusId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditAuditReportStatusId
}

// GetOpsAuditAuditReportStatusIdOk returns a tuple with the OpsAuditAuditReportStatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditAuditReportStatusIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditAuditReportStatusId) {
		return nil, false
	}
	return o.OpsAuditAuditReportStatusId, true
}

// HasOpsAuditAuditReportStatusId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditAuditReportStatusId() bool {
	if o != nil && !IsNil(o.OpsAuditAuditReportStatusId) {
		return true
	}

	return false
}

// SetOpsAuditAuditReportStatusId gets a reference to the given int32 and assigns it to the OpsAuditAuditReportStatusId field.
func (o *OpsAudits) SetOpsAuditAuditReportStatusId(v int32) {
	o.OpsAuditAuditReportStatusId = &v
}

// GetOpsAuditTeamResponsibleId returns the OpsAuditTeamResponsibleId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditTeamResponsibleId() int32 {
	if o == nil || IsNil(o.OpsAuditTeamResponsibleId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditTeamResponsibleId
}

// GetOpsAuditTeamResponsibleIdOk returns a tuple with the OpsAuditTeamResponsibleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditTeamResponsibleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditTeamResponsibleId) {
		return nil, false
	}
	return o.OpsAuditTeamResponsibleId, true
}

// HasOpsAuditTeamResponsibleId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditTeamResponsibleId() bool {
	if o != nil && !IsNil(o.OpsAuditTeamResponsibleId) {
		return true
	}

	return false
}

// SetOpsAuditTeamResponsibleId gets a reference to the given int32 and assigns it to the OpsAuditTeamResponsibleId field.
func (o *OpsAudits) SetOpsAuditTeamResponsibleId(v int32) {
	o.OpsAuditTeamResponsibleId = &v
}

// GetOpsAuditAcpId returns the OpsAuditAcpId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditAcpId() int32 {
	if o == nil || IsNil(o.OpsAuditAcpId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditAcpId
}

// GetOpsAuditAcpIdOk returns a tuple with the OpsAuditAcpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditAcpIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditAcpId) {
		return nil, false
	}
	return o.OpsAuditAcpId, true
}

// HasOpsAuditAcpId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditAcpId() bool {
	if o != nil && !IsNil(o.OpsAuditAcpId) {
		return true
	}

	return false
}

// SetOpsAuditAcpId gets a reference to the given int32 and assigns it to the OpsAuditAcpId field.
func (o *OpsAudits) SetOpsAuditAcpId(v int32) {
	o.OpsAuditAcpId = &v
}

// GetOpsAuditOtherRatingId returns the OpsAuditOtherRatingId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditOtherRatingId() int32 {
	if o == nil || IsNil(o.OpsAuditOtherRatingId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditOtherRatingId
}

// GetOpsAuditOtherRatingIdOk returns a tuple with the OpsAuditOtherRatingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditOtherRatingIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditOtherRatingId) {
		return nil, false
	}
	return o.OpsAuditOtherRatingId, true
}

// HasOpsAuditOtherRatingId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditOtherRatingId() bool {
	if o != nil && !IsNil(o.OpsAuditOtherRatingId) {
		return true
	}

	return false
}

// SetOpsAuditOtherRatingId gets a reference to the given int32 and assigns it to the OpsAuditOtherRatingId field.
func (o *OpsAudits) SetOpsAuditOtherRatingId(v int32) {
	o.OpsAuditOtherRatingId = &v
}

// GetOpsAuditDivisionId returns the OpsAuditDivisionId field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditDivisionId() int32 {
	if o == nil || IsNil(o.OpsAuditDivisionId) {
		var ret int32
		return ret
	}
	return *o.OpsAuditDivisionId
}

// GetOpsAuditDivisionIdOk returns a tuple with the OpsAuditDivisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditDivisionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OpsAuditDivisionId) {
		return nil, false
	}
	return o.OpsAuditDivisionId, true
}

// HasOpsAuditDivisionId returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditDivisionId() bool {
	if o != nil && !IsNil(o.OpsAuditDivisionId) {
		return true
	}

	return false
}

// SetOpsAuditDivisionId gets a reference to the given int32 and assigns it to the OpsAuditDivisionId field.
func (o *OpsAudits) SetOpsAuditDivisionId(v int32) {
	o.OpsAuditDivisionId = &v
}

// GetProjectManagerUserId returns the ProjectManagerUserId field value if set, zero value otherwise.
func (o *OpsAudits) GetProjectManagerUserId() int32 {
	if o == nil || IsNil(o.ProjectManagerUserId) {
		var ret int32
		return ret
	}
	return *o.ProjectManagerUserId
}

// GetProjectManagerUserIdOk returns a tuple with the ProjectManagerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetProjectManagerUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectManagerUserId) {
		return nil, false
	}
	return o.ProjectManagerUserId, true
}

// HasProjectManagerUserId returns a boolean if a field has been set.
func (o *OpsAudits) HasProjectManagerUserId() bool {
	if o != nil && !IsNil(o.ProjectManagerUserId) {
		return true
	}

	return false
}

// SetProjectManagerUserId gets a reference to the given int32 and assigns it to the ProjectManagerUserId field.
func (o *OpsAudits) SetProjectManagerUserId(v int32) {
	o.ProjectManagerUserId = &v
}

// GetProjectCoordinatorUserId returns the ProjectCoordinatorUserId field value if set, zero value otherwise.
func (o *OpsAudits) GetProjectCoordinatorUserId() int32 {
	if o == nil || IsNil(o.ProjectCoordinatorUserId) {
		var ret int32
		return ret
	}
	return *o.ProjectCoordinatorUserId
}

// GetProjectCoordinatorUserIdOk returns a tuple with the ProjectCoordinatorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetProjectCoordinatorUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectCoordinatorUserId) {
		return nil, false
	}
	return o.ProjectCoordinatorUserId, true
}

// HasProjectCoordinatorUserId returns a boolean if a field has been set.
func (o *OpsAudits) HasProjectCoordinatorUserId() bool {
	if o != nil && !IsNil(o.ProjectCoordinatorUserId) {
		return true
	}

	return false
}

// SetProjectCoordinatorUserId gets a reference to the given int32 and assigns it to the ProjectCoordinatorUserId field.
func (o *OpsAudits) SetProjectCoordinatorUserId(v int32) {
	o.ProjectCoordinatorUserId = &v
}

// GetFlattened returns the Flattened field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpsAudits) GetFlattened() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Flattened
}

// GetFlattenedOk returns a tuple with the Flattened field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpsAudits) GetFlattenedOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Flattened) {
		return nil, false
	}
	return &o.Flattened, true
}

// HasFlattened returns a boolean if a field has been set.
func (o *OpsAudits) HasFlattened() bool {
	if o != nil && !IsNil(o.Flattened) {
		return true
	}

	return false
}

// SetFlattened gets a reference to the given interface{} and assigns it to the Flattened field.
func (o *OpsAudits) SetFlattened(v interface{}) {
	o.Flattened = v
}

// GetIsFlattened returns the IsFlattened field value if set, zero value otherwise.
func (o *OpsAudits) GetIsFlattened() bool {
	if o == nil || IsNil(o.IsFlattened) {
		var ret bool
		return ret
	}
	return *o.IsFlattened
}

// GetIsFlattenedOk returns a tuple with the IsFlattened field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetIsFlattenedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFlattened) {
		return nil, false
	}
	return o.IsFlattened, true
}

// HasIsFlattened returns a boolean if a field has been set.
func (o *OpsAudits) HasIsFlattened() bool {
	if o != nil && !IsNil(o.IsFlattened) {
		return true
	}

	return false
}

// SetIsFlattened gets a reference to the given bool and assigns it to the IsFlattened field.
func (o *OpsAudits) SetIsFlattened(v bool) {
	o.IsFlattened = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *OpsAudits) GetPurpose() string {
	if o == nil || IsNil(o.Purpose) {
		var ret string
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetPurposeOk() (*string, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *OpsAudits) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given string and assigns it to the Purpose field.
func (o *OpsAudits) SetPurpose(v string) {
	o.Purpose = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *OpsAudits) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *OpsAudits) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *OpsAudits) SetScope(v string) {
	o.Scope = &v
}

// GetDraftReportDate returns the DraftReportDate field value if set, zero value otherwise.
func (o *OpsAudits) GetDraftReportDate() string {
	if o == nil || IsNil(o.DraftReportDate) {
		var ret string
		return ret
	}
	return *o.DraftReportDate
}

// GetDraftReportDateOk returns a tuple with the DraftReportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetDraftReportDateOk() (*string, bool) {
	if o == nil || IsNil(o.DraftReportDate) {
		return nil, false
	}
	return o.DraftReportDate, true
}

// HasDraftReportDate returns a boolean if a field has been set.
func (o *OpsAudits) HasDraftReportDate() bool {
	if o != nil && !IsNil(o.DraftReportDate) {
		return true
	}

	return false
}

// SetDraftReportDate gets a reference to the given string and assigns it to the DraftReportDate field.
func (o *OpsAudits) SetDraftReportDate(v string) {
	o.DraftReportDate = &v
}

// GetOpeningMeetingDate returns the OpeningMeetingDate field value if set, zero value otherwise.
func (o *OpsAudits) GetOpeningMeetingDate() string {
	if o == nil || IsNil(o.OpeningMeetingDate) {
		var ret string
		return ret
	}
	return *o.OpeningMeetingDate
}

// GetOpeningMeetingDateOk returns a tuple with the OpeningMeetingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpeningMeetingDateOk() (*string, bool) {
	if o == nil || IsNil(o.OpeningMeetingDate) {
		return nil, false
	}
	return o.OpeningMeetingDate, true
}

// HasOpeningMeetingDate returns a boolean if a field has been set.
func (o *OpsAudits) HasOpeningMeetingDate() bool {
	if o != nil && !IsNil(o.OpeningMeetingDate) {
		return true
	}

	return false
}

// SetOpeningMeetingDate gets a reference to the given string and assigns it to the OpeningMeetingDate field.
func (o *OpsAudits) SetOpeningMeetingDate(v string) {
	o.OpeningMeetingDate = &v
}

// GetFrameworkId returns the FrameworkId field value if set, zero value otherwise.
func (o *OpsAudits) GetFrameworkId() int32 {
	if o == nil || IsNil(o.FrameworkId) {
		var ret int32
		return ret
	}
	return *o.FrameworkId
}

// GetFrameworkIdOk returns a tuple with the FrameworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetFrameworkIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FrameworkId) {
		return nil, false
	}
	return o.FrameworkId, true
}

// HasFrameworkId returns a boolean if a field has been set.
func (o *OpsAudits) HasFrameworkId() bool {
	if o != nil && !IsNil(o.FrameworkId) {
		return true
	}

	return false
}

// SetFrameworkId gets a reference to the given int32 and assigns it to the FrameworkId field.
func (o *OpsAudits) SetFrameworkId(v int32) {
	o.FrameworkId = &v
}

// GetPlanningEndDate returns the PlanningEndDate field value if set, zero value otherwise.
func (o *OpsAudits) GetPlanningEndDate() string {
	if o == nil || IsNil(o.PlanningEndDate) {
		var ret string
		return ret
	}
	return *o.PlanningEndDate
}

// GetPlanningEndDateOk returns a tuple with the PlanningEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetPlanningEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.PlanningEndDate) {
		return nil, false
	}
	return o.PlanningEndDate, true
}

// HasPlanningEndDate returns a boolean if a field has been set.
func (o *OpsAudits) HasPlanningEndDate() bool {
	if o != nil && !IsNil(o.PlanningEndDate) {
		return true
	}

	return false
}

// SetPlanningEndDate gets a reference to the given string and assigns it to the PlanningEndDate field.
func (o *OpsAudits) SetPlanningEndDate(v string) {
	o.PlanningEndDate = &v
}

// GetFieldworkEndDate returns the FieldworkEndDate field value if set, zero value otherwise.
func (o *OpsAudits) GetFieldworkEndDate() string {
	if o == nil || IsNil(o.FieldworkEndDate) {
		var ret string
		return ret
	}
	return *o.FieldworkEndDate
}

// GetFieldworkEndDateOk returns a tuple with the FieldworkEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetFieldworkEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.FieldworkEndDate) {
		return nil, false
	}
	return o.FieldworkEndDate, true
}

// HasFieldworkEndDate returns a boolean if a field has been set.
func (o *OpsAudits) HasFieldworkEndDate() bool {
	if o != nil && !IsNil(o.FieldworkEndDate) {
		return true
	}

	return false
}

// SetFieldworkEndDate gets a reference to the given string and assigns it to the FieldworkEndDate field.
func (o *OpsAudits) SetFieldworkEndDate(v string) {
	o.FieldworkEndDate = &v
}

// GetBudgetHours returns the BudgetHours field value if set, zero value otherwise.
func (o *OpsAudits) GetBudgetHours() float32 {
	if o == nil || IsNil(o.BudgetHours) {
		var ret float32
		return ret
	}
	return *o.BudgetHours
}

// GetBudgetHoursOk returns a tuple with the BudgetHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetBudgetHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.BudgetHours) {
		return nil, false
	}
	return o.BudgetHours, true
}

// HasBudgetHours returns a boolean if a field has been set.
func (o *OpsAudits) HasBudgetHours() bool {
	if o != nil && !IsNil(o.BudgetHours) {
		return true
	}

	return false
}

// SetBudgetHours gets a reference to the given float32 and assigns it to the BudgetHours field.
func (o *OpsAudits) SetBudgetHours(v float32) {
	o.BudgetHours = &v
}

// GetActualHours returns the ActualHours field value if set, zero value otherwise.
func (o *OpsAudits) GetActualHours() float32 {
	if o == nil || IsNil(o.ActualHours) {
		var ret float32
		return ret
	}
	return *o.ActualHours
}

// GetActualHoursOk returns a tuple with the ActualHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetActualHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualHours) {
		return nil, false
	}
	return o.ActualHours, true
}

// HasActualHours returns a boolean if a field has been set.
func (o *OpsAudits) HasActualHours() bool {
	if o != nil && !IsNil(o.ActualHours) {
		return true
	}

	return false
}

// SetActualHours gets a reference to the given float32 and assigns it to the ActualHours field.
func (o *OpsAudits) SetActualHours(v float32) {
	o.ActualHours = &v
}

// GetExternalHours returns the ExternalHours field value if set, zero value otherwise.
func (o *OpsAudits) GetExternalHours() float32 {
	if o == nil || IsNil(o.ExternalHours) {
		var ret float32
		return ret
	}
	return *o.ExternalHours
}

// GetExternalHoursOk returns a tuple with the ExternalHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetExternalHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.ExternalHours) {
		return nil, false
	}
	return o.ExternalHours, true
}

// HasExternalHours returns a boolean if a field has been set.
func (o *OpsAudits) HasExternalHours() bool {
	if o != nil && !IsNil(o.ExternalHours) {
		return true
	}

	return false
}

// SetExternalHours gets a reference to the given float32 and assigns it to the ExternalHours field.
func (o *OpsAudits) SetExternalHours(v float32) {
	o.ExternalHours = &v
}

// GetInternalHours returns the InternalHours field value if set, zero value otherwise.
func (o *OpsAudits) GetInternalHours() float32 {
	if o == nil || IsNil(o.InternalHours) {
		var ret float32
		return ret
	}
	return *o.InternalHours
}

// GetInternalHoursOk returns a tuple with the InternalHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetInternalHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.InternalHours) {
		return nil, false
	}
	return o.InternalHours, true
}

// HasInternalHours returns a boolean if a field has been set.
func (o *OpsAudits) HasInternalHours() bool {
	if o != nil && !IsNil(o.InternalHours) {
		return true
	}

	return false
}

// SetInternalHours gets a reference to the given float32 and assigns it to the InternalHours field.
func (o *OpsAudits) SetInternalHours(v float32) {
	o.InternalHours = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *OpsAudits) GetTemplateId() int32 {
	if o == nil || IsNil(o.TemplateId) {
		var ret int32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *OpsAudits) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int32 and assigns it to the TemplateId field.
func (o *OpsAudits) SetTemplateId(v int32) {
	o.TemplateId = &v
}

// GetIsProcessing returns the IsProcessing field value
func (o *OpsAudits) GetIsProcessing() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsProcessing
}

// GetIsProcessingOk returns a tuple with the IsProcessing field value
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetIsProcessingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsProcessing, true
}

// SetIsProcessing sets field value
func (o *OpsAudits) SetIsProcessing(v bool) {
	o.IsProcessing = v
}

// GetAssessmentTemplateId returns the AssessmentTemplateId field value if set, zero value otherwise.
func (o *OpsAudits) GetAssessmentTemplateId() int32 {
	if o == nil || IsNil(o.AssessmentTemplateId) {
		var ret int32
		return ret
	}
	return *o.AssessmentTemplateId
}

// GetAssessmentTemplateIdOk returns a tuple with the AssessmentTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetAssessmentTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AssessmentTemplateId) {
		return nil, false
	}
	return o.AssessmentTemplateId, true
}

// HasAssessmentTemplateId returns a boolean if a field has been set.
func (o *OpsAudits) HasAssessmentTemplateId() bool {
	if o != nil && !IsNil(o.AssessmentTemplateId) {
		return true
	}

	return false
}

// SetAssessmentTemplateId gets a reference to the given int32 and assigns it to the AssessmentTemplateId field.
func (o *OpsAudits) SetAssessmentTemplateId(v int32) {
	o.AssessmentTemplateId = &v
}

// GetAllowedAssessableType returns the AllowedAssessableType field value if set, zero value otherwise.
func (o *OpsAudits) GetAllowedAssessableType() string {
	if o == nil || IsNil(o.AllowedAssessableType) {
		var ret string
		return ret
	}
	return *o.AllowedAssessableType
}

// GetAllowedAssessableTypeOk returns a tuple with the AllowedAssessableType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetAllowedAssessableTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedAssessableType) {
		return nil, false
	}
	return o.AllowedAssessableType, true
}

// HasAllowedAssessableType returns a boolean if a field has been set.
func (o *OpsAudits) HasAllowedAssessableType() bool {
	if o != nil && !IsNil(o.AllowedAssessableType) {
		return true
	}

	return false
}

// SetAllowedAssessableType gets a reference to the given string and assigns it to the AllowedAssessableType field.
func (o *OpsAudits) SetAllowedAssessableType(v string) {
	o.AllowedAssessableType = &v
}

// GetIsRiskAssessmentEnabled returns the IsRiskAssessmentEnabled field value
func (o *OpsAudits) GetIsRiskAssessmentEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRiskAssessmentEnabled
}

// GetIsRiskAssessmentEnabledOk returns a tuple with the IsRiskAssessmentEnabled field value
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetIsRiskAssessmentEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsRiskAssessmentEnabled, true
}

// SetIsRiskAssessmentEnabled sets field value
func (o *OpsAudits) SetIsRiskAssessmentEnabled(v bool) {
	o.IsRiskAssessmentEnabled = v
}

// GetAssessmentId returns the AssessmentId field value if set, zero value otherwise.
func (o *OpsAudits) GetAssessmentId() int32 {
	if o == nil || IsNil(o.AssessmentId) {
		var ret int32
		return ret
	}
	return *o.AssessmentId
}

// GetAssessmentIdOk returns a tuple with the AssessmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetAssessmentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AssessmentId) {
		return nil, false
	}
	return o.AssessmentId, true
}

// HasAssessmentId returns a boolean if a field has been set.
func (o *OpsAudits) HasAssessmentId() bool {
	if o != nil && !IsNil(o.AssessmentId) {
		return true
	}

	return false
}

// SetAssessmentId gets a reference to the given int32 and assigns it to the AssessmentId field.
func (o *OpsAudits) SetAssessmentId(v int32) {
	o.AssessmentId = &v
}

// GetProjectObjectives returns the ProjectObjectives field value if set, zero value otherwise.
func (o *OpsAudits) GetProjectObjectives() string {
	if o == nil || IsNil(o.ProjectObjectives) {
		var ret string
		return ret
	}
	return *o.ProjectObjectives
}

// GetProjectObjectivesOk returns a tuple with the ProjectObjectives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetProjectObjectivesOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectObjectives) {
		return nil, false
	}
	return o.ProjectObjectives, true
}

// HasProjectObjectives returns a boolean if a field has been set.
func (o *OpsAudits) HasProjectObjectives() bool {
	if o != nil && !IsNil(o.ProjectObjectives) {
		return true
	}

	return false
}

// SetProjectObjectives gets a reference to the given string and assigns it to the ProjectObjectives field.
func (o *OpsAudits) SetProjectObjectives(v string) {
	o.ProjectObjectives = &v
}

// GetProjectDrivers returns the ProjectDrivers field value if set, zero value otherwise.
func (o *OpsAudits) GetProjectDrivers() string {
	if o == nil || IsNil(o.ProjectDrivers) {
		var ret string
		return ret
	}
	return *o.ProjectDrivers
}

// GetProjectDriversOk returns a tuple with the ProjectDrivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetProjectDriversOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectDrivers) {
		return nil, false
	}
	return o.ProjectDrivers, true
}

// HasProjectDrivers returns a boolean if a field has been set.
func (o *OpsAudits) HasProjectDrivers() bool {
	if o != nil && !IsNil(o.ProjectDrivers) {
		return true
	}

	return false
}

// SetProjectDrivers gets a reference to the given string and assigns it to the ProjectDrivers field.
func (o *OpsAudits) SetProjectDrivers(v string) {
	o.ProjectDrivers = &v
}

// GetKeyMilestones returns the KeyMilestones field value if set, zero value otherwise.
func (o *OpsAudits) GetKeyMilestones() string {
	if o == nil || IsNil(o.KeyMilestones) {
		var ret string
		return ret
	}
	return *o.KeyMilestones
}

// GetKeyMilestonesOk returns a tuple with the KeyMilestones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetKeyMilestonesOk() (*string, bool) {
	if o == nil || IsNil(o.KeyMilestones) {
		return nil, false
	}
	return o.KeyMilestones, true
}

// HasKeyMilestones returns a boolean if a field has been set.
func (o *OpsAudits) HasKeyMilestones() bool {
	if o != nil && !IsNil(o.KeyMilestones) {
		return true
	}

	return false
}

// SetKeyMilestones gets a reference to the given string and assigns it to the KeyMilestones field.
func (o *OpsAudits) SetKeyMilestones(v string) {
	o.KeyMilestones = &v
}

// GetPriorProjectKnowledge returns the PriorProjectKnowledge field value if set, zero value otherwise.
func (o *OpsAudits) GetPriorProjectKnowledge() string {
	if o == nil || IsNil(o.PriorProjectKnowledge) {
		var ret string
		return ret
	}
	return *o.PriorProjectKnowledge
}

// GetPriorProjectKnowledgeOk returns a tuple with the PriorProjectKnowledge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetPriorProjectKnowledgeOk() (*string, bool) {
	if o == nil || IsNil(o.PriorProjectKnowledge) {
		return nil, false
	}
	return o.PriorProjectKnowledge, true
}

// HasPriorProjectKnowledge returns a boolean if a field has been set.
func (o *OpsAudits) HasPriorProjectKnowledge() bool {
	if o != nil && !IsNil(o.PriorProjectKnowledge) {
		return true
	}

	return false
}

// SetPriorProjectKnowledge gets a reference to the given string and assigns it to the PriorProjectKnowledge field.
func (o *OpsAudits) SetPriorProjectKnowledge(v string) {
	o.PriorProjectKnowledge = &v
}

// GetHighLevelScope returns the HighLevelScope field value if set, zero value otherwise.
func (o *OpsAudits) GetHighLevelScope() string {
	if o == nil || IsNil(o.HighLevelScope) {
		var ret string
		return ret
	}
	return *o.HighLevelScope
}

// GetHighLevelScopeOk returns a tuple with the HighLevelScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetHighLevelScopeOk() (*string, bool) {
	if o == nil || IsNil(o.HighLevelScope) {
		return nil, false
	}
	return o.HighLevelScope, true
}

// HasHighLevelScope returns a boolean if a field has been set.
func (o *OpsAudits) HasHighLevelScope() bool {
	if o != nil && !IsNil(o.HighLevelScope) {
		return true
	}

	return false
}

// SetHighLevelScope gets a reference to the given string and assigns it to the HighLevelScope field.
func (o *OpsAudits) SetHighLevelScope(v string) {
	o.HighLevelScope = &v
}

// GetScopingConsiderationsCompletionDate returns the ScopingConsiderationsCompletionDate field value if set, zero value otherwise.
func (o *OpsAudits) GetScopingConsiderationsCompletionDate() string {
	if o == nil || IsNil(o.ScopingConsiderationsCompletionDate) {
		var ret string
		return ret
	}
	return *o.ScopingConsiderationsCompletionDate
}

// GetScopingConsiderationsCompletionDateOk returns a tuple with the ScopingConsiderationsCompletionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetScopingConsiderationsCompletionDateOk() (*string, bool) {
	if o == nil || IsNil(o.ScopingConsiderationsCompletionDate) {
		return nil, false
	}
	return o.ScopingConsiderationsCompletionDate, true
}

// HasScopingConsiderationsCompletionDate returns a boolean if a field has been set.
func (o *OpsAudits) HasScopingConsiderationsCompletionDate() bool {
	if o != nil && !IsNil(o.ScopingConsiderationsCompletionDate) {
		return true
	}

	return false
}

// SetScopingConsiderationsCompletionDate gets a reference to the given string and assigns it to the ScopingConsiderationsCompletionDate field.
func (o *OpsAudits) SetScopingConsiderationsCompletionDate(v string) {
	o.ScopingConsiderationsCompletionDate = &v
}

// GetScopingConsiderationsLastUpdated returns the ScopingConsiderationsLastUpdated field value if set, zero value otherwise.
func (o *OpsAudits) GetScopingConsiderationsLastUpdated() string {
	if o == nil || IsNil(o.ScopingConsiderationsLastUpdated) {
		var ret string
		return ret
	}
	return *o.ScopingConsiderationsLastUpdated
}

// GetScopingConsiderationsLastUpdatedOk returns a tuple with the ScopingConsiderationsLastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetScopingConsiderationsLastUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.ScopingConsiderationsLastUpdated) {
		return nil, false
	}
	return o.ScopingConsiderationsLastUpdated, true
}

// HasScopingConsiderationsLastUpdated returns a boolean if a field has been set.
func (o *OpsAudits) HasScopingConsiderationsLastUpdated() bool {
	if o != nil && !IsNil(o.ScopingConsiderationsLastUpdated) {
		return true
	}

	return false
}

// SetScopingConsiderationsLastUpdated gets a reference to the given string and assigns it to the ScopingConsiderationsLastUpdated field.
func (o *OpsAudits) SetScopingConsiderationsLastUpdated(v string) {
	o.ScopingConsiderationsLastUpdated = &v
}

// GetOpsAuditCustomDecimal1 returns the OpsAuditCustomDecimal1 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDecimal1() float32 {
	if o == nil || IsNil(o.OpsAuditCustomDecimal1) {
		var ret float32
		return ret
	}
	return *o.OpsAuditCustomDecimal1
}

// GetOpsAuditCustomDecimal1Ok returns a tuple with the OpsAuditCustomDecimal1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDecimal1Ok() (*float32, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDecimal1) {
		return nil, false
	}
	return o.OpsAuditCustomDecimal1, true
}

// HasOpsAuditCustomDecimal1 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDecimal1() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDecimal1) {
		return true
	}

	return false
}

// SetOpsAuditCustomDecimal1 gets a reference to the given float32 and assigns it to the OpsAuditCustomDecimal1 field.
func (o *OpsAudits) SetOpsAuditCustomDecimal1(v float32) {
	o.OpsAuditCustomDecimal1 = &v
}

// GetOpsAuditCustomDecimal2 returns the OpsAuditCustomDecimal2 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDecimal2() float32 {
	if o == nil || IsNil(o.OpsAuditCustomDecimal2) {
		var ret float32
		return ret
	}
	return *o.OpsAuditCustomDecimal2
}

// GetOpsAuditCustomDecimal2Ok returns a tuple with the OpsAuditCustomDecimal2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDecimal2Ok() (*float32, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDecimal2) {
		return nil, false
	}
	return o.OpsAuditCustomDecimal2, true
}

// HasOpsAuditCustomDecimal2 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDecimal2() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDecimal2) {
		return true
	}

	return false
}

// SetOpsAuditCustomDecimal2 gets a reference to the given float32 and assigns it to the OpsAuditCustomDecimal2 field.
func (o *OpsAudits) SetOpsAuditCustomDecimal2(v float32) {
	o.OpsAuditCustomDecimal2 = &v
}

// GetOpsAuditCustomDecimal3 returns the OpsAuditCustomDecimal3 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDecimal3() float32 {
	if o == nil || IsNil(o.OpsAuditCustomDecimal3) {
		var ret float32
		return ret
	}
	return *o.OpsAuditCustomDecimal3
}

// GetOpsAuditCustomDecimal3Ok returns a tuple with the OpsAuditCustomDecimal3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDecimal3Ok() (*float32, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDecimal3) {
		return nil, false
	}
	return o.OpsAuditCustomDecimal3, true
}

// HasOpsAuditCustomDecimal3 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDecimal3() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDecimal3) {
		return true
	}

	return false
}

// SetOpsAuditCustomDecimal3 gets a reference to the given float32 and assigns it to the OpsAuditCustomDecimal3 field.
func (o *OpsAudits) SetOpsAuditCustomDecimal3(v float32) {
	o.OpsAuditCustomDecimal3 = &v
}

// GetOpsAuditCustomDecimal4 returns the OpsAuditCustomDecimal4 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDecimal4() float32 {
	if o == nil || IsNil(o.OpsAuditCustomDecimal4) {
		var ret float32
		return ret
	}
	return *o.OpsAuditCustomDecimal4
}

// GetOpsAuditCustomDecimal4Ok returns a tuple with the OpsAuditCustomDecimal4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDecimal4Ok() (*float32, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDecimal4) {
		return nil, false
	}
	return o.OpsAuditCustomDecimal4, true
}

// HasOpsAuditCustomDecimal4 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDecimal4() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDecimal4) {
		return true
	}

	return false
}

// SetOpsAuditCustomDecimal4 gets a reference to the given float32 and assigns it to the OpsAuditCustomDecimal4 field.
func (o *OpsAudits) SetOpsAuditCustomDecimal4(v float32) {
	o.OpsAuditCustomDecimal4 = &v
}

// GetOpsAuditCustomDecimal5 returns the OpsAuditCustomDecimal5 field value if set, zero value otherwise.
func (o *OpsAudits) GetOpsAuditCustomDecimal5() float32 {
	if o == nil || IsNil(o.OpsAuditCustomDecimal5) {
		var ret float32
		return ret
	}
	return *o.OpsAuditCustomDecimal5
}

// GetOpsAuditCustomDecimal5Ok returns a tuple with the OpsAuditCustomDecimal5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAudits) GetOpsAuditCustomDecimal5Ok() (*float32, bool) {
	if o == nil || IsNil(o.OpsAuditCustomDecimal5) {
		return nil, false
	}
	return o.OpsAuditCustomDecimal5, true
}

// HasOpsAuditCustomDecimal5 returns a boolean if a field has been set.
func (o *OpsAudits) HasOpsAuditCustomDecimal5() bool {
	if o != nil && !IsNil(o.OpsAuditCustomDecimal5) {
		return true
	}

	return false
}

// SetOpsAuditCustomDecimal5 gets a reference to the given float32 and assigns it to the OpsAuditCustomDecimal5 field.
func (o *OpsAudits) SetOpsAuditCustomDecimal5(v float32) {
	o.OpsAuditCustomDecimal5 = &v
}

func (o OpsAudits) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpsAudits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.OpsAuditPeriodId) {
		toSerialize["ops_audit_period_id"] = o.OpsAuditPeriodId
	}
	if !IsNil(o.OpsAuditCategoryId) {
		toSerialize["ops_audit_category_id"] = o.OpsAuditCategoryId
	}
	if !IsNil(o.CreatorUserId) {
		toSerialize["creator_user_id"] = o.CreatorUserId
	}
	toSerialize["title"] = o.Title
	if !IsNil(o.OpsAuditRiskLevelId) {
		toSerialize["ops_audit_risk_level_id"] = o.OpsAuditRiskLevelId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["is_template"] = o.IsTemplate
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ArchivedDate) {
		toSerialize["archived_date"] = o.ArchivedDate
	}
	if !IsNil(o.ArchivedByUserId) {
		toSerialize["archived_by_user_id"] = o.ArchivedByUserId
	}
	if o.Totals != nil {
		toSerialize["totals"] = o.Totals
	}
	if o.SectionTotals != nil {
		toSerialize["section_totals"] = o.SectionTotals
	}
	if !IsNil(o.LeadUserId) {
		toSerialize["lead_user_id"] = o.LeadUserId
	}
	if !IsNil(o.ScopeStartDate) {
		toSerialize["scope_start_date"] = o.ScopeStartDate
	}
	if !IsNil(o.ScopeEndDate) {
		toSerialize["scope_end_date"] = o.ScopeEndDate
	}
	toSerialize["uid"] = o.Uid
	if !IsNil(o.StartedDate) {
		toSerialize["started_date"] = o.StartedDate
	}
	if !IsNil(o.StartedByUserId) {
		toSerialize["started_by_user_id"] = o.StartedByUserId
	}
	if !IsNil(o.CanceledDate) {
		toSerialize["canceled_date"] = o.CanceledDate
	}
	if !IsNil(o.CanceledByUserId) {
		toSerialize["canceled_by_user_id"] = o.CanceledByUserId
	}
	if !IsNil(o.RiskFactors) {
		toSerialize["risk_factors"] = o.RiskFactors
	}
	if !IsNil(o.OpsAuditCustomSelect1OptionId) {
		toSerialize["ops_audit_custom_select1_option_id"] = o.OpsAuditCustomSelect1OptionId
	}
	if !IsNil(o.OpsAuditCustomSelect2OptionId) {
		toSerialize["ops_audit_custom_select2_option_id"] = o.OpsAuditCustomSelect2OptionId
	}
	if !IsNil(o.OpsAuditCustomSelect3OptionId) {
		toSerialize["ops_audit_custom_select3_option_id"] = o.OpsAuditCustomSelect3OptionId
	}
	if !IsNil(o.OpsAuditOpinionId) {
		toSerialize["ops_audit_opinion_id"] = o.OpsAuditOpinionId
	}
	if !IsNil(o.SystemsReviewed) {
		toSerialize["systems_reviewed"] = o.SystemsReviewed
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.CustomText1) {
		toSerialize["custom_text1"] = o.CustomText1
	}
	if !IsNil(o.CustomText2) {
		toSerialize["custom_text2"] = o.CustomText2
	}
	if !IsNil(o.ResultCustomText1) {
		toSerialize["result_custom_text1"] = o.ResultCustomText1
	}
	if !IsNil(o.ResultCustomText2) {
		toSerialize["result_custom_text2"] = o.ResultCustomText2
	}
	if !IsNil(o.ExecutiveSummary) {
		toSerialize["executive_summary"] = o.ExecutiveSummary
	}
	if !IsNil(o.ResultFeedback) {
		toSerialize["result_feedback"] = o.ResultFeedback
	}
	if !IsNil(o.OpsAuditResultCustomSelect1OptionId) {
		toSerialize["ops_audit_result_custom_select1_option_id"] = o.OpsAuditResultCustomSelect1OptionId
	}
	if !IsNil(o.OpsAuditResultCustomSelect2OptionId) {
		toSerialize["ops_audit_result_custom_select2_option_id"] = o.OpsAuditResultCustomSelect2OptionId
	}
	if !IsNil(o.OpsAuditResultCustomSelect3OptionId) {
		toSerialize["ops_audit_result_custom_select3_option_id"] = o.OpsAuditResultCustomSelect3OptionId
	}
	if !IsNil(o.OpsAuditResultCustomSelect4OptionId) {
		toSerialize["ops_audit_result_custom_select4_option_id"] = o.OpsAuditResultCustomSelect4OptionId
	}
	if !IsNil(o.ProjectDirectorUserId) {
		toSerialize["project_director_user_id"] = o.ProjectDirectorUserId
	}
	if !IsNil(o.ProjectLeaderUserId) {
		toSerialize["project_leader_user_id"] = o.ProjectLeaderUserId
	}
	if !IsNil(o.FinalReportDate) {
		toSerialize["final_report_date"] = o.FinalReportDate
	}
	if !IsNil(o.EstimatedStartDate) {
		toSerialize["estimated_start_date"] = o.EstimatedStartDate
	}
	if !IsNil(o.EstimatedEndDate) {
		toSerialize["estimated_end_date"] = o.EstimatedEndDate
	}
	if o.PreparerUsers != nil {
		toSerialize["preparer_users"] = o.PreparerUsers
	}
	if o.ReviewerUsers != nil {
		toSerialize["reviewer_users"] = o.ReviewerUsers
	}
	if o.SecondaryReviewerUsers != nil {
		toSerialize["secondary_reviewer_users"] = o.SecondaryReviewerUsers
	}
	if o.ProjectOptions != nil {
		toSerialize["project_options"] = o.ProjectOptions
	}
	if !IsNil(o.OldBudgetHours) {
		toSerialize["old_budget_hours"] = o.OldBudgetHours
	}
	if !IsNil(o.CustomText3) {
		toSerialize["custom_text3"] = o.CustomText3
	}
	if !IsNil(o.OldActualHours) {
		toSerialize["old_actual_hours"] = o.OldActualHours
	}
	if !IsNil(o.OldInternalHours) {
		toSerialize["old_internal_hours"] = o.OldInternalHours
	}
	if !IsNil(o.OldExternalHours) {
		toSerialize["old_external_hours"] = o.OldExternalHours
	}
	if !IsNil(o.ClosingMeetingDate) {
		toSerialize["closing_meeting_date"] = o.ClosingMeetingDate
	}
	if !IsNil(o.OpsAuditCustomDate1) {
		toSerialize["ops_audit_custom_date1"] = o.OpsAuditCustomDate1
	}
	if !IsNil(o.OpsAuditCustomDate2) {
		toSerialize["ops_audit_custom_date2"] = o.OpsAuditCustomDate2
	}
	if !IsNil(o.OpsAuditCustomDate3) {
		toSerialize["ops_audit_custom_date3"] = o.OpsAuditCustomDate3
	}
	if !IsNil(o.OpsAuditCustomDate4) {
		toSerialize["ops_audit_custom_date4"] = o.OpsAuditCustomDate4
	}
	if !IsNil(o.OpsAuditCustomDate5) {
		toSerialize["ops_audit_custom_date5"] = o.OpsAuditCustomDate5
	}
	if !IsNil(o.OpsAuditCustomDate6) {
		toSerialize["ops_audit_custom_date6"] = o.OpsAuditCustomDate6
	}
	if !IsNil(o.CustomText4) {
		toSerialize["custom_text4"] = o.CustomText4
	}
	if !IsNil(o.CustomText5) {
		toSerialize["custom_text5"] = o.CustomText5
	}
	if !IsNil(o.ReactivatedDate) {
		toSerialize["reactivated_date"] = o.ReactivatedDate
	}
	if !IsNil(o.ReactivatedByUserId) {
		toSerialize["reactivated_by_user_id"] = o.ReactivatedByUserId
	}
	if !IsNil(o.OpsAuditCustomSelect4OptionId) {
		toSerialize["ops_audit_custom_select4_option_id"] = o.OpsAuditCustomSelect4OptionId
	}
	if !IsNil(o.OpsAuditCustomSelect5OptionId) {
		toSerialize["ops_audit_custom_select5_option_id"] = o.OpsAuditCustomSelect5OptionId
	}
	if !IsNil(o.OpsAuditCustomDate7) {
		toSerialize["ops_audit_custom_date7"] = o.OpsAuditCustomDate7
	}
	if !IsNil(o.OpsAuditCustomDate8) {
		toSerialize["ops_audit_custom_date8"] = o.OpsAuditCustomDate8
	}
	if o.AdditionalOwnerUsers != nil {
		toSerialize["additional_owner_users"] = o.AdditionalOwnerUsers
	}
	if o.BusinessOwnerUsers != nil {
		toSerialize["business_owner_users"] = o.BusinessOwnerUsers
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.CustomText6) {
		toSerialize["custom_text6"] = o.CustomText6
	}
	if !IsNil(o.CustomText7) {
		toSerialize["custom_text7"] = o.CustomText7
	}
	if !IsNil(o.CustomText8) {
		toSerialize["custom_text8"] = o.CustomText8
	}
	if !IsNil(o.CustomText9) {
		toSerialize["custom_text9"] = o.CustomText9
	}
	if !IsNil(o.CustomText10) {
		toSerialize["custom_text10"] = o.CustomText10
	}
	if !IsNil(o.CustomText11) {
		toSerialize["custom_text11"] = o.CustomText11
	}
	if o.FieldData != nil {
		toSerialize["field_data"] = o.FieldData
	}
	if !IsNil(o.OpsAuditAuditReportStatusId) {
		toSerialize["ops_audit_audit_report_status_id"] = o.OpsAuditAuditReportStatusId
	}
	if !IsNil(o.OpsAuditTeamResponsibleId) {
		toSerialize["ops_audit_team_responsible_id"] = o.OpsAuditTeamResponsibleId
	}
	if !IsNil(o.OpsAuditAcpId) {
		toSerialize["ops_audit_acp_id"] = o.OpsAuditAcpId
	}
	if !IsNil(o.OpsAuditOtherRatingId) {
		toSerialize["ops_audit_other_rating_id"] = o.OpsAuditOtherRatingId
	}
	if !IsNil(o.OpsAuditDivisionId) {
		toSerialize["ops_audit_division_id"] = o.OpsAuditDivisionId
	}
	if !IsNil(o.ProjectManagerUserId) {
		toSerialize["project_manager_user_id"] = o.ProjectManagerUserId
	}
	if !IsNil(o.ProjectCoordinatorUserId) {
		toSerialize["project_coordinator_user_id"] = o.ProjectCoordinatorUserId
	}
	if o.Flattened != nil {
		toSerialize["flattened"] = o.Flattened
	}
	if !IsNil(o.IsFlattened) {
		toSerialize["is_flattened"] = o.IsFlattened
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.DraftReportDate) {
		toSerialize["draft_report_date"] = o.DraftReportDate
	}
	if !IsNil(o.OpeningMeetingDate) {
		toSerialize["opening_meeting_date"] = o.OpeningMeetingDate
	}
	if !IsNil(o.FrameworkId) {
		toSerialize["framework_id"] = o.FrameworkId
	}
	if !IsNil(o.PlanningEndDate) {
		toSerialize["planning_end_date"] = o.PlanningEndDate
	}
	if !IsNil(o.FieldworkEndDate) {
		toSerialize["fieldwork_end_date"] = o.FieldworkEndDate
	}
	if !IsNil(o.BudgetHours) {
		toSerialize["budget_hours"] = o.BudgetHours
	}
	if !IsNil(o.ActualHours) {
		toSerialize["actual_hours"] = o.ActualHours
	}
	if !IsNil(o.ExternalHours) {
		toSerialize["external_hours"] = o.ExternalHours
	}
	if !IsNil(o.InternalHours) {
		toSerialize["internal_hours"] = o.InternalHours
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	toSerialize["is_processing"] = o.IsProcessing
	if !IsNil(o.AssessmentTemplateId) {
		toSerialize["assessment_template_id"] = o.AssessmentTemplateId
	}
	if !IsNil(o.AllowedAssessableType) {
		toSerialize["allowed_assessable_type"] = o.AllowedAssessableType
	}
	toSerialize["is_risk_assessment_enabled"] = o.IsRiskAssessmentEnabled
	if !IsNil(o.AssessmentId) {
		toSerialize["assessment_id"] = o.AssessmentId
	}
	if !IsNil(o.ProjectObjectives) {
		toSerialize["project_objectives"] = o.ProjectObjectives
	}
	if !IsNil(o.ProjectDrivers) {
		toSerialize["project_drivers"] = o.ProjectDrivers
	}
	if !IsNil(o.KeyMilestones) {
		toSerialize["key_milestones"] = o.KeyMilestones
	}
	if !IsNil(o.PriorProjectKnowledge) {
		toSerialize["prior_project_knowledge"] = o.PriorProjectKnowledge
	}
	if !IsNil(o.HighLevelScope) {
		toSerialize["high_level_scope"] = o.HighLevelScope
	}
	if !IsNil(o.ScopingConsiderationsCompletionDate) {
		toSerialize["scoping_considerations_completion_date"] = o.ScopingConsiderationsCompletionDate
	}
	if !IsNil(o.ScopingConsiderationsLastUpdated) {
		toSerialize["scoping_considerations_last_updated"] = o.ScopingConsiderationsLastUpdated
	}
	if !IsNil(o.OpsAuditCustomDecimal1) {
		toSerialize["ops_audit_custom_decimal1"] = o.OpsAuditCustomDecimal1
	}
	if !IsNil(o.OpsAuditCustomDecimal2) {
		toSerialize["ops_audit_custom_decimal2"] = o.OpsAuditCustomDecimal2
	}
	if !IsNil(o.OpsAuditCustomDecimal3) {
		toSerialize["ops_audit_custom_decimal3"] = o.OpsAuditCustomDecimal3
	}
	if !IsNil(o.OpsAuditCustomDecimal4) {
		toSerialize["ops_audit_custom_decimal4"] = o.OpsAuditCustomDecimal4
	}
	if !IsNil(o.OpsAuditCustomDecimal5) {
		toSerialize["ops_audit_custom_decimal5"] = o.OpsAuditCustomDecimal5
	}
	return toSerialize, nil
}

type NullableOpsAudits struct {
	value *OpsAudits
	isSet bool
}

func (v NullableOpsAudits) Get() *OpsAudits {
	return v.value
}

func (v *NullableOpsAudits) Set(val *OpsAudits) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsAudits) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsAudits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsAudits(val *OpsAudits) *NullableOpsAudits {
	return &NullableOpsAudits{value: val, isSet: true}
}

func (v NullableOpsAudits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsAudits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


