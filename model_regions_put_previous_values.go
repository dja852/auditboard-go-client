/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RegionsPutPreviousValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegionsPutPreviousValues{}

// RegionsPutPreviousValues struct for RegionsPutPreviousValues
type RegionsPutPreviousValues struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	SortOrder *int32 `json:"sort_order,omitempty"`
	RegionCode *string `json:"region_code,omitempty"`
	Name *string `json:"name,omitempty"`
	// Note: This is a Foreign Key to `workspaces.id`.<fk table='workspaces' column='id'/>
	WorkspaceId *int32 `json:"workspace_id,omitempty"`
	FormTemplates interface{} `json:"form_templates,omitempty"`
	EnabledAttributes interface{} `json:"enabled_attributes,omitempty"`
	ExcludedAttributes interface{} `json:"excluded_attributes,omitempty"`
	Scopes interface{} `json:"scopes,omitempty"`
	Options interface{} `json:"options,omitempty"`
}

// NewRegionsPutPreviousValues instantiates a new RegionsPutPreviousValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionsPutPreviousValues() *RegionsPutPreviousValues {
	this := RegionsPutPreviousValues{}
	return &this
}

// NewRegionsPutPreviousValuesWithDefaults instantiates a new RegionsPutPreviousValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionsPutPreviousValuesWithDefaults() *RegionsPutPreviousValues {
	this := RegionsPutPreviousValues{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RegionsPutPreviousValues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPutPreviousValues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RegionsPutPreviousValues) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RegionsPutPreviousValues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPutPreviousValues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *RegionsPutPreviousValues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *RegionsPutPreviousValues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPutPreviousValues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *RegionsPutPreviousValues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *RegionsPutPreviousValues) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPutPreviousValues) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *RegionsPutPreviousValues) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *RegionsPutPreviousValues) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPutPreviousValues) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *RegionsPutPreviousValues) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetRegionCode returns the RegionCode field value if set, zero value otherwise.
func (o *RegionsPutPreviousValues) GetRegionCode() string {
	if o == nil || IsNil(o.RegionCode) {
		var ret string
		return ret
	}
	return *o.RegionCode
}

// GetRegionCodeOk returns a tuple with the RegionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPutPreviousValues) GetRegionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RegionCode) {
		return nil, false
	}
	return o.RegionCode, true
}

// HasRegionCode returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasRegionCode() bool {
	if o != nil && !IsNil(o.RegionCode) {
		return true
	}

	return false
}

// SetRegionCode gets a reference to the given string and assigns it to the RegionCode field.
func (o *RegionsPutPreviousValues) SetRegionCode(v string) {
	o.RegionCode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RegionsPutPreviousValues) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPutPreviousValues) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RegionsPutPreviousValues) SetName(v string) {
	o.Name = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *RegionsPutPreviousValues) GetWorkspaceId() int32 {
	if o == nil || IsNil(o.WorkspaceId) {
		var ret int32
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsPutPreviousValues) GetWorkspaceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.WorkspaceId) {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasWorkspaceId() bool {
	if o != nil && !IsNil(o.WorkspaceId) {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given int32 and assigns it to the WorkspaceId field.
func (o *RegionsPutPreviousValues) SetWorkspaceId(v int32) {
	o.WorkspaceId = &v
}

// GetFormTemplates returns the FormTemplates field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegionsPutPreviousValues) GetFormTemplates() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FormTemplates
}

// GetFormTemplatesOk returns a tuple with the FormTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegionsPutPreviousValues) GetFormTemplatesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FormTemplates) {
		return nil, false
	}
	return &o.FormTemplates, true
}

// HasFormTemplates returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasFormTemplates() bool {
	if o != nil && !IsNil(o.FormTemplates) {
		return true
	}

	return false
}

// SetFormTemplates gets a reference to the given interface{} and assigns it to the FormTemplates field.
func (o *RegionsPutPreviousValues) SetFormTemplates(v interface{}) {
	o.FormTemplates = v
}

// GetEnabledAttributes returns the EnabledAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegionsPutPreviousValues) GetEnabledAttributes() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.EnabledAttributes
}

// GetEnabledAttributesOk returns a tuple with the EnabledAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegionsPutPreviousValues) GetEnabledAttributesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.EnabledAttributes) {
		return nil, false
	}
	return &o.EnabledAttributes, true
}

// HasEnabledAttributes returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasEnabledAttributes() bool {
	if o != nil && !IsNil(o.EnabledAttributes) {
		return true
	}

	return false
}

// SetEnabledAttributes gets a reference to the given interface{} and assigns it to the EnabledAttributes field.
func (o *RegionsPutPreviousValues) SetEnabledAttributes(v interface{}) {
	o.EnabledAttributes = v
}

// GetExcludedAttributes returns the ExcludedAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegionsPutPreviousValues) GetExcludedAttributes() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ExcludedAttributes
}

// GetExcludedAttributesOk returns a tuple with the ExcludedAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegionsPutPreviousValues) GetExcludedAttributesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ExcludedAttributes) {
		return nil, false
	}
	return &o.ExcludedAttributes, true
}

// HasExcludedAttributes returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasExcludedAttributes() bool {
	if o != nil && !IsNil(o.ExcludedAttributes) {
		return true
	}

	return false
}

// SetExcludedAttributes gets a reference to the given interface{} and assigns it to the ExcludedAttributes field.
func (o *RegionsPutPreviousValues) SetExcludedAttributes(v interface{}) {
	o.ExcludedAttributes = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegionsPutPreviousValues) GetScopes() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegionsPutPreviousValues) GetScopesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return &o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given interface{} and assigns it to the Scopes field.
func (o *RegionsPutPreviousValues) SetScopes(v interface{}) {
	o.Scopes = v
}

// GetOptions returns the Options field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegionsPutPreviousValues) GetOptions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegionsPutPreviousValues) GetOptionsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return &o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *RegionsPutPreviousValues) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given interface{} and assigns it to the Options field.
func (o *RegionsPutPreviousValues) SetOptions(v interface{}) {
	o.Options = v
}

func (o RegionsPutPreviousValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegionsPutPreviousValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sort_order"] = o.SortOrder
	}
	if !IsNil(o.RegionCode) {
		toSerialize["region_code"] = o.RegionCode
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.WorkspaceId) {
		toSerialize["workspace_id"] = o.WorkspaceId
	}
	if o.FormTemplates != nil {
		toSerialize["form_templates"] = o.FormTemplates
	}
	if o.EnabledAttributes != nil {
		toSerialize["enabled_attributes"] = o.EnabledAttributes
	}
	if o.ExcludedAttributes != nil {
		toSerialize["excluded_attributes"] = o.ExcludedAttributes
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableRegionsPutPreviousValues struct {
	value *RegionsPutPreviousValues
	isSet bool
}

func (v NullableRegionsPutPreviousValues) Get() *RegionsPutPreviousValues {
	return v.value
}

func (v *NullableRegionsPutPreviousValues) Set(val *RegionsPutPreviousValues) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionsPutPreviousValues) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionsPutPreviousValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionsPutPreviousValues(val *RegionsPutPreviousValues) *NullableRegionsPutPreviousValues {
	return &NullableRegionsPutPreviousValues{value: val, isSet: true}
}

func (v NullableRegionsPutPreviousValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionsPutPreviousValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


