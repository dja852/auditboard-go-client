/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the TimesheetEntriesPutPreviousValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimesheetEntriesPutPreviousValues{}

// TimesheetEntriesPutPreviousValues struct for TimesheetEntriesPutPreviousValues
type TimesheetEntriesPutPreviousValues struct {
	// Note: This is a Primary Key.<pk/>
	Id *int32 `json:"id,omitempty"`
	Date *string `json:"date,omitempty"`
	Hours *float32 `json:"hours,omitempty"`
	// Note: This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
	UserId *int32 `json:"user_id,omitempty"`
	TimesheetableType *string `json:"timesheetable_type,omitempty"`
	TimesheetableId *int32 `json:"timesheetable_id,omitempty"`
	TimesheetableMeta *string `json:"timesheetable_meta,omitempty"`
	// Note: This is a Foreign Key to `timesheet_projects.id`.<fk table='timesheet_projects' column='id'/>
	TimesheetProjectId *int32 `json:"timesheet_project_id,omitempty"`
	Comment *string `json:"comment,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewTimesheetEntriesPutPreviousValues instantiates a new TimesheetEntriesPutPreviousValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimesheetEntriesPutPreviousValues() *TimesheetEntriesPutPreviousValues {
	this := TimesheetEntriesPutPreviousValues{}
	return &this
}

// NewTimesheetEntriesPutPreviousValuesWithDefaults instantiates a new TimesheetEntriesPutPreviousValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimesheetEntriesPutPreviousValuesWithDefaults() *TimesheetEntriesPutPreviousValues {
	this := TimesheetEntriesPutPreviousValues{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TimesheetEntriesPutPreviousValues) SetId(v int32) {
	o.Id = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *TimesheetEntriesPutPreviousValues) SetDate(v string) {
	o.Date = &v
}

// GetHours returns the Hours field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetHours() float32 {
	if o == nil || IsNil(o.Hours) {
		var ret float32
		return ret
	}
	return *o.Hours
}

// GetHoursOk returns a tuple with the Hours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetHoursOk() (*float32, bool) {
	if o == nil || IsNil(o.Hours) {
		return nil, false
	}
	return o.Hours, true
}

// HasHours returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasHours() bool {
	if o != nil && !IsNil(o.Hours) {
		return true
	}

	return false
}

// SetHours gets a reference to the given float32 and assigns it to the Hours field.
func (o *TimesheetEntriesPutPreviousValues) SetHours(v float32) {
	o.Hours = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *TimesheetEntriesPutPreviousValues) SetUserId(v int32) {
	o.UserId = &v
}

// GetTimesheetableType returns the TimesheetableType field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetTimesheetableType() string {
	if o == nil || IsNil(o.TimesheetableType) {
		var ret string
		return ret
	}
	return *o.TimesheetableType
}

// GetTimesheetableTypeOk returns a tuple with the TimesheetableType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetTimesheetableTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TimesheetableType) {
		return nil, false
	}
	return o.TimesheetableType, true
}

// HasTimesheetableType returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasTimesheetableType() bool {
	if o != nil && !IsNil(o.TimesheetableType) {
		return true
	}

	return false
}

// SetTimesheetableType gets a reference to the given string and assigns it to the TimesheetableType field.
func (o *TimesheetEntriesPutPreviousValues) SetTimesheetableType(v string) {
	o.TimesheetableType = &v
}

// GetTimesheetableId returns the TimesheetableId field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetTimesheetableId() int32 {
	if o == nil || IsNil(o.TimesheetableId) {
		var ret int32
		return ret
	}
	return *o.TimesheetableId
}

// GetTimesheetableIdOk returns a tuple with the TimesheetableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetTimesheetableIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TimesheetableId) {
		return nil, false
	}
	return o.TimesheetableId, true
}

// HasTimesheetableId returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasTimesheetableId() bool {
	if o != nil && !IsNil(o.TimesheetableId) {
		return true
	}

	return false
}

// SetTimesheetableId gets a reference to the given int32 and assigns it to the TimesheetableId field.
func (o *TimesheetEntriesPutPreviousValues) SetTimesheetableId(v int32) {
	o.TimesheetableId = &v
}

// GetTimesheetableMeta returns the TimesheetableMeta field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetTimesheetableMeta() string {
	if o == nil || IsNil(o.TimesheetableMeta) {
		var ret string
		return ret
	}
	return *o.TimesheetableMeta
}

// GetTimesheetableMetaOk returns a tuple with the TimesheetableMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetTimesheetableMetaOk() (*string, bool) {
	if o == nil || IsNil(o.TimesheetableMeta) {
		return nil, false
	}
	return o.TimesheetableMeta, true
}

// HasTimesheetableMeta returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasTimesheetableMeta() bool {
	if o != nil && !IsNil(o.TimesheetableMeta) {
		return true
	}

	return false
}

// SetTimesheetableMeta gets a reference to the given string and assigns it to the TimesheetableMeta field.
func (o *TimesheetEntriesPutPreviousValues) SetTimesheetableMeta(v string) {
	o.TimesheetableMeta = &v
}

// GetTimesheetProjectId returns the TimesheetProjectId field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetTimesheetProjectId() int32 {
	if o == nil || IsNil(o.TimesheetProjectId) {
		var ret int32
		return ret
	}
	return *o.TimesheetProjectId
}

// GetTimesheetProjectIdOk returns a tuple with the TimesheetProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetTimesheetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TimesheetProjectId) {
		return nil, false
	}
	return o.TimesheetProjectId, true
}

// HasTimesheetProjectId returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasTimesheetProjectId() bool {
	if o != nil && !IsNil(o.TimesheetProjectId) {
		return true
	}

	return false
}

// SetTimesheetProjectId gets a reference to the given int32 and assigns it to the TimesheetProjectId field.
func (o *TimesheetEntriesPutPreviousValues) SetTimesheetProjectId(v int32) {
	o.TimesheetProjectId = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *TimesheetEntriesPutPreviousValues) SetComment(v string) {
	o.Comment = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *TimesheetEntriesPutPreviousValues) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *TimesheetEntriesPutPreviousValues) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TimesheetEntriesPutPreviousValues) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesheetEntriesPutPreviousValues) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TimesheetEntriesPutPreviousValues) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *TimesheetEntriesPutPreviousValues) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o TimesheetEntriesPutPreviousValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimesheetEntriesPutPreviousValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Hours) {
		toSerialize["hours"] = o.Hours
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.TimesheetableType) {
		toSerialize["timesheetable_type"] = o.TimesheetableType
	}
	if !IsNil(o.TimesheetableId) {
		toSerialize["timesheetable_id"] = o.TimesheetableId
	}
	if !IsNil(o.TimesheetableMeta) {
		toSerialize["timesheetable_meta"] = o.TimesheetableMeta
	}
	if !IsNil(o.TimesheetProjectId) {
		toSerialize["timesheet_project_id"] = o.TimesheetProjectId
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableTimesheetEntriesPutPreviousValues struct {
	value *TimesheetEntriesPutPreviousValues
	isSet bool
}

func (v NullableTimesheetEntriesPutPreviousValues) Get() *TimesheetEntriesPutPreviousValues {
	return v.value
}

func (v *NullableTimesheetEntriesPutPreviousValues) Set(val *TimesheetEntriesPutPreviousValues) {
	v.value = val
	v.isSet = true
}

func (v NullableTimesheetEntriesPutPreviousValues) IsSet() bool {
	return v.isSet
}

func (v *NullableTimesheetEntriesPutPreviousValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimesheetEntriesPutPreviousValues(val *TimesheetEntriesPutPreviousValues) *NullableTimesheetEntriesPutPreviousValues {
	return &NullableTimesheetEntriesPutPreviousValues{value: val, isSet: true}
}

func (v NullableTimesheetEntriesPutPreviousValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimesheetEntriesPutPreviousValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


