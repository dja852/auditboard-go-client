/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the GlobalPermissionsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalPermissionsPut{}

// GlobalPermissionsPut struct for GlobalPermissionsPut
type GlobalPermissionsPut struct {
	GlobalPermission *GlobalPermissionsPutGlobalPermission `json:"global_permission,omitempty"`
	PreviousValues *GlobalPermissionsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewGlobalPermissionsPut instantiates a new GlobalPermissionsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalPermissionsPut() *GlobalPermissionsPut {
	this := GlobalPermissionsPut{}
	return &this
}

// NewGlobalPermissionsPutWithDefaults instantiates a new GlobalPermissionsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalPermissionsPutWithDefaults() *GlobalPermissionsPut {
	this := GlobalPermissionsPut{}
	return &this
}

// GetGlobalPermission returns the GlobalPermission field value if set, zero value otherwise.
func (o *GlobalPermissionsPut) GetGlobalPermission() GlobalPermissionsPutGlobalPermission {
	if o == nil || IsNil(o.GlobalPermission) {
		var ret GlobalPermissionsPutGlobalPermission
		return ret
	}
	return *o.GlobalPermission
}

// GetGlobalPermissionOk returns a tuple with the GlobalPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalPermissionsPut) GetGlobalPermissionOk() (*GlobalPermissionsPutGlobalPermission, bool) {
	if o == nil || IsNil(o.GlobalPermission) {
		return nil, false
	}
	return o.GlobalPermission, true
}

// HasGlobalPermission returns a boolean if a field has been set.
func (o *GlobalPermissionsPut) HasGlobalPermission() bool {
	if o != nil && !IsNil(o.GlobalPermission) {
		return true
	}

	return false
}

// SetGlobalPermission gets a reference to the given GlobalPermissionsPutGlobalPermission and assigns it to the GlobalPermission field.
func (o *GlobalPermissionsPut) SetGlobalPermission(v GlobalPermissionsPutGlobalPermission) {
	o.GlobalPermission = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *GlobalPermissionsPut) GetPreviousValues() GlobalPermissionsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret GlobalPermissionsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalPermissionsPut) GetPreviousValuesOk() (*GlobalPermissionsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *GlobalPermissionsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given GlobalPermissionsPutPreviousValues and assigns it to the PreviousValues field.
func (o *GlobalPermissionsPut) SetPreviousValues(v GlobalPermissionsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o GlobalPermissionsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalPermissionsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlobalPermission) {
		toSerialize["global_permission"] = o.GlobalPermission
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableGlobalPermissionsPut struct {
	value *GlobalPermissionsPut
	isSet bool
}

func (v NullableGlobalPermissionsPut) Get() *GlobalPermissionsPut {
	return v.value
}

func (v *NullableGlobalPermissionsPut) Set(val *GlobalPermissionsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalPermissionsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalPermissionsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalPermissionsPut(val *GlobalPermissionsPut) *NullableGlobalPermissionsPut {
	return &NullableGlobalPermissionsPut{value: val, isSet: true}
}

func (v NullableGlobalPermissionsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalPermissionsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


