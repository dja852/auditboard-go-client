/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the AssessmentTemplatesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssessmentTemplatesGet200Response{}

// AssessmentTemplatesGet200Response struct for AssessmentTemplatesGet200Response
type AssessmentTemplatesGet200Response struct {
	AssessmentTemplates []AssessmentTemplates `json:"assessment_templates,omitempty"`
}

// NewAssessmentTemplatesGet200Response instantiates a new AssessmentTemplatesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssessmentTemplatesGet200Response() *AssessmentTemplatesGet200Response {
	this := AssessmentTemplatesGet200Response{}
	return &this
}

// NewAssessmentTemplatesGet200ResponseWithDefaults instantiates a new AssessmentTemplatesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssessmentTemplatesGet200ResponseWithDefaults() *AssessmentTemplatesGet200Response {
	this := AssessmentTemplatesGet200Response{}
	return &this
}

// GetAssessmentTemplates returns the AssessmentTemplates field value if set, zero value otherwise.
func (o *AssessmentTemplatesGet200Response) GetAssessmentTemplates() []AssessmentTemplates {
	if o == nil || IsNil(o.AssessmentTemplates) {
		var ret []AssessmentTemplates
		return ret
	}
	return o.AssessmentTemplates
}

// GetAssessmentTemplatesOk returns a tuple with the AssessmentTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssessmentTemplatesGet200Response) GetAssessmentTemplatesOk() ([]AssessmentTemplates, bool) {
	if o == nil || IsNil(o.AssessmentTemplates) {
		return nil, false
	}
	return o.AssessmentTemplates, true
}

// HasAssessmentTemplates returns a boolean if a field has been set.
func (o *AssessmentTemplatesGet200Response) HasAssessmentTemplates() bool {
	if o != nil && !IsNil(o.AssessmentTemplates) {
		return true
	}

	return false
}

// SetAssessmentTemplates gets a reference to the given []AssessmentTemplates and assigns it to the AssessmentTemplates field.
func (o *AssessmentTemplatesGet200Response) SetAssessmentTemplates(v []AssessmentTemplates) {
	o.AssessmentTemplates = v
}

func (o AssessmentTemplatesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssessmentTemplatesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssessmentTemplates) {
		toSerialize["assessment_templates"] = o.AssessmentTemplates
	}
	return toSerialize, nil
}

type NullableAssessmentTemplatesGet200Response struct {
	value *AssessmentTemplatesGet200Response
	isSet bool
}

func (v NullableAssessmentTemplatesGet200Response) Get() *AssessmentTemplatesGet200Response {
	return v.value
}

func (v *NullableAssessmentTemplatesGet200Response) Set(val *AssessmentTemplatesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAssessmentTemplatesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAssessmentTemplatesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssessmentTemplatesGet200Response(val *AssessmentTemplatesGet200Response) *NullableAssessmentTemplatesGet200Response {
	return &NullableAssessmentTemplatesGet200Response{value: val, isSet: true}
}

func (v NullableAssessmentTemplatesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssessmentTemplatesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


