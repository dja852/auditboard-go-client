/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the IssuesIssueIdMovePostRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssuesIssueIdMovePostRequestData{}

// IssuesIssueIdMovePostRequestData struct for IssuesIssueIdMovePostRequestData
type IssuesIssueIdMovePostRequestData struct {
	// The id of the issue category.
	IssueCategoryId *string `json:"issue_category_id,omitempty"`
	// The id of the issue sourceable.
	IssuesourceableId *string `json:"issuesourceable_id,omitempty"`
	// The type of the issue sourceable.
	IssuesourceableType *string `json:"issuesourceable_type,omitempty"`
}

// NewIssuesIssueIdMovePostRequestData instantiates a new IssuesIssueIdMovePostRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssuesIssueIdMovePostRequestData() *IssuesIssueIdMovePostRequestData {
	this := IssuesIssueIdMovePostRequestData{}
	return &this
}

// NewIssuesIssueIdMovePostRequestDataWithDefaults instantiates a new IssuesIssueIdMovePostRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssuesIssueIdMovePostRequestDataWithDefaults() *IssuesIssueIdMovePostRequestData {
	this := IssuesIssueIdMovePostRequestData{}
	return &this
}

// GetIssueCategoryId returns the IssueCategoryId field value if set, zero value otherwise.
func (o *IssuesIssueIdMovePostRequestData) GetIssueCategoryId() string {
	if o == nil || IsNil(o.IssueCategoryId) {
		var ret string
		return ret
	}
	return *o.IssueCategoryId
}

// GetIssueCategoryIdOk returns a tuple with the IssueCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesIssueIdMovePostRequestData) GetIssueCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.IssueCategoryId) {
		return nil, false
	}
	return o.IssueCategoryId, true
}

// HasIssueCategoryId returns a boolean if a field has been set.
func (o *IssuesIssueIdMovePostRequestData) HasIssueCategoryId() bool {
	if o != nil && !IsNil(o.IssueCategoryId) {
		return true
	}

	return false
}

// SetIssueCategoryId gets a reference to the given string and assigns it to the IssueCategoryId field.
func (o *IssuesIssueIdMovePostRequestData) SetIssueCategoryId(v string) {
	o.IssueCategoryId = &v
}

// GetIssuesourceableId returns the IssuesourceableId field value if set, zero value otherwise.
func (o *IssuesIssueIdMovePostRequestData) GetIssuesourceableId() string {
	if o == nil || IsNil(o.IssuesourceableId) {
		var ret string
		return ret
	}
	return *o.IssuesourceableId
}

// GetIssuesourceableIdOk returns a tuple with the IssuesourceableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesIssueIdMovePostRequestData) GetIssuesourceableIdOk() (*string, bool) {
	if o == nil || IsNil(o.IssuesourceableId) {
		return nil, false
	}
	return o.IssuesourceableId, true
}

// HasIssuesourceableId returns a boolean if a field has been set.
func (o *IssuesIssueIdMovePostRequestData) HasIssuesourceableId() bool {
	if o != nil && !IsNil(o.IssuesourceableId) {
		return true
	}

	return false
}

// SetIssuesourceableId gets a reference to the given string and assigns it to the IssuesourceableId field.
func (o *IssuesIssueIdMovePostRequestData) SetIssuesourceableId(v string) {
	o.IssuesourceableId = &v
}

// GetIssuesourceableType returns the IssuesourceableType field value if set, zero value otherwise.
func (o *IssuesIssueIdMovePostRequestData) GetIssuesourceableType() string {
	if o == nil || IsNil(o.IssuesourceableType) {
		var ret string
		return ret
	}
	return *o.IssuesourceableType
}

// GetIssuesourceableTypeOk returns a tuple with the IssuesourceableType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesIssueIdMovePostRequestData) GetIssuesourceableTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IssuesourceableType) {
		return nil, false
	}
	return o.IssuesourceableType, true
}

// HasIssuesourceableType returns a boolean if a field has been set.
func (o *IssuesIssueIdMovePostRequestData) HasIssuesourceableType() bool {
	if o != nil && !IsNil(o.IssuesourceableType) {
		return true
	}

	return false
}

// SetIssuesourceableType gets a reference to the given string and assigns it to the IssuesourceableType field.
func (o *IssuesIssueIdMovePostRequestData) SetIssuesourceableType(v string) {
	o.IssuesourceableType = &v
}

func (o IssuesIssueIdMovePostRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssuesIssueIdMovePostRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IssueCategoryId) {
		toSerialize["issue_category_id"] = o.IssueCategoryId
	}
	if !IsNil(o.IssuesourceableId) {
		toSerialize["issuesourceable_id"] = o.IssuesourceableId
	}
	if !IsNil(o.IssuesourceableType) {
		toSerialize["issuesourceable_type"] = o.IssuesourceableType
	}
	return toSerialize, nil
}

type NullableIssuesIssueIdMovePostRequestData struct {
	value *IssuesIssueIdMovePostRequestData
	isSet bool
}

func (v NullableIssuesIssueIdMovePostRequestData) Get() *IssuesIssueIdMovePostRequestData {
	return v.value
}

func (v *NullableIssuesIssueIdMovePostRequestData) Set(val *IssuesIssueIdMovePostRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableIssuesIssueIdMovePostRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableIssuesIssueIdMovePostRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssuesIssueIdMovePostRequestData(val *IssuesIssueIdMovePostRequestData) *NullableIssuesIssueIdMovePostRequestData {
	return &NullableIssuesIssueIdMovePostRequestData{value: val, isSet: true}
}

func (v NullableIssuesIssueIdMovePostRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssuesIssueIdMovePostRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


