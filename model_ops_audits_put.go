/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the OpsAuditsPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpsAuditsPut{}

// OpsAuditsPut struct for OpsAuditsPut
type OpsAuditsPut struct {
	OpsAudit *OpsAuditsPutOpsAudit `json:"ops_audit,omitempty"`
	PreviousValues *OpsAuditsPutPreviousValues `json:"previous_values,omitempty"`
}

// NewOpsAuditsPut instantiates a new OpsAuditsPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsAuditsPut() *OpsAuditsPut {
	this := OpsAuditsPut{}
	return &this
}

// NewOpsAuditsPutWithDefaults instantiates a new OpsAuditsPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsAuditsPutWithDefaults() *OpsAuditsPut {
	this := OpsAuditsPut{}
	return &this
}

// GetOpsAudit returns the OpsAudit field value if set, zero value otherwise.
func (o *OpsAuditsPut) GetOpsAudit() OpsAuditsPutOpsAudit {
	if o == nil || IsNil(o.OpsAudit) {
		var ret OpsAuditsPutOpsAudit
		return ret
	}
	return *o.OpsAudit
}

// GetOpsAuditOk returns a tuple with the OpsAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditsPut) GetOpsAuditOk() (*OpsAuditsPutOpsAudit, bool) {
	if o == nil || IsNil(o.OpsAudit) {
		return nil, false
	}
	return o.OpsAudit, true
}

// HasOpsAudit returns a boolean if a field has been set.
func (o *OpsAuditsPut) HasOpsAudit() bool {
	if o != nil && !IsNil(o.OpsAudit) {
		return true
	}

	return false
}

// SetOpsAudit gets a reference to the given OpsAuditsPutOpsAudit and assigns it to the OpsAudit field.
func (o *OpsAuditsPut) SetOpsAudit(v OpsAuditsPutOpsAudit) {
	o.OpsAudit = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *OpsAuditsPut) GetPreviousValues() OpsAuditsPutPreviousValues {
	if o == nil || IsNil(o.PreviousValues) {
		var ret OpsAuditsPutPreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsAuditsPut) GetPreviousValuesOk() (*OpsAuditsPutPreviousValues, bool) {
	if o == nil || IsNil(o.PreviousValues) {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *OpsAuditsPut) HasPreviousValues() bool {
	if o != nil && !IsNil(o.PreviousValues) {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given OpsAuditsPutPreviousValues and assigns it to the PreviousValues field.
func (o *OpsAuditsPut) SetPreviousValues(v OpsAuditsPutPreviousValues) {
	o.PreviousValues = &v
}

func (o OpsAuditsPut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpsAuditsPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpsAudit) {
		toSerialize["ops_audit"] = o.OpsAudit
	}
	if !IsNil(o.PreviousValues) {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return toSerialize, nil
}

type NullableOpsAuditsPut struct {
	value *OpsAuditsPut
	isSet bool
}

func (v NullableOpsAuditsPut) Get() *OpsAuditsPut {
	return v.value
}

func (v *NullableOpsAuditsPut) Set(val *OpsAuditsPut) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsAuditsPut) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsAuditsPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsAuditsPut(val *OpsAuditsPut) *NullableOpsAuditsPut {
	return &NullableOpsAuditsPut{value: val, isSet: true}
}

func (v NullableOpsAuditsPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsAuditsPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


