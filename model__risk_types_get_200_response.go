/*
AuditBoard Developer Portal API Documentation

External API reference documentation.

API version: 23.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditboard

import (
	"encoding/json"
)

// checks if the RiskTypesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RiskTypesGet200Response{}

// RiskTypesGet200Response struct for RiskTypesGet200Response
type RiskTypesGet200Response struct {
	RiskTypes []RiskTypes `json:"risk_types,omitempty"`
}

// NewRiskTypesGet200Response instantiates a new RiskTypesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskTypesGet200Response() *RiskTypesGet200Response {
	this := RiskTypesGet200Response{}
	return &this
}

// NewRiskTypesGet200ResponseWithDefaults instantiates a new RiskTypesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskTypesGet200ResponseWithDefaults() *RiskTypesGet200Response {
	this := RiskTypesGet200Response{}
	return &this
}

// GetRiskTypes returns the RiskTypes field value if set, zero value otherwise.
func (o *RiskTypesGet200Response) GetRiskTypes() []RiskTypes {
	if o == nil || IsNil(o.RiskTypes) {
		var ret []RiskTypes
		return ret
	}
	return o.RiskTypes
}

// GetRiskTypesOk returns a tuple with the RiskTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskTypesGet200Response) GetRiskTypesOk() ([]RiskTypes, bool) {
	if o == nil || IsNil(o.RiskTypes) {
		return nil, false
	}
	return o.RiskTypes, true
}

// HasRiskTypes returns a boolean if a field has been set.
func (o *RiskTypesGet200Response) HasRiskTypes() bool {
	if o != nil && !IsNil(o.RiskTypes) {
		return true
	}

	return false
}

// SetRiskTypes gets a reference to the given []RiskTypes and assigns it to the RiskTypes field.
func (o *RiskTypesGet200Response) SetRiskTypes(v []RiskTypes) {
	o.RiskTypes = v
}

func (o RiskTypesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RiskTypesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RiskTypes) {
		toSerialize["risk_types"] = o.RiskTypes
	}
	return toSerialize, nil
}

type NullableRiskTypesGet200Response struct {
	value *RiskTypesGet200Response
	isSet bool
}

func (v NullableRiskTypesGet200Response) Get() *RiskTypesGet200Response {
	return v.value
}

func (v *NullableRiskTypesGet200Response) Set(val *RiskTypesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskTypesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskTypesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskTypesGet200Response(val *RiskTypesGet200Response) *NullableRiskTypesGet200Response {
	return &NullableRiskTypesGet200Response{value: val, isSet: true}
}

func (v NullableRiskTypesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskTypesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


